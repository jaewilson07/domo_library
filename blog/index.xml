<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>domolibrary</title>
<link>https://jaewilson07.github.io/domo_library/blog/</link>
<atom:link href="https://jaewilson07.github.io/domo_library/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.551</generator>
<lastBuildDate>Sat, 23 Mar 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>DomoPalooza 24 - Intro to Jupyter Workspaces</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2024-03-23_domopalooza24/dp24_intro_to_jupyter.html</link>
  <description><![CDATA[ 




<section id="intro-to-jupyter-workspaces" class="level1">
<h1>Intro to Jupyter Workspaces</h1>
<p>Presented by <a href="https://www.linkedin.com/in/jaewor/">Jae Wilson</a> and <a href="https://www.linkedin.com/in/riley-stahura-022128121">Riley Stahura</a> @ <a href="https://www.domo.com/domopalooza">Domopalooza 24</a></p>
<section id="audience" class="level3">
<h3 class="anchored" data-anchor-id="audience">Audience</h3>
<p>Domo Data Specialists with Intermediate to advanced Python coding experience</p>
</section>
<section id="prerequisite-domo-university-courses" class="level3">
<h3 class="anchored" data-anchor-id="prerequisite-domo-university-courses">Prerequisite Domo University Courses</h3>
<ul>
<li>Working with DataSets in Domo</li>
<li>Transforming Data in Domo</li>
</ul>
<p>You can enroll in these courses at any time though Domo University.</p>
</section>
<section id="description" class="level3">
<h3 class="anchored" data-anchor-id="description">Description</h3>
<p>Jupyter Workspaces in Domo is a web-based interactive development environment for Jupyter notebooks, code, and data. In this course, you‚Äôll learn how to integrate Jupyter into your Domo data connection and transformation pipeline.</p>
</section>
<section id="learning-objectives" class="level2">
<h2 class="anchored" data-anchor-id="learning-objectives">ü•Ö Learning Objectives</h2>
<hr>
<p>Upon completing this course learners should be able to:</p>
<ul>
<li>Create and run a Jupyter Workspace DataFlow in Domo</li>
<li>Integrate input and output DataSets with Jupyter Workspaces</li>
<li>Create accounts in Domo for secure programmatic credential access</li>
<li>Setup scheduling/triggering for Jupyter Workspaces DataFlows</li>
</ul>
</section>
<section id="agenda" class="level2">
<h2 class="anchored" data-anchor-id="agenda">üìã Agenda</h2>
<hr>
<section id="welcome-and-introduction-to-jupyter" class="level3">
<h3 class="anchored" data-anchor-id="welcome-and-introduction-to-jupyter">1300 - Welcome and Introduction to Jupyter</h3>
<p><strong>Introduction</strong></p>
<ul>
<li>Jupyter and Domo</li>
<li>Where is Jupyter located in Domo?</li>
</ul>
<p><strong>Jupyter Workspaces Setup</strong></p>
<ul>
<li><p>Creating a new Workspace</p></li>
<li><p>‚ñ∂Ô∏è Spin up a Workspace</p></li>
<li><p>‚ñ∂Ô∏è Clone <a href="https://github.com/jaewilson07/domopalooza-24.git">GitHub repo</a> <br></p></li>
<li><p>Workspace Configuration</p></li>
<li><p>Optional Configuration Steps</p>
<ul>
<li>Input Datasets</li>
<li>Output Datasets</li>
<li>Accounts</li>
<li>File Share</li>
</ul></li>
</ul>
</section>
<section id="tutorial-1---authentication-in-domo" class="level3">
<h3 class="anchored" data-anchor-id="tutorial-1---authentication-in-domo">Tutorial 1 - <a href="./_Tut1 - Authentication In Domo.ipynb">Authentication in Domo</a></h3>
<ul>
<li>API request basics</li>
<li>token-based authentication</li>
<li>network monitoring for API discovery</li>
</ul>
</section>
<section id="workspace-management" class="level3">
<h3 class="anchored" data-anchor-id="workspace-management">1400 - Workspace Management</h3>
<ul>
<li>Changing Ownership</li>
<li>Enabling Sharing and Sharing a Workspace <br></li>
<li>‚ñ∂Ô∏è Create a ‚ÄúDomoAccessToken‚Äù and ‚ÄúAbstract Credentials Store‚Äù account containing userame &amp; password. Share w. JupyerWorkspace</li>
<li>‚ñ∂Ô∏è Add an Output Dataset - ‚ÄúAccountList‚Äù to JupyterWorkspace <br></li>
<li>Creating a Jupyter Notebook</li>
<li>Left-hand navigation - Files, Input/Output Datasets, Accounts</li>
<li>Domo Jupyter Library
<ul>
<li>Reading and Writing to a Dataset</li>
<li>Getting Account Credentials</li>
</ul></li>
</ul>
</section>
<section id="tutorial-2---working-with-objects-domo-integration" class="level3">
<h3 class="anchored" data-anchor-id="tutorial-2---working-with-objects-domo-integration">Tutorial 2 - <a href="./_Tut2 - Working with Objects and Domo Integration.ipynb">Working with Objects &amp; Domo Integration</a></h3>
<ul>
<li>Read Account Objects in Jupyter Workspaces</li>
<li>Export a dataframe to a Domo Dataset</li>
</ul>
</section>
</section>
<section id="break" class="level2">
<h2 class="anchored" data-anchor-id="break">1430 - Break</h2>
<section id="using-domojupyter-for-automation" class="level3">
<h3 class="anchored" data-anchor-id="using-domojupyter-for-automation">1500 - Using DomoJupyter for Automation</h3>
<ul>
<li>Trigger from Dataset</li>
<li>Trigger on Schedule</li>
</ul>
</section>
<section id="tutorial-3---generate-a-domostats-style-dataset" class="level3">
<h3 class="anchored" data-anchor-id="tutorial-3---generate-a-domostats-style-dataset">Tutorial 3 - <a href="./_Tut3 - Generate a DomoStats style Dataset.ipynb">Generate a DomoStats style dataset</a></h3>
<ul>
<li>Get Accounts from DomoAccounts and format as a dataset</li>
<li>Merging API requests in a dataset</li>
</ul>
</section>
<section id="tutorial-4--access-token-authentication-and-updating-domo-via-api" class="level3">
<h3 class="anchored" data-anchor-id="tutorial-4--access-token-authentication-and-updating-domo-via-api">Tutorial 4- <a href="./_Tut4 - Using Access Token Authentication and Updating Domo via API.ipynb">Access Token Authentication and updating Domo via API</a></h3>
<ul>
<li>update an object in Domo</li>
</ul>
</section>
<section id="qa-wrapup" class="level3">
<h3 class="anchored" data-anchor-id="qa-wrapup">1545 - Q&amp;A Wrapup</h3>
<ul>
<li>Common Use Cases</li>
<li>Q&amp;A</li>
<li>Quiz</li>
</ul>


</section>
</section>
</section>

 ]]></description>
  <category>Python</category>
  <category>DomoJupyter</category>
  <category>Domopalooza</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2024-03-23_domopalooza24/dp24_intro_to_jupyter.html</guid>
  <pubDate>Sat, 23 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial Update Users</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2024-01-02_update_users/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<div id="87a36c0e-1645-43e9-81e7-a0a1abe405fa" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %pip install --upgrade  domolibrary</span></span></code></pre></div>
</div>
<div id="3635d762-6e04-4ca4-9f66-7b16252555bc" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary</span>
<span id="cb2-2"></span>
<span id="cb2-3">domolibrary.__version__</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>'0.3.46'</code></pre>
</div>
</div>
<section id="get-sample-data-and-generate-auth-object" class="level1">
<h1>0. Get Sample Data and generate auth object</h1>
<div id="79d4d9fc" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> csv</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-3"></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataset.csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8-sig"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-6">    csv_reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> csv.DictReader(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb4-7">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [row <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> csv_reader]</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data:</span>
<span id="cb4-10">    obj.update(</span>
<span id="cb4-11">        {</span>
<span id="cb4-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>: obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>].replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb4-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>: obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>].replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb4-14">        },</span>
<span id="cb4-15">    )  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clean sample dataset so email is a valid email</span></span>
<span id="cb4-16"></span>
<span id="cb4-17">pd.DataFrame(data)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">email</th>
<th data-quarto-table-cell-role="th">Role</th>
<th data-quarto-table-cell-role="th">FranchiseID</th>
<th data-quarto-table-cell-role="th">StoreID</th>
<th data-quarto-table-cell-role="th">EmpID</th>
<th data-quarto-table-cell-role="th">manager_email</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>CEO1@fz.com</td>
<td>CEO</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>jae@onyxreporting.com</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Owner2@fz.com</td>
<td>Owner</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>CEO1@fz.com</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>RestaurantManager3@fz.com</td>
<td>Restaurant Manager</td>
<td>1</td>
<td>24</td>
<td>3</td>
<td>Owner2@fz.com</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>RestaurantManager4@fz.com</td>
<td>Restaurant Manager</td>
<td>1</td>
<td>7</td>
<td>4</td>
<td>Owner2@fz.com</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>RestaurantManager5@fz.com</td>
<td>Restaurant Manager</td>
<td>1</td>
<td>11</td>
<td>5</td>
<td>Owner2@fz.com</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="dbb478ec" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb5-3"></span>
<span id="cb5-4">token_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoTokenAuth(</span>
<span id="cb5-5">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span>,</span>
<span id="cb5-6">    domo_access_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_DOJO_ACCESS_TOKEN"</span>],</span>
<span id="cb5-7">)</span></code></pre></div>
</div>
</section>
<section id="create-custom-attributes-in-domo-instance-config" class="level1">
<h1>1. Create Custom Attributes in Domo Instance Config</h1>
<p>User attributes, will be custom properties that we can manage and use to create dynamic pdp policies and groups</p>
<ul>
<li>First we parse the CSV to identify new properties to create</li>
</ul>
<div id="78691a10" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">properties_to_create <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(</span>
<span id="cb6-3">        [</span>
<span id="cb6-4">            key</span>
<span id="cb6-5">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data</span>
<span id="cb6-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> obj.keys()</span>
<span id="cb6-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> key.lower() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empid"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>]</span>
<span id="cb6-8">        ]</span>
<span id="cb6-9">    )</span>
<span id="cb6-10">)</span>
<span id="cb6-11"></span>
<span id="cb6-12">properties_to_create</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['FranchiseID', 'StoreID']</code></pre>
</div>
</div>
<div id="2bbf235c" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoInstanceConfig <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmic</span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoInstanceConfig_UserAttribute <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmua</span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb8-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb8-6"></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_property(domo_config, property_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""will create a custom property in Domo"""</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_config.user_attributes.upsert(</span>
<span id="cb8-12">        attribute_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"fz</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>property_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb8-13">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>property_name,</span>
<span id="cb8-14">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FZ_POC"</span>,</span>
<span id="cb8-15">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb8-16">        debug_prn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb8-17">    )</span>
<span id="cb8-18"></span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_properties(</span>
<span id="cb8-21">    property_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], auth: dmda.DomoAuth  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of property names to create</span></span>
<span id="cb8-22">):</span>
<span id="cb8-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""will create a list of custom properties from a provided list of property names"""</span></span>
<span id="cb8-24"></span>
<span id="cb8-25">    domo_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmic.DomoInstanceConfig(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb8-26"></span>
<span id="cb8-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb8-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[upsert_property(domo_config, property_name) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> property_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> property_ls],</span>
<span id="cb8-29">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb8-30">    )</span>
<span id="cb8-31"></span>
<span id="cb8-32"></span>
<span id="cb8-33"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_properties(properties_to_create, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[UserAttribute(id='fzFranchiseID', name='FranchiseID', description='FZ_POC', issuer_type=&lt;UserAttributes_IssuerType.CUSTOM: 'customer-defined'&gt;, customer_id='mmmm-0012-0200', value_type='STRING', validator='ANY_VALUE', validator_configuration=None, security_voter='FULL_VIS_ADMIN_IDP', custom=True),
 UserAttribute(id='fzStoreID', name='StoreID', description='FZ_POC', issuer_type=&lt;UserAttributes_IssuerType.CUSTOM: 'customer-defined'&gt;, customer_id='mmmm-0012-0200', value_type='STRING', validator='ANY_VALUE', validator_configuration=None, security_voter='FULL_VIS_ADMIN_IDP', custom=True)]</code></pre>
</div>
</div>
<section id="validate-that-custom-properties-have-been-created" class="level2">
<h2 class="anchored" data-anchor-id="validate-that-custom-properties-have-been-created">validate that custom properties have been created</h2>
<ul>
<li>The <a href="https://jaewilson07.github.io/domo_library/classes/domoinstanceconfig.html#domoinstanceconfig"><code>DomoInstanceConfig</code></a> class has a property <code>user_attributes</code> that can be used to interact with all user attributes (including standard Domo Attributes, IDP created attributes, and custom attributes)</li>
</ul>
<div id="a0af5b6f" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_custom_properties(</span>
<span id="cb10-2">    auth: dmda.DomoAuth, prop_prefix: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, return_all: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb10-3">):</span>
<span id="cb10-4">    domo_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmic.DomoInstanceConfig(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb10-5">    props <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_config.user_attributes.get_attributes()</span>
<span id="cb10-6"></span>
<span id="cb10-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_all:</span>
<span id="cb10-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> props</span>
<span id="cb10-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [prop <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> prop <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> props <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> prop.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>.startswith(prop_prefix)]</span>
<span id="cb10-10"></span>
<span id="cb10-11"></span>
<span id="cb10-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_custom_properties(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth, prop_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fz"</span>, return_all<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[UserAttribute(id='fzManagerEmail', name='ManagerEmail', description='FZ_POC', issuer_type=&lt;UserAttributes_IssuerType.CUSTOM: 'customer-defined'&gt;, customer_id='mmmm-0012-0200', value_type='STRING', validator='ANY_VALUE', validator_configuration=None, security_voter='FULL_VIS_ADMIN_IDP', custom=True),
 UserAttribute(id='fzStoreID', name='StoreID', description='FZ_POC', issuer_type=&lt;UserAttributes_IssuerType.CUSTOM: 'customer-defined'&gt;, customer_id='mmmm-0012-0200', value_type='STRING', validator='ANY_VALUE', validator_configuration=None, security_voter='FULL_VIS_ADMIN_IDP', custom=True),
 UserAttribute(id='fzFranchiseID', name='FranchiseID', description='FZ_POC', issuer_type=&lt;UserAttributes_IssuerType.CUSTOM: 'customer-defined'&gt;, customer_id='mmmm-0012-0200', value_type='STRING', validator='ANY_VALUE', validator_configuration=None, security_voter='FULL_VIS_ADMIN_IDP', custom=True)]</code></pre>
</div>
</div>
</section>
</section>
<section id="extend-user-properties" class="level1">
<h1>2. Extend User Properties</h1>
<ul>
<li>the UserProperty_Type enum from domolibrary has a list of standard user properties.</li>
<li>extend the <a href="https://jaewilson07.github.io/domo_library/routes/user.html#userproperty_type"><code>UserProperty_Type</code></a> enum with the newly created user attributes</li>
</ul>
<p>NOTE: UserProperty_Type and the idea of a custom attribute are duplicate and in a later implementation of DomoLibrary might be rolled into one class.</p>
<p>For the time being, first you create the custom property, then you use UserProperty to update the DomoUser class</p>
<div id="256b63b4" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %pip install aenum</span></span></code></pre></div>
</div>
<div id="db28e46f" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> domolibrary.classes.DomoUser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> UserProperty, UserProperty_Type</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predefined properties we can update</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if a custom property hasn't been added we'll extended it with the aenum library</span></span>
<span id="cb13-6"></span>
<span id="cb13-7">pprint(</span>
<span id="cb13-8">    {</span>
<span id="cb13-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pedefined_properties"</span>: [</span>
<span id="cb13-10">            {member.name: member.value} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> member <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> UserProperty_Type</span>
<span id="cb13-11">        ]</span>
<span id="cb13-12">    }</span>
<span id="cb13-13">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'pedefined_properties': [{'display_name': 'displayName'},
                          {'email_address': 'emailAddress'},
                          {'phone_number': 'phoneNumber'},
                          {'title': 'title'},
                          {'department': 'department'},
                          {'web_landing_page': 'webLandingPage'},
                          {'web_mobile_landing_page': 'webMobileLandingPage'},
                          {'role_id': 'roleId'},
                          {'employee_id': 'employeeId'},
                          {'employee_number': 'employeeNumber'},
                          {'hire_date': 'hireDate'},
                          {'reports_to': 'reportsTo'},
                          {'fzFranchiseID': 'fzFranchiseID'},
                          {'fzStoreID': 'fzStoreID'}]}</code></pre>
</div>
</div>
<div id="db5a5c40" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> aenum <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> extend_enum  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use aenum to extend an existing enum</span></span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzFranchiseID"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> UserProperty_Type.__members__:</span>
<span id="cb15-4">    extend_enum(UserProperty_Type, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzFranchiseID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzFranchiseID"</span>)</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzStoreID"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> UserProperty_Type.__members__:</span>
<span id="cb15-7">    extend_enum(UserProperty_Type, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzStoreID"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fzStoreID"</span>)</span>
<span id="cb15-8"></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># validate properties have been extended</span></span>
<span id="cb15-10">pprint(</span>
<span id="cb15-11">    {</span>
<span id="cb15-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pedefined_properties"</span>: [</span>
<span id="cb15-13">            {member.name: member.value} <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> member <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> UserProperty_Type</span>
<span id="cb15-14">        ]</span>
<span id="cb15-15">    }</span>
<span id="cb15-16">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'pedefined_properties': [{'display_name': 'displayName'},
                          {'email_address': 'emailAddress'},
                          {'phone_number': 'phoneNumber'},
                          {'title': 'title'},
                          {'department': 'department'},
                          {'web_landing_page': 'webLandingPage'},
                          {'web_mobile_landing_page': 'webMobileLandingPage'},
                          {'role_id': 'roleId'},
                          {'employee_id': 'employeeId'},
                          {'employee_number': 'employeeNumber'},
                          {'hire_date': 'hireDate'},
                          {'reports_to': 'reportsTo'},
                          {'fzFranchiseID': 'fzFranchiseID'},
                          {'fzStoreID': 'fzStoreID'}]}</code></pre>
</div>
</div>
<p>At this point the custom properties should have been added to the UserProperty_Type enum and can be used to upgrade domousers</p>
<div id="309c4949" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">test_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb17-2">test_user</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'email': 'CEO1@fz.com',
 'Role': 'CEO',
 'FranchiseID': '0',
 'StoreID': '0',
 'EmpID': '1',
 'manager_email': 'jae@onyxreporting.com'}</code></pre>
</div>
</div>
<div id="1dcabc02" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoUser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdu</span>
<span id="cb19-2"></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_user_property(</span>
<span id="cb19-5">    franchise_id, store_id, employee_id, manager_email, auth: dmda.DomoAuth</span>
<span id="cb19-6">):</span>
<span id="cb19-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""creates a property that can be passed to DomoUser class to update a property in Domo"""</span></span>
<span id="cb19-8"></span>
<span id="cb19-9">    manager <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmdu.DomoUsers.by_email(</span>
<span id="cb19-10">        email_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[manager_email], only_allow_one<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth</span>
<span id="cb19-11">    )</span>
<span id="cb19-12"></span>
<span id="cb19-13">    manager <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> manager[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb19-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(manager.email_address)</span>
<span id="cb19-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> manager</span>
<span id="cb19-16"></span>
<span id="cb19-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [</span>
<span id="cb19-18">        UserProperty(UserProperty_Type.fzFranchiseID, franchise_id),</span>
<span id="cb19-19">        UserProperty(UserProperty_Type.fzStoreID, store_id),</span>
<span id="cb19-20">        UserProperty(UserProperty_Type.employee_number, employee_id),</span>
<span id="cb19-21">        UserProperty(UserProperty_Type.reports_to, manager.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>),</span>
<span id="cb19-22">    ]</span>
<span id="cb19-23"></span>
<span id="cb19-24"></span>
<span id="cb19-25">test_property <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> create_user_property(</span>
<span id="cb19-26">    franchise_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FranchiseID"</span>],</span>
<span id="cb19-27">    store_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StoreID"</span>],</span>
<span id="cb19-28">    employee_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmpID"</span>],</span>
<span id="cb19-29">    manager_email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>],</span>
<span id="cb19-30">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb19-31">)</span>
<span id="cb19-32"></span>
<span id="cb19-33">[prop.to_json() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> prop <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_property]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>jae@onyxreporting.com</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>[{'key': 'fzFranchiseID', 'values': ['0']},
 {'key': 'fzStoreID', 'values': ['0']},
 {'key': 'employeeNumber', 'values': ['1']},
 {'key': 'reportsTo', 'values': ['1893952720']}]</code></pre>
</div>
</div>
</section>
<section id="create-upsert-users-with-custom-properties" class="level1">
<h1>3. create / upsert users with custom properties</h1>
<ul>
<li>first we will create the user then update the properties</li>
</ul>
<div id="27ed9890" class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoUser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdu</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb22-3"></span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_user(</span>
<span id="cb22-6">    email,</span>
<span id="cb22-7">    role_id,</span>
<span id="cb22-8">    franchise_id,</span>
<span id="cb22-9">    store_id,</span>
<span id="cb22-10">    employee_id,</span>
<span id="cb22-11">    manager_email,</span>
<span id="cb22-12">    auth: dmda.DomoAuth,</span>
<span id="cb22-13">    display_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb22-14">):</span>
<span id="cb22-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""upsert a user by email, then updates properties franchise_id and role_id"""</span></span>
<span id="cb22-16"></span>
<span id="cb22-17">    domo_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmdu.DomoUsers.upsert_user(</span>
<span id="cb22-18">        email_address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>email,</span>
<span id="cb22-19">        display_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>display_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"fz_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>email<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb22-20">        role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_id,</span>
<span id="cb22-21">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb22-22">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb22-23">    )</span>
<span id="cb22-24"></span>
<span id="cb22-25">    property_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> create_user_property(</span>
<span id="cb22-26">        franchise_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>franchise_id,</span>
<span id="cb22-27">        store_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>store_id,</span>
<span id="cb22-28">        employee_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>employee_id,</span>
<span id="cb22-29">        manager_email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>manager_email,</span>
<span id="cb22-30">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb22-31">    )</span>
<span id="cb22-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb22-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb22-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_user.update_properties(property_ls)</span>
<span id="cb22-35"></span>
<span id="cb22-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb22-37">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb22-38"></span>
<span id="cb22-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> domo_user</span>
<span id="cb22-40"></span>
<span id="cb22-41"></span>
<span id="cb22-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test_user)</span>
<span id="cb22-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-44">domo_user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_user(</span>
<span id="cb22-45">    email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb22-46">    role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb22-47">    franchise_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FranchiseID"</span>],</span>
<span id="cb22-48">    store_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StoreID"</span>],</span>
<span id="cb22-49">    employee_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmpID"</span>],</span>
<span id="cb22-50">    manager_email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_user[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>],</span>
<span id="cb22-51">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb22-52">)</span>
<span id="cb22-53"></span>
<span id="cb22-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## this view of the user will not reflect the updated attribtues, as the get_by_id() API does not retrieve custom attributes</span></span>
<span id="cb22-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># instead you have to use the Query API to search the datacenter for full details</span></span>
<span id="cb22-56"></span>
<span id="cb22-57">pprint(domo_user)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>NameError: name 'dmda' is not defined</code></pre>
</div>
</div>
<div id="cell-21" class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb24-2">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb24-3">        upsert_user(</span>
<span id="cb24-4">            email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb24-5">            role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb24-6">            franchise_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FranchiseID"</span>],</span>
<span id="cb24-7">            store_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StoreID"</span>],</span>
<span id="cb24-8">            employee_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmpID"</span>],</span>
<span id="cb24-9">            manager_email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>],</span>
<span id="cb24-10">            auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb24-11">        )</span>
<span id="cb24-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> user_obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data</span>
<span id="cb24-13">    ],</span>
<span id="cb24-14">    n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb24-15">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Owner2@fz.com
Owner2@fz.com
CEO1@fz.com
Owner7@fz.com
Owner7@fz.com
jae@onyxreporting.com
CEO1@fz.com
Owner2@fz.com
Owner2@fz.com
Owner7@fz.com
Owner7@fz.com
CEO1@fz.com
Owner12@fz.com
Owner12@fz.com
Owner12@fz.com
Owner12@fz.com
Owner12@fz.com</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>User_CrudError: üõë  User_CrudError üõë - function: update_user || 1009228622 || status 400 || Bad Request at domo-community</code></pre>
</div>
</div>
<div id="3b59255e" class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> user_obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> data:</span>
<span id="cb27-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(user_obj)</span>
<span id="cb27-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_user(</span>
<span id="cb27-4">        email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>],</span>
<span id="cb27-5">        role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb27-6">        franchise_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FranchiseID"</span>],</span>
<span id="cb27-7">        store_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"StoreID"</span>],</span>
<span id="cb27-8">        employee_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EmpID"</span>],</span>
<span id="cb27-9">        manager_email<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"manager_email"</span>],</span>
<span id="cb27-10">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb27-11">    )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'email': 'CEO1@fz.com', 'Role': 'CEO', 'FranchiseID': '0', 'StoreID': '0', 'EmpID': '1', 'manager_email': 'jae@onyxreporting.com'}
jae@onyxreporting.com
{'email': 'Owner2@fz.com', 'Role': 'Owner', 'FranchiseID': '1', 'StoreID': '2', 'EmpID': '2', 'manager_email': 'CEO1@fz.com'}
CEO1@fz.com
{'email': 'RestaurantManager3@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '1', 'StoreID': '24', 'EmpID': '3', 'manager_email': 'Owner2@fz.com'}
Owner2@fz.com
{'email': 'RestaurantManager4@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '1', 'StoreID': '7', 'EmpID': '4', 'manager_email': 'Owner2@fz.com'}
Owner2@fz.com
{'email': 'RestaurantManager5@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '1', 'StoreID': '11', 'EmpID': '5', 'manager_email': 'Owner2@fz.com'}
Owner2@fz.com
{'email': 'RestaurantManager6@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '1', 'StoreID': '8', 'EmpID': '6', 'manager_email': 'Owner2@fz.com'}
Owner2@fz.com
{'email': 'Owner7@fz.com', 'Role': 'Owner', 'FranchiseID': '2', 'StoreID': '', 'EmpID': '7', 'manager_email': 'CEO1@fz.com'}
CEO1@fz.com
{'email': 'RestaurantManager8@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '2', 'StoreID': '35', 'EmpID': '8', 'manager_email': 'Owner7@fz.com'}
Owner7@fz.com
{'email': 'RestaurantManager9@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '2', 'StoreID': '9', 'EmpID': '9', 'manager_email': 'Owner7@fz.com'}
Owner7@fz.com
{'email': 'RestaurantManager10@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '2', 'StoreID': '4', 'EmpID': '10', 'manager_email': 'Owner7@fz.com'}
Owner7@fz.com
{'email': 'RestaurantManager11@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '2', 'StoreID': '27', 'EmpID': '11', 'manager_email': 'Owner7@fz.com'}
Owner7@fz.com
{'email': 'Owner12@fz.com', 'Role': 'Owner', 'FranchiseID': '3', 'StoreID': '', 'EmpID': '12', 'manager_email': 'CEO1@fz.com'}
CEO1@fz.com
{'email': 'RestaurantManager13@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '3', 'StoreID': '50', 'EmpID': '13', 'manager_email': 'Owner12@fz.com'}
Owner12@fz.com
{'email': 'RestaurantManager14@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '3', 'StoreID': '64', 'EmpID': '14', 'manager_email': 'Owner12@fz.com'}
Owner12@fz.com
{'email': 'RestaurantManager15@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '3', 'StoreID': '29', 'EmpID': '15', 'manager_email': 'Owner12@fz.com'}
Owner12@fz.com
{'email': 'RestaurantManager16@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '3', 'StoreID': '22', 'EmpID': '16', 'manager_email': 'Owner12@fz.com'}
Owner12@fz.com
{'email': 'RestaurantManager17@fz.com', 'Role': 'Restaurant Manager', 'FranchiseID': '3', 'StoreID': '18', 'EmpID': '17', 'manager_email': 'Owner12@fz.com'}
Owner12@fz.com</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>Python</category>
  <category>DomoJupyter</category>
  <category>DomoUser</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2024-01-02_update_users/</guid>
  <pubDate>Tue, 02 Jan 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial Delete Duplicate Groups with Python</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-012-18_DeleteDuplicateAccounts/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<section id="delete-duplicate-groups" class="level1">
<h1>DELETE Duplicate Groups</h1>
<p>sometimes you have duplicate groups and want to remove all groups that match a regex expression.</p>
<ol type="1">
<li><p>get all groups from an instance</p></li>
<li><p>use list comprehension and the <code>ACCOUNT_MATCH</code> to find groups whose name matches any of the account_match criteria</p></li>
<li><p>write a function that receives a parameter is_test : bool = True</p>
<ul>
<li>if is_test == True return a pd.DataFrame of accounts to be deleted</li>
<li>if is_test == False delete the groups</li>
</ul></li>
</ol>
<p>use this class https://github.com/jaewilson07/domo_library/blob/main/nbs/classes/50_DomoGroup.ipynb</p>
<p>tutorial walthrough https://youtu.be/1EQJ1R5fiGQ</p>
<div id="87a36c0e-1645-43e9-81e7-a0a1abe405fa" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %pip install --upgrade  domolibrary</span></span></code></pre></div>
</div>
<div id="3635d762-6e04-4ca4-9f66-7b16252555bc" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary</span>
<span id="cb2-2"></span>
<span id="cb2-3">domolibrary.__version__</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>'0.3.42'</code></pre>
</div>
</div>
</section>
<section id="config-env-and-credentials" class="level1">
<h1>CONFIG ENV and CREDENTIALS</h1>
<section id="handle-regex" class="level2">
<h2 class="anchored" data-anchor-id="handle-regex">handle regex</h2>
<div id="529bbe87-ae4d-4835-99fc-4b19b3fe3046" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urllib.parse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> urllib_parse</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># execution_instance = urllib_parse.urlparse(os.environ.get('DOMO_HOSTNAME')).netloc.replace('.domo.com', '')</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># config_instance = execution_instance</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">ACCOUNT_MATCH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"^sdk_.* \(.*"</span>]</span>
<span id="cb4-8"></span>
<span id="cb4-9">TEST_INSTANCE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb4-10"></span>
<span id="cb4-11">test_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb4-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sdk_alphabet (3)"</span>,</span>
<span id="cb4-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sdk_hello_duplicate (4)"</span>,</span>
<span id="cb4-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sdk_group_2"</span>,</span>
<span id="cb4-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sdk_group_1"</span>,</span>
<span id="cb4-16">]</span></code></pre></div>
</div>
<div id="11f853d7-de40-4403-b0d6-27bc5945736d" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup test</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoGroup <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmg</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb5-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb5-8">            dmg.DomoGroup.create_from_name(</span>
<span id="cb5-9">                group_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.instance_auth</span>
<span id="cb5-10">            )</span>
<span id="cb5-11">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_values</span>
<span id="cb5-12">        ],</span>
<span id="cb5-13">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb5-14">    )</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb5-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>name 'test_row' is not defined</code></pre>
</div>
</div>
<div id="572b0e2f-dd67-4184-815e-3c9ae1679895" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if string matches regex list</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using join regex + loop + re.match()</span></span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb7-5"></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> test_regex(text_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, regex_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>:</span>
<span id="cb7-8">    regex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(?:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">% s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>.join(regex_ls)</span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>(re.match(regex, text_str))</span>
<span id="cb7-11"></span>
<span id="cb7-12"></span>
<span id="cb7-13">[test_regex(test_value, ACCOUNT_MATCH) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> test_value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_values]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[True, True, False, False]</code></pre>
</div>
</div>
</section>
<section id="auth-objects" class="level2">
<h2 class="anchored" data-anchor-id="auth-objects">‚öôÔ∏è Auth Objects</h2>
<div id="50ca43c7-6ba0-4219-be47-0238a74532fb" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install python-dotenv</span></span></code></pre></div>
</div>
</section>
</section>
<section id="auth" class="level1">
<h1>AUTH</h1>
<ul>
<li>DO NOT STORE YOUR PASSWORD IN CLEAR TEXT I WILL SCREENSHOT IT AND POST IT ON THE INTERNET.</li>
<li>STORE IT IN A DOTENV FILE (dotenv library)</li>
<li>in the example below we are looking for a file called env.txt</li>
</ul>
<p>env files should be in the format</p>
<p>DOMO_USERNAME = nate@domo.com</p>
<p>DOMO_PASSWORD = NATES_PASSWORD</p>
<div id="a29af4c1-9688-46a4-8ab5-22f862c8f624" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from dotenv import load_dotenv</span></span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb10-3"></span>
<span id="cb10-4">domo_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jae@onyxreporting.com"</span></span>
<span id="cb10-5">domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb10-6">domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TEST_INSTANCE</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb10-9">    domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>]</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> exception <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb10-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span></code></pre></div>
</div>
<div id="9032f7c3-7ae6-4dc5-9d1c-b9210da44da1" class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do not alter this cell</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">instance_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb11-6">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb11-7">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb11-8">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb11-9">)</span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this will test if you have valid credentails at TEST_INSTANCE</span></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if you don't ask me for access</span></span>
<span id="cb11-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> instance_auth.print_is_token()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>üéâ full_auth token retrieved from domo-community ‚öôÔ∏è</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>True</code></pre>
</div>
</div>
</section>
<section id="generate-config_company_ls" class="level1">
<h1>GENERATE <code>config_company_ls</code></h1>
<ul>
<li>in production code we extract credentials from domo account objects and then generate auth objects using a fancy script.</li>
<li><code>config_company_ls</code> is always a dataframe containing ‚Äúa list of instances to operate on‚Äù with parameters like ‚Äúis_use_prod_credentials‚Äù or ‚Äúis_configure_allowlist‚Äù</li>
</ul>
<p>for development purposes we always exctract a test_row from <code>config_company_ls</code> because why not execute directly against prod environments!</p>
<div id="bcc9dad8-f36e-4865-8ac8-4f00be81d0b1" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do not alter this cell</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb14-4"></span>
<span id="cb14-5">config_company_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb14-6">    [{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"instance_auth"</span>: instance_auth, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo_instance"</span>: TEST_INSTANCE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"is_test"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>}]</span>
<span id="cb14-7">)</span>
<span id="cb14-8"></span>
<span id="cb14-9">test_row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>((row <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> config_company_ls.iterrows()))</span>
<span id="cb14-10">test_row</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>instance_auth    DomoFullAuth(domo_instance='domo-community', d...
domo_instance                                       domo-community
is_test                                                       True
Name: 0, dtype: object</code></pre>
</div>
</div>
</section>
<section id="config-functions" class="level1">
<h1>CONFIG FUNCTIONS</h1>
<p>implement functions here.</p>
<ul>
<li>write them in a test-able way so that you can test each function independently.</li>
<li>in the function definition make sure to include input type and the return type.</li>
<li>include a test using test_row</li>
<li>the last function should be called process_company() and receive a DomoAuth object.</li>
</ul>
<p>notice, most of your functions will be async functions (implying they can be run asynchronously</p>
<p>All async functions must be await-ed</p>
<div id="d2503388-f3b0-4347-8786-0fdfcfe7417a" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoGroup <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmg</span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb16-3"></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_and_filter_domo_groups(</span>
<span id="cb16-6">    auth: dmda.DomoAuth,</span>
<span id="cb16-7">    regex_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],</span>
<span id="cb16-8">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[dmg.DomoGroup]:</span>
<span id="cb16-9">    domo_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmg.DomoGroups.get_all_groups(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb16-10"></span>
<span id="cb16-11">    domo_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb16-12">        domo_group</span>
<span id="cb16-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_group <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_groups</span>
<span id="cb16-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> test_regex(text_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_group.name, regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>regex_ls)</span>
<span id="cb16-15">    ]</span>
<span id="cb16-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> domo_groups</span>
<span id="cb16-17"></span>
<span id="cb16-18"></span>
<span id="cb16-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_and_filter_domo_groups(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.instance_auth, regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ACCOUNT_MATCH)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[DomoGroup(id=419947083, name='sdk_alphabet (3)', type='open', description=None, custom_attributes={}),
 DomoGroup(id=1169232545, name='sdk_hello_duplicate (4)', type='open', description=None, custom_attributes={})]</code></pre>
</div>
</div>
<div id="1bd9ebb2-ca79-4817-8eb3-d9cc3d15ca8e" class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb18-2"></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_instance(</span>
<span id="cb18-5">    instance_auth: dmda.DomoAuth,</span>
<span id="cb18-6">    domo_instance: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb18-7">    regex_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],</span>
<span id="cb18-8">    is_test: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb18-9">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb18-10">    domo_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_and_filter_domo_groups(</span>
<span id="cb18-11">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>instance_auth, regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>regex_ls</span>
<span id="cb18-12">    )</span>
<span id="cb18-13"></span>
<span id="cb18-14">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo_instance"</span>])</span>
<span id="cb18-15"></span>
<span id="cb18-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(domo_groups) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb18-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb18-18"></span>
<span id="cb18-19">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb18-20">        [</span>
<span id="cb18-21">            {</span>
<span id="cb18-22">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_name"</span>: domo_group.name,</span>
<span id="cb18-23">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_type"</span>: domo_group.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb18-24">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo_instance"</span>: domo_group.auth.domo_instance,</span>
<span id="cb18-25">            }</span>
<span id="cb18-26">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_group <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_groups</span>
<span id="cb18-27">        ]</span>
<span id="cb18-28">    )</span>
<span id="cb18-29"></span>
<span id="cb18-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> is_test:</span>
<span id="cb18-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb18-32"></span>
<span id="cb18-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb18-34">        res_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb18-35">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[domo_group.delete() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_group <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_groups], n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb18-36">        )</span>
<span id="cb18-37"></span>
<span id="cb18-38">        df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"is_deleted"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [res.response <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> res_ls]</span>
<span id="cb18-39"></span>
<span id="cb18-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb18-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> dmg.Group_CRUD_Error <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb18-42">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb18-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-44"></span>
<span id="cb18-45"></span>
<span id="cb18-46"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb18-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb18-48">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb18-49">            dmg.DomoGroup.create_from_name(</span>
<span id="cb18-50">                group_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.instance_auth</span>
<span id="cb18-51">            )</span>
<span id="cb18-52">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_values</span>
<span id="cb18-53">        ],</span>
<span id="cb18-54">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb18-55">    )</span>
<span id="cb18-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb18-57">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span>
<span id="cb18-58"></span>
<span id="cb18-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> process_instance(</span>
<span id="cb18-60">    instance_auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.instance_auth,</span>
<span id="cb18-61">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.domo_instance,</span>
<span id="cb18-62">    is_test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb18-63">    regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ACCOUNT_MATCH,</span>
<span id="cb18-64">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>üõë  Group_CRUD_Error üõë - function: create_group || status 400 || sdk_alphabet (3) already exists. Choose a different group_name at domo-community</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">group_name</th>
<th data-quarto-table-cell-role="th">group_type</th>
<th data-quarto-table-cell-role="th">domo_instance</th>
<th data-quarto-table-cell-role="th">is_deleted</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>sdk_alphabet (3)</td>
<td>open</td>
<td>domo-community</td>
<td>deleted 419947083 from domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>sdk_hello_duplicate (4)</td>
<td>open</td>
<td>domo-community</td>
<td>deleted 1169232545 from domo-community</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
<section id="main" class="level1">
<h1>MAIN</h1>
<p>main wil loop over a dataframe, <code>config_company_ls</code> where each row has a valid instance_auth (the admin login credentials).</p>
<p>some scripts have special configuration settings which would be extracted from the row ex <code>is_configure_allowlist</code> or <code>is_enable_social_users</code>.</p>
<p>you should not need to alter main.</p>
<div id="2a64b1ec-ddcb-408d-9ae9-a4efa2f8d5df" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do not alter this code block</span></span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb20-4"></span>
<span id="cb20-5"></span>
<span id="cb20-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main(</span>
<span id="cb20-7">    regex_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of regex expressions to match</span></span>
<span id="cb20-8">    is_test: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb20-9">):</span>
<span id="cb20-10">    df_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb20-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb20-12">            process_instance(</span>
<span id="cb20-13">                instance_auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.instance_auth,</span>
<span id="cb20-14">                domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.domo_instance,</span>
<span id="cb20-15">                is_test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>is_test,</span>
<span id="cb20-16">                regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>regex_ls,</span>
<span id="cb20-17">            )</span>
<span id="cb20-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> config_company_ls.iterrows()</span>
<span id="cb20-19">        ],</span>
<span id="cb20-20">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb20-21">    )</span>
<span id="cb20-22"></span>
<span id="cb20-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pd.concat(df_ls)</span></code></pre></div>
</div>
<div id="9ed3cd71-faff-4585-9b14-de31b90bfe0b" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb21-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb21-3">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb21-4">            dmg.DomoGroup.create_from_name(</span>
<span id="cb21-5">                group_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_row.instance_auth</span>
<span id="cb21-6">            )</span>
<span id="cb21-7">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> test_values</span>
<span id="cb21-8">        ],</span>
<span id="cb21-9">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb21-10">    )</span>
<span id="cb21-11"></span>
<span id="cb21-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> main(is_test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, regex_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ACCOUNT_MATCH)</span>
<span id="cb21-13"></span>
<span id="cb21-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb21-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(e)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>toggling group visiblity in domo-community show system groups
toggling group visiblity in domo-community show system groups
üõë  Group_CRUD_Error üõë - function: create_group || status 400 || sdk_group_1 already exists. Choose a different group_name at domo-community
toggling group visiblity in domo-community hiding system groups
toggling group visiblity in domo-community hiding system groups</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>Python</category>
  <category>DomoJupyter</category>
  <category>DomoGroup</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-012-18_DeleteDuplicateAccounts/</guid>
  <pubDate>Mon, 18 Dec 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial - Generate a DomoStats dataset using DomoLibrary</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/without_domolibrary.html</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<div id="88a03454-93a8-4c82-bc3e-5b470836c876" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3">domo_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_USERNAME"</span>)</span>
<span id="cb1-4">domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb1-5">domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>)</span></code></pre></div>
</div>
<div id="352b94a4-ea32-48de-b91a-83577ba6a312" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_full_auth(</span>
<span id="cb2-5">    domo_instance, domo_username, domo_password</span>
<span id="cb2-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># returns a session token</span></span>
<span id="cb2-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""use username and password to generate an access token"""</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.domo.com/api/content/v2/authentication"</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">    body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"method"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"password"</span>,</span>
<span id="cb2-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"emailAddress"</span>: domo_username,</span>
<span id="cb2-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"password"</span>: domo_password,</span>
<span id="cb2-15">    }</span>
<span id="cb2-16"></span>
<span id="cb2-17">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.request(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POST"</span>, url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>url, json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>body)</span>
<span id="cb2-18">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.json()</span>
<span id="cb2-19"></span>
<span id="cb2-20">    token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sessionToken"</span>)</span>
<span id="cb2-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> token:</span>
<span id="cb2-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unable to retrieve a session token"</span>)</span>
<span id="cb2-23"></span>
<span id="cb2-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> token</span>
<span id="cb2-25"></span>
<span id="cb2-26"></span>
<span id="cb2-27">session_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_full_auth(domo_instance, domo_username, domo_password)</span>
<span id="cb2-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> session_token</span></code></pre></div>
</div>
<div id="f555f1ee-75d7-4dce-adc8-72f00ac857a3" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_query_dataflows_body(count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {</span>
<span id="cb3-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"entities"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATAFLOW"</span>],</span>
<span id="cb3-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>: count,</span>
<span id="cb3-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"offset"</span>: offset,</span>
<span id="cb3-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"combineResults"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"query"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>,</span>
<span id="cb3-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filters"</span>: [</span>
<span id="cb3-9">            {</span>
<span id="cb3-10">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filterType"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"term"</span>,</span>
<span id="cb3-11">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"field"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_flow_type"</span>,</span>
<span id="cb3-12">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAGIC"</span>,</span>
<span id="cb3-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Magic ETL v2"</span>,</span>
<span id="cb3-14">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"not"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb3-15">            }</span>
<span id="cb3-16">        ],</span>
<span id="cb3-17">    }</span>
<span id="cb3-18"></span>
<span id="cb3-19"></span>
<span id="cb3-20">body_dataflows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_query_dataflows_body(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-21">body_dataflows</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'entities': ['DATAFLOW'],
 'count': 10,
 'offset': 0,
 'combineResults': False,
 'query': '*',
 'filters': [{'filterType': 'term',
   'field': 'data_flow_type',
   'value': 'MAGIC',
   'name': 'Magic ETL v2',
   'not': False}]}</code></pre>
</div>
</div>
<div id="9303e898-a22f-4ec0-8a58-b8a29626ab2c" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> query_datacenter(</span>
<span id="cb5-2">    domo_instance,</span>
<span id="cb5-3">    session_token,</span>
<span id="cb5-4">    body,</span>
<span id="cb5-5">    return_raw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb5-6">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb5-7">):</span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""function that queries the datacenter and for a specific body"""</span></span>
<span id="cb5-9"></span>
<span id="cb5-10">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.domo.com/api/search/v1/query"</span></span>
<span id="cb5-11"></span>
<span id="cb5-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> debug_api:</span>
<span id="cb5-13">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"url"</span>: url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body"</span>: body})</span>
<span id="cb5-14"></span>
<span id="cb5-15">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-domo-authentication"</span>: session_token}</span>
<span id="cb5-16"></span>
<span id="cb5-17">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.request(url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>url, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POST"</span>, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers, json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>body)</span>
<span id="cb5-18"></span>
<span id="cb5-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_raw:</span>
<span id="cb5-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span>
<span id="cb5-21"></span>
<span id="cb5-22">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.json()</span>
<span id="cb5-23"></span>
<span id="cb5-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> data.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"searchObjects"</span>)</span>
<span id="cb5-25"></span>
<span id="cb5-26"></span>
<span id="cb5-27">dataflows_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query_datacenter(</span>
<span id="cb5-28">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb5-29">    session_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>session_token,</span>
<span id="cb5-30">    body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>body_dataflows,</span>
<span id="cb5-31">    debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb5-32">    return_raw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb5-33">)</span>
<span id="cb5-34"></span>
<span id="cb5-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dataflows_ls))</span>
<span id="cb5-36">dataflows_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'url': 'https://domo-community.domo.com/api/search/v1/query', 'body': {'entities': ['DATAFLOW'], 'count': 10, 'offset': 0, 'combineResults': False, 'query': '*', 'filters': [{'filterType': 'term', 'field': 'data_flow_type', 'value': 'MAGIC', 'name': 'Magic ETL v2', 'not': False}]}}
10</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>{'entityType': 'dataflow',
 'databaseId': '131',
 'searchId': {'indexName': None,
  'databaseId': '131',
  'customer': 'mmmm-0012-0200',
  'entityType': 'dataflow'},
 'createDate': 1678147044000,
 'lastModified': 1678147835000,
 'lastIndexed': 1680574033100,
 'highlightedFields': {},
 'language': 'English',
 'requestAccess': False,
 'score': 10.000001,
 'name': 'BeastModesGovernance_01_AccumulateHistory',
 'description': '',
 'ownedById': '1893952720',
 'ownedByName': 'Jae Wilson1',
 'tags': [],
 'lastRunDate': 1678147669000,
 'inputDatasets': [{'name': 'Governance_Beast Modes',
   'id': 'b7998b45-ccb5-4183-830e-8c2bdd489fd0'}],
 'outputDatasets': [{'name': 'Governance_BeastMode_historical',
   'id': 'e6559952-30ce-41a1-b831-f29ebe95d6e5'}],
 'runCount': 2,
 'successRate': 1.0,
 'dataFlowType': 'MAGIC',
 'status': 'SUCCESS',
 'deleted': False,
 'passwordProtected': False,
 'abandoned': False,
 'owners': [{'id': '1893952720',
   'type': 'USER',
   'displayName': 'Jae Wilson1'}],
 'ownersLocalized': {'localizedMessage': 'Jae Wilson1', 'count': 1},
 'paused': False,
 'winnerText': 'BeastModesGovernance_01_AccumulateHistory',
 'statusOrderPriority': 70,
 'inputCount': 1,
 'outputCount': 1,
 'ownedByType': 'USER',
 'customer': 'mmmm-0012-0200'}</code></pre>
</div>
</div>
<div id="d892a5e9-187e-4609-b56f-fd45ee5d3e01" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dataflow_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dataflow.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"databaseId"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflows_ls]</span>
<span id="cb8-2">dataflow_ids</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['131', '227', '37', '185', '38', '226', '124', '46', '81', '75']</code></pre>
</div>
</div>
<div id="3baa8170-4ecb-425e-8541-c03a53a88447" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_dataflow_definition(dataflow_id, session_token, return_raw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb10-2">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.domo.com/api/dataprocessing/v1/dataflows/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataflow_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-3"></span>
<span id="cb10-4">    headers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-domo-authentication"</span>: session_token}</span>
<span id="cb10-5"></span>
<span id="cb10-6">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.request(method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get"</span>, url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>url, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headers)</span>
<span id="cb10-7"></span>
<span id="cb10-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_raw:</span>
<span id="cb10-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span>
<span id="cb10-10"></span>
<span id="cb10-11">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.json()</span>
<span id="cb10-12"></span>
<span id="cb10-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> data</span>
<span id="cb10-14"></span>
<span id="cb10-15"></span>
<span id="cb10-16">get_dataflow_definition(dataflow_ids[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], session_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>session_token)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'id': 131,
 'name': 'BeastModesGovernance_01_AccumulateHistory',
 'dapDataFlowId': '564d37be-bc96-485f-a854-ef3985864551',
 'responsibleUserId': 1893952720,
 'runState': 'ENABLED',
 'onboardFlowVersion': {'id': 520,
  'timeStamp': 1678147835000,
  'authorId': 1893952720,
  'numInputs': 1,
  'numOutputs': 1,
  'executionCount': 0,
  'executionSuccessCount': 0,
  'versionNumber': 3},
 'lastExecution': {'id': 272919,
  'onboardFlowId': 131,
  'previewRows': 0,
  'dapDataFlowExecutionId': '4759ab00-3f9d-4d55-9087-32aa38655a51',
  'beginTime': 1678147659000,
  'endTime': 1678147669000,
  'lastUpdated': 1678147669000,
  'failed': False,
  'state': 'SUCCESS',
  'dataFlowVersion': 519},
 'created': 1678147044000,
 'modified': 1678147835000,
 'actions': [{'type': 'LoadFromVault',
   'id': '40554fc4-428a-4117-8820-b3f4f4927021',
   'name': 'Governance_Beast Modes',
   'gui': {'x': 312,
    'y': 132,
    'color': 3238043,
    'colorSource': None,
    'sampleJson': None},
   'dataSourceId': 'b7998b45-ccb5-4183-830e-8c2bdd489fd0',
   'executeFlowWhenUpdated': False,
   'pseudoDataSource': False,
   'truncateTextColumns': False,
   'truncateRows': False,
   'onlyLoadNewVersions': False},
  {'type': 'ExpressionEvaluator',
   'id': '05082103-d42e-49ab-a66e-bd31b4c0e3df',
   'name': 'Add Formula',
   'dependsOn': ['40554fc4-428a-4117-8820-b3f4f4927021'],
   'gui': {'x': 456,
    'y': 132,
    'color': None,
    'colorSource': None,
    'sampleJson': None},
   'expressions': [{'expression': "'2023-03-06'",
     'fieldName': 'report_date',
     'settings': None}]},
  {'type': 'PublishToVault',
   'id': 'fe77761b-eb11-4491-b19c-ebb56d009b76',
   'name': 'Governance_BeastMode_historical',
   'dependsOn': ['05082103-d42e-49ab-a66e-bd31b4c0e3df'],
   'gui': {'x': 600,
    'y': 132,
    'color': None,
    'colorSource': None,
    'sampleJson': None},
   'dataSource': {'guid': 'e6559952-30ce-41a1-b831-f29ebe95d6e5',
    'type': 'DataFlow',
    'name': 'Governance_BeastMode_historical',
    'cloudId': 'domo'},
   'versionChainType': 'APPEND',
   'partitionIdColumns': ['report_date'],
   'schemaSource': 'DATAFLOW',
   'partitioned': True}],
 'engineProperties': {'kettle.mode': 'STRICT'},
 'inputs': [{'dataSourceId': 'b7998b45-ccb5-4183-830e-8c2bdd489fd0',
   'executeFlowWhenUpdated': False,
   'dataSourceName': 'Governance_Beast Modes',
   'onlyLoadNewVersions': False}],
 'outputs': [{'onboardFlowId': None,
   'dataSourceId': 'e6559952-30ce-41a1-b831-f29ebe95d6e5',
   'dataSourceName': 'Governance_BeastMode_historical',
   'versionChainType': 'APPEND'}],
 'executionCount': 2,
 'executionSuccessCount': 2,
 'hydrationState': 'DEHYDRATED',
 'useLegacyTriggerBehavior': False,
 'passwordProtected': False,
 'deleted': False,
 'abandoned': False,
 'neverAbandon': False,
 'settings': {},
 'paused': False,
 'restricted': False,
 'enabled': True,
 'container': False,
 'databaseType': 'MAGIC',
 'triggeredByInput': False,
 'draft': False,
 'editable': True,
 'numInputs': 1,
 'numOutputs': 1,
 'magic': True,
 'subsetProcessing': True}</code></pre>
</div>
</div>
<div id="8e8e3f6f-71fa-4f29-858a-c18bf224ac69" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">dataflow_definition_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-2">    get_dataflow_definition(dataflow_id, session_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>session_token)</span>
<span id="cb12-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_ids</span>
<span id="cb12-4">]</span>
<span id="cb12-5">dataflow_definition_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'id': 131,
 'name': 'BeastModesGovernance_01_AccumulateHistory',
 'dapDataFlowId': '564d37be-bc96-485f-a854-ef3985864551',
 'responsibleUserId': 1893952720,
 'runState': 'ENABLED',
 'onboardFlowVersion': {'id': 520,
  'timeStamp': 1678147835000,
  'authorId': 1893952720,
  'numInputs': 1,
  'numOutputs': 1,
  'executionCount': 0,
  'executionSuccessCount': 0,
  'versionNumber': 3},
 'lastExecution': {'id': 272919,
  'onboardFlowId': 131,
  'previewRows': 0,
  'dapDataFlowExecutionId': '4759ab00-3f9d-4d55-9087-32aa38655a51',
  'beginTime': 1678147659000,
  'endTime': 1678147669000,
  'lastUpdated': 1678147669000,
  'failed': False,
  'state': 'SUCCESS',
  'dataFlowVersion': 519},
 'created': 1678147044000,
 'modified': 1678147835000,
 'actions': [{'type': 'LoadFromVault',
   'id': '40554fc4-428a-4117-8820-b3f4f4927021',
   'name': 'Governance_Beast Modes',
   'gui': {'x': 312,
    'y': 132,
    'color': 3238043,
    'colorSource': None,
    'sampleJson': None},
   'dataSourceId': 'b7998b45-ccb5-4183-830e-8c2bdd489fd0',
   'executeFlowWhenUpdated': False,
   'pseudoDataSource': False,
   'truncateTextColumns': False,
   'truncateRows': False,
   'onlyLoadNewVersions': False},
  {'type': 'ExpressionEvaluator',
   'id': '05082103-d42e-49ab-a66e-bd31b4c0e3df',
   'name': 'Add Formula',
   'dependsOn': ['40554fc4-428a-4117-8820-b3f4f4927021'],
   'gui': {'x': 456,
    'y': 132,
    'color': None,
    'colorSource': None,
    'sampleJson': None},
   'expressions': [{'expression': "'2023-03-06'",
     'fieldName': 'report_date',
     'settings': None}]},
  {'type': 'PublishToVault',
   'id': 'fe77761b-eb11-4491-b19c-ebb56d009b76',
   'name': 'Governance_BeastMode_historical',
   'dependsOn': ['05082103-d42e-49ab-a66e-bd31b4c0e3df'],
   'gui': {'x': 600,
    'y': 132,
    'color': None,
    'colorSource': None,
    'sampleJson': None},
   'dataSource': {'guid': 'e6559952-30ce-41a1-b831-f29ebe95d6e5',
    'type': 'DataFlow',
    'name': 'Governance_BeastMode_historical',
    'cloudId': 'domo'},
   'versionChainType': 'APPEND',
   'partitionIdColumns': ['report_date'],
   'schemaSource': 'DATAFLOW',
   'partitioned': True}],
 'engineProperties': {'kettle.mode': 'STRICT'},
 'inputs': [{'dataSourceId': 'b7998b45-ccb5-4183-830e-8c2bdd489fd0',
   'executeFlowWhenUpdated': False,
   'dataSourceName': 'Governance_Beast Modes',
   'onlyLoadNewVersions': False}],
 'outputs': [{'onboardFlowId': None,
   'dataSourceId': 'e6559952-30ce-41a1-b831-f29ebe95d6e5',
   'dataSourceName': 'Governance_BeastMode_historical',
   'versionChainType': 'APPEND'}],
 'executionCount': 2,
 'executionSuccessCount': 2,
 'hydrationState': 'DEHYDRATED',
 'useLegacyTriggerBehavior': False,
 'passwordProtected': False,
 'deleted': False,
 'abandoned': False,
 'neverAbandon': False,
 'settings': {},
 'paused': False,
 'restricted': False,
 'enabled': True,
 'container': False,
 'databaseType': 'MAGIC',
 'triggeredByInput': False,
 'draft': False,
 'editable': True,
 'numInputs': 1,
 'numOutputs': 1,
 'magic': True,
 'subsetProcessing': True}</code></pre>
</div>
</div>
<div id="2e97d77e-0866-4d95-a794-99c8f9161d7b" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_action_list(dd_obj):</span>
<span id="cb14-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [</span>
<span id="cb14-3">        {</span>
<span id="cb14-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: dd_obj.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>),</span>
<span id="cb14-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datafow_name"</span>: dd_obj.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>),</span>
<span id="cb14-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action_type"</span>: action.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>),</span>
<span id="cb14-7">        }</span>
<span id="cb14-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dd_obj.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actions"</span>)</span>
<span id="cb14-9">    ]</span>
<span id="cb14-10"></span>
<span id="cb14-11"></span>
<span id="cb14-12">get_action_list(dd_obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataflow_definition_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[{'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'ExpressionEvaluator'},
 {'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'PublishToVault'}]</code></pre>
</div>
</div>
<div id="86112c58-5feb-45db-8cff-aa10dc09491a" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">action_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [get_action_list(dd_obj) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dd_obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_definition_ls]</span>
<span id="cb16-2"></span>
<span id="cb16-3">flat_action_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [action <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> a_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> action_ls <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> a_list]</span>
<span id="cb16-4">flat_action_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[{'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'ExpressionEvaluator'},
 {'dataflow_id': 131,
  'datafow_name': 'BeastModesGovernance_01_AccumulateHistory',
  'action_type': 'PublishToVault'},
 {'dataflow_id': 227,
  'datafow_name': 'DDX_Landing Page_QA',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 227,
  'datafow_name': 'DDX_Landing Page_QA',
  'action_type': 'WindowAction'}]</code></pre>
</div>
</div>
<div id="6d8ac22f-6b79-4476-9ff2-85e5b326b054" class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb18-2"></span>
<span id="cb18-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(flat_action_ls)</span>
<span id="cb18-4">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">datafow_name</th>
<th data-quarto-table-cell-role="th">action_type</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>131</td>
<td>BeastModesGovernance_01_AccumulateHistory</td>
<td>LoadFromVault</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>131</td>
<td>BeastModesGovernance_01_AccumulateHistory</td>
<td>ExpressionEvaluator</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>131</td>
<td>BeastModesGovernance_01_AccumulateHistory</td>
<td>PublishToVault</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>227</td>
<td>DDX_Landing Page_QA</td>
<td>LoadFromVault</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>227</td>
<td>DDX_Landing Page_QA</td>
<td>WindowAction</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="0f0779bb-ca89-4312-ac53-e54abf62d002" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marks_csv.csv"</span>)</span></code></pre></div>
</div>



 ]]></description>
  <category>DomoStats</category>
  <category>MagicETL</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/without_domolibrary.html</guid>
  <pubDate>Tue, 28 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial - Generate a DomoStats dataset using DomoLibrary</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/index_v2_with_history.html</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<div id="bae946e8-371d-4475-b588-8aeac01e5736" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install --upgrade domolibrary</span></span></code></pre></div>
</div>
<div id="a2c841ed-d0d6-4a30-b189-2099914bad1c" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary</span>
<span id="cb2-2"></span>
<span id="cb2-3">domolibrary.__version__</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>'4.0.1'</code></pre>
</div>
</div>
<section id="retrieve-authentication-credentials" class="level1">
<h1>retrieve Authentication credentials</h1>
<p>Don‚Äôt store your password on the internet!!!</p>
<div id="147ab76f-d1c2-4638-8f08-55e0b110f13d" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"></span>
<span id="cb4-3">domo_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_USERNAME"</span>)</span>
<span id="cb4-4">domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb4-5">domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7">TEST_DATAFLOW_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">108</span></span></code></pre></div>
</div>
<div id="10e5bbe9-ee03-4dcc-8368-7c124c3da2f4" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb5-2"></span>
<span id="cb5-3">auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb5-4">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb5-5">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb5-6">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb5-7">)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> auth.print_is_token()</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> auth.token</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>üéâ full_auth token retrieved from domo-community ‚öôÔ∏è</code></pre>
</div>
</div>
</section>
<section id="retrieve-data" class="level1">
<h1>Retrieve Data</h1>
<ul>
<li><p>How do you handle looping??</p></li>
<li><p>How do you handle ‚Äòfast‚Äô code execution? (asynchronous code execution)</p></li>
<li><p>Will one request be enough?</p>
<ul>
<li>get all dataflow</li>
<li>for each dataflow retrieve the correct information‚Äù</li>
</ul></li>
</ul>
<div id="0f0779bb-ca89-4312-ac53-e54abf62d002" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDatacenter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdc</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_dataflow_ids(auth: dmda.DomoAuth) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""searches domo datacenter and returns a list of dataflow_ids"""</span></span>
<span id="cb7-7"></span>
<span id="cb7-8">    domo_datacenter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmdc.DomoDatacenter(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb7-9"></span>
<span id="cb7-10">    dataflows_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_datacenter.search_datacenter(</span>
<span id="cb7-11">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb7-12">        entity_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATAFLOW"</span>,</span>
<span id="cb7-13">        additional_filters_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb7-14">            {</span>
<span id="cb7-15">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filterType"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"term"</span>,</span>
<span id="cb7-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"field"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_flow_type"</span>,</span>
<span id="cb7-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAGIC"</span>,</span>
<span id="cb7-18">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Magic ETL v2"</span>,</span>
<span id="cb7-19">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"not"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb7-20">            }</span>
<span id="cb7-21">        ],</span>
<span id="cb7-22">    )</span>
<span id="cb7-23"></span>
<span id="cb7-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [dataflow_obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"databaseId"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflows_ls]</span>
<span id="cb7-25"></span>
<span id="cb7-26"></span>
<span id="cb7-27">dataflow_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_dataflow_ids(auth)</span>
<span id="cb7-28">dataflow_ids[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['340', '131', '227', '37', '185']</code></pre>
</div>
</div>
<div id="b1573dcc" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdf</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb9-4"></span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_dataflows(dataflow_ids_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> List[dmdf.DomoDataflow]:</span>
<span id="cb9-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""retrieves dataflow metadata from a list of dataflows"""</span></span>
<span id="cb9-8"></span>
<span id="cb9-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb9-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb9-11">            dmdf.DomoDataflow.get_from_id(dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataflow_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb9-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_ids_ls</span>
<span id="cb9-13">        ],</span>
<span id="cb9-14">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb9-15">    )</span>
<span id="cb9-16"></span>
<span id="cb9-17"></span>
<span id="cb9-18">domo_dataflow_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_dataflows([TEST_DATAFLOW_ID])</span>
<span id="cb9-19">domo_dataflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataflow_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-20">domo_dataflow</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>DomoDataflow(id=108, name='Datasets_lineage', owner=None, description=None, tags=None, actions=[DomoDataflow_Action(id='dce3487e-6a2d-49a2-afd4-1f7867cb3b95', type='LoadFromVault', name='Governance_datasets', datasource_id='42917df1-fa58-483f-a290-5fe95ccda4ed', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='3b3396dd-a673-4211-868f-abbbcc4ce0a3', type='SelectValues', name='Datasets', datasource_id=None, sql=None, depends_on=['dce3487e-6a2d-49a2-afd4-1f7867cb3b95'], parent_actions=[DomoDataflow_Action(id='dce3487e-6a2d-49a2-afd4-1f7867cb3b95', type='LoadFromVault', name='Governance_datasets', datasource_id='42917df1-fa58-483f-a290-5fe95ccda4ed', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='7e839c17-3e1a-4938-86d4-1b19d61c3662', type='SelectValues', name='Dataflow Details', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='b1ec014b-66d8-4518-84fc-7c6579be9749', type='ExpressionEvaluator', name='Add Formula', datasource_id=None, sql=None, depends_on=['741d4ee4-32e9-47ca-8a2d-98f075d17518'], parent_actions=[DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='0d4e85e7-b988-4492-9340-199869d5a66b', type='Unique', name='Remove Duplicates', datasource_id=None, sql=None, depends_on=['b1ec014b-66d8-4518-84fc-7c6579be9749'], parent_actions=[DomoDataflow_Action(id='b1ec014b-66d8-4518-84fc-7c6579be9749', type='ExpressionEvaluator', name='Add Formula', datasource_id=None, sql=None, depends_on=['741d4ee4-32e9-47ca-8a2d-98f075d17518'], parent_actions=[DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='2333341b-3a52-4b43-b72d-4ace763a9d1f', type='UnionAll', name='Dataflow Details With datafusion', datasource_id=None, sql=None, depends_on=['7e839c17-3e1a-4938-86d4-1b19d61c3662', '0d4e85e7-b988-4492-9340-199869d5a66b'], parent_actions=[DomoDataflow_Action(id='7e839c17-3e1a-4938-86d4-1b19d61c3662', type='SelectValues', name='Dataflow Details', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='0d4e85e7-b988-4492-9340-199869d5a66b', type='Unique', name='Remove Duplicates', datasource_id=None, sql=None, depends_on=['b1ec014b-66d8-4518-84fc-7c6579be9749'], parent_actions=[DomoDataflow_Action(id='b1ec014b-66d8-4518-84fc-7c6579be9749', type='ExpressionEvaluator', name='Add Formula', datasource_id=None, sql=None, depends_on=['741d4ee4-32e9-47ca-8a2d-98f075d17518'], parent_actions=[DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='33a5f316-cb1e-4c2c-bf10-911396a5ae97', type='PythonEngineAction', name='Python Script', datasource_id=None, sql=None, depends_on=['3b3396dd-a673-4211-868f-abbbcc4ce0a3', '2333341b-3a52-4b43-b72d-4ace763a9d1f'], parent_actions=[DomoDataflow_Action(id='3b3396dd-a673-4211-868f-abbbcc4ce0a3', type='SelectValues', name='Datasets', datasource_id=None, sql=None, depends_on=['dce3487e-6a2d-49a2-afd4-1f7867cb3b95'], parent_actions=[DomoDataflow_Action(id='dce3487e-6a2d-49a2-afd4-1f7867cb3b95', type='LoadFromVault', name='Governance_datasets', datasource_id='42917df1-fa58-483f-a290-5fe95ccda4ed', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='2333341b-3a52-4b43-b72d-4ace763a9d1f', type='UnionAll', name='Dataflow Details With datafusion', datasource_id=None, sql=None, depends_on=['7e839c17-3e1a-4938-86d4-1b19d61c3662', '0d4e85e7-b988-4492-9340-199869d5a66b'], parent_actions=[DomoDataflow_Action(id='7e839c17-3e1a-4938-86d4-1b19d61c3662', type='SelectValues', name='Dataflow Details', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='0d4e85e7-b988-4492-9340-199869d5a66b', type='Unique', name='Remove Duplicates', datasource_id=None, sql=None, depends_on=['b1ec014b-66d8-4518-84fc-7c6579be9749'], parent_actions=[DomoDataflow_Action(id='b1ec014b-66d8-4518-84fc-7c6579be9749', type='ExpressionEvaluator', name='Add Formula', datasource_id=None, sql=None, depends_on=['741d4ee4-32e9-47ca-8a2d-98f075d17518'], parent_actions=[DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='dffae0ba-4e21-457f-b190-9af841e5f771', type='PublishToVault', name='Datasets_lineage', datasource_id='715429cb-45c5-4da6-b606-23d845da0f2b', sql=None, depends_on=['33a5f316-cb1e-4c2c-bf10-911396a5ae97'], parent_actions=[DomoDataflow_Action(id='33a5f316-cb1e-4c2c-bf10-911396a5ae97', type='PythonEngineAction', name='Python Script', datasource_id=None, sql=None, depends_on=['3b3396dd-a673-4211-868f-abbbcc4ce0a3', '2333341b-3a52-4b43-b72d-4ace763a9d1f'], parent_actions=[DomoDataflow_Action(id='3b3396dd-a673-4211-868f-abbbcc4ce0a3', type='SelectValues', name='Datasets', datasource_id=None, sql=None, depends_on=['dce3487e-6a2d-49a2-afd4-1f7867cb3b95'], parent_actions=[DomoDataflow_Action(id='dce3487e-6a2d-49a2-afd4-1f7867cb3b95', type='LoadFromVault', name='Governance_datasets', datasource_id='42917df1-fa58-483f-a290-5fe95ccda4ed', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='2333341b-3a52-4b43-b72d-4ace763a9d1f', type='UnionAll', name='Dataflow Details With datafusion', datasource_id=None, sql=None, depends_on=['7e839c17-3e1a-4938-86d4-1b19d61c3662', '0d4e85e7-b988-4492-9340-199869d5a66b'], parent_actions=[DomoDataflow_Action(id='7e839c17-3e1a-4938-86d4-1b19d61c3662', type='SelectValues', name='Dataflow Details', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='0d4e85e7-b988-4492-9340-199869d5a66b', type='Unique', name='Remove Duplicates', datasource_id=None, sql=None, depends_on=['b1ec014b-66d8-4518-84fc-7c6579be9749'], parent_actions=[DomoDataflow_Action(id='b1ec014b-66d8-4518-84fc-7c6579be9749', type='ExpressionEvaluator', name='Add Formula', datasource_id=None, sql=None, depends_on=['741d4ee4-32e9-47ca-8a2d-98f075d17518'], parent_actions=[DomoDataflow_Action(id='741d4ee4-32e9-47ca-8a2d-98f075d17518', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['b285a26d-cc81-4ac9-bfc5-68effba45241'], parent_actions=[DomoDataflow_Action(id='b285a26d-cc81-4ac9-bfc5-68effba45241', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['df709f9b-0e6f-4f69-8b66-aa7411028db8'], parent_actions=[DomoDataflow_Action(id='df709f9b-0e6f-4f69-8b66-aa7411028db8', type='LoadFromVault', name='Governance_dataflow_details', datasource_id='260a54f7-9636-4eac-9a24-39e56d9b2f5d', sql=None, depends_on=None, parent_actions=None)])])])])])])])], version_id=None, version_number=None, versions=None, history=DomoDataflow_History(execution_history=None))</code></pre>
</div>
</div>
<div id="c0e61dab" class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb11-2"></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_version_action_pdf(domo_dataflow: dmdf.DomoDataflow) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb11-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""retrieves dataflow definition version history of a dataflow"""</span></span>
<span id="cb11-6"></span>
<span id="cb11-7">    dataflow_versions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataflow.get_versions()</span>
<span id="cb11-8"></span>
<span id="cb11-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> domo_dataflow.versions:</span>
<span id="cb11-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pd.DataFrame()</span>
<span id="cb11-11"></span>
<span id="cb11-12">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb11-13">        [</span>
<span id="cb11-14">            {</span>
<span id="cb11-15">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: dataflow_version.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb11-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>: dataflow_version.version_id,</span>
<span id="cb11-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_name"</span>: dataflow_version.name,</span>
<span id="cb11-18">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>domo_action.__dict__,</span>
<span id="cb11-19">            }</span>
<span id="cb11-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_version <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_versions</span>
<span id="cb11-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_version.actions</span>
<span id="cb11-22">        ]</span>
<span id="cb11-23">    )</span>
<span id="cb11-24"></span>
<span id="cb11-25">    df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_actions"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datasource_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sql"</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-26">    df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>}, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-27"></span>
<span id="cb11-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb11-29"></span>
<span id="cb11-30"></span>
<span id="cb11-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_version_action_pdf(domo_dataflow)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">dataflow_name</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">depends_on</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>LoadFromVault</td>
<td>Governance_datasets</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>LoadFromVault</td>
<td>Governance_dataflow_details</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>SelectValues</td>
<td>Datasets</td>
<td>[dce3487e-6a2d-49a2-afd4-1f7867cb3b95]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>SelectValues</td>
<td>Dataflow Details</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>b285a26d-cc81-4ac9-bfc5-68effba45241</td>
<td>Filter</td>
<td>Filter Rows</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>741d4ee4-32e9-47ca-8a2d-98f075d17518</td>
<td>SelectValues</td>
<td>Select Columns</td>
<td>[b285a26d-cc81-4ac9-bfc5-68effba45241]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>b1ec014b-66d8-4518-84fc-7c6579be9749</td>
<td>ExpressionEvaluator</td>
<td>Add Formula</td>
<td>[741d4ee4-32e9-47ca-8a2d-98f075d17518]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>2333341b-3a52-4b43-b72d-4ace763a9d1f</td>
<td>UnionAll</td>
<td>Dataflow Details With datafusion</td>
<td>[7e839c17-3e1a-4938-86d4-1b19d61c3662, 0d4e85e...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>PythonEngineAction</td>
<td>Python Script</td>
<td>[3b3396dd-a673-4211-868f-abbbcc4ce0a3, 2333341...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>dffae0ba-4e21-457f-b190-9af841e5f771</td>
<td>PublishToVault</td>
<td>Datasets_lineage</td>
<td>[33a5f316-cb1e-4c2c-bf10-911396a5ae97]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>108</td>
<td>448</td>
<td>Datasets_lineage</td>
<td>0d4e85e7-b988-4492-9340-199869d5a66b</td>
<td>Unique</td>
<td>Remove Duplicates</td>
<td>[b1ec014b-66d8-4518-84fc-7c6579be9749]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>LoadFromVault</td>
<td>Governance_datasets</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>LoadFromVault</td>
<td>Governance_dataflow_details</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>SelectValues</td>
<td>Datasets</td>
<td>[dce3487e-6a2d-49a2-afd4-1f7867cb3b95]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>SelectValues</td>
<td>Dataflow Details</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>b285a26d-cc81-4ac9-bfc5-68effba45241</td>
<td>Filter</td>
<td>Filter Rows</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">16</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>741d4ee4-32e9-47ca-8a2d-98f075d17518</td>
<td>SelectValues</td>
<td>Select Columns</td>
<td>[b285a26d-cc81-4ac9-bfc5-68effba45241]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">17</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>b1ec014b-66d8-4518-84fc-7c6579be9749</td>
<td>ExpressionEvaluator</td>
<td>Add Formula</td>
<td>[741d4ee4-32e9-47ca-8a2d-98f075d17518]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">18</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>2333341b-3a52-4b43-b72d-4ace763a9d1f</td>
<td>UnionAll</td>
<td>Dataflow Details With datafusion</td>
<td>[7e839c17-3e1a-4938-86d4-1b19d61c3662, b1ec014...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">19</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>PythonEngineAction</td>
<td>Python Script</td>
<td>[3b3396dd-a673-4211-868f-abbbcc4ce0a3, 2333341...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">20</td>
<td>108</td>
<td>443</td>
<td>Datasets_lineage</td>
<td>dffae0ba-4e21-457f-b190-9af841e5f771</td>
<td>PublishToVault</td>
<td>Datasets_lineage</td>
<td>[33a5f316-cb1e-4c2c-bf10-911396a5ae97]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">21</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>LoadFromVault</td>
<td>Governance_datasets</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">22</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>LoadFromVault</td>
<td>Governance_dataflow_details</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">23</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>SelectValues</td>
<td>Datasets</td>
<td>[dce3487e-6a2d-49a2-afd4-1f7867cb3b95]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">24</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>SelectValues</td>
<td>Dataflow Details</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">25</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>PythonEngineAction</td>
<td>Python Script</td>
<td>[3b3396dd-a673-4211-868f-abbbcc4ce0a3, 2333341...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">26</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>dffae0ba-4e21-457f-b190-9af841e5f771</td>
<td>PublishToVault</td>
<td>Datasets_lineage</td>
<td>[33a5f316-cb1e-4c2c-bf10-911396a5ae97]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">27</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>b285a26d-cc81-4ac9-bfc5-68effba45241</td>
<td>Filter</td>
<td>Filter Rows</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">28</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>741d4ee4-32e9-47ca-8a2d-98f075d17518</td>
<td>SelectValues</td>
<td>Select Columns</td>
<td>[b285a26d-cc81-4ac9-bfc5-68effba45241]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">29</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>b1ec014b-66d8-4518-84fc-7c6579be9749</td>
<td>ExpressionEvaluator</td>
<td>Add Formula</td>
<td>[741d4ee4-32e9-47ca-8a2d-98f075d17518]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">30</td>
<td>108</td>
<td>442</td>
<td>Datasets_lineage</td>
<td>2333341b-3a52-4b43-b72d-4ace763a9d1f</td>
<td>UnionAll</td>
<td>Dataflow Details With datafusion</td>
<td>[7e839c17-3e1a-4938-86d4-1b19d61c3662, b1ec014...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">31</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>LoadFromVault</td>
<td>Governance_datasets</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">32</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>LoadFromVault</td>
<td>Governance_dataflow_details</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">33</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>SelectValues</td>
<td>Datasets</td>
<td>[dce3487e-6a2d-49a2-afd4-1f7867cb3b95]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">34</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>SelectValues</td>
<td>Dataflow Details</td>
<td>[df709f9b-0e6f-4f69-8b66-aa7411028db8]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">35</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>PythonEngineAction</td>
<td>Python Script</td>
<td>[3b3396dd-a673-4211-868f-abbbcc4ce0a3, 7e839c1...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">36</td>
<td>108</td>
<td>441</td>
<td>Datasets_lineage</td>
<td>dffae0ba-4e21-457f-b190-9af841e5f771</td>
<td>PublishToVault</td>
<td>Datasets_lineage</td>
<td>[33a5f316-cb1e-4c2c-bf10-911396a5ae97]</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="1ed279c3" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_action_stats_df(</span>
<span id="cb12-2">    domo_dataflow: dmdf.DomoDataflow,</span>
<span id="cb12-3">    maximum_history: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of history to look back</span></span>
<span id="cb12-4">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb12-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""returns execution history by tile"""</span></span>
<span id="cb12-6"></span>
<span id="cb12-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataflow.history.get_execution_history(maximum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>maximum_history)</span>
<span id="cb12-8"></span>
<span id="cb12-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (</span>
<span id="cb12-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> domo_dataflow.history</span>
<span id="cb12-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> domo_dataflow.history.execution_history</span>
<span id="cb12-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(domo_dataflow.history.execution_history) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-13">    ):</span>
<span id="cb12-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb12-15">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"‚ö†Ô∏è dataflow </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_dataflow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_dataflow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> has never been executed"</span></span>
<span id="cb12-16">        )</span>
<span id="cb12-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pd.DataFrame()</span>
<span id="cb12-18"></span>
<span id="cb12-19">    history_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-20">        domo_history</span>
<span id="cb12-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_history <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataflow.history.execution_history</span>
<span id="cb12-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> domo_history.action_results <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(domo_history.action_results) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-23">    ]</span>
<span id="cb12-24"></span>
<span id="cb12-25">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb12-26">        [</span>
<span id="cb12-27">            {</span>
<span id="cb12-28">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>: domo_history.dataflow_execution_id,</span>
<span id="cb12-29">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>: domo_history.dataflow_version,</span>
<span id="cb12-30">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: domo_history.dataflow_id,</span>
<span id="cb12-31">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_begin_time"</span>: domo_history.begin_time,</span>
<span id="cb12-32">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>domo_action.__dict__,</span>
<span id="cb12-33">            }</span>
<span id="cb12-34">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_history <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> history_ls</span>
<span id="cb12-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_history.action_results</span>
<span id="cb12-36">        ]</span>
<span id="cb12-37">    )</span>
<span id="cb12-38"></span>
<span id="cb12-39">    df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-40"></span>
<span id="cb12-41">    df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>}, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-42"></span>
<span id="cb12-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb12-44"></span>
<span id="cb12-45"></span>
<span id="cb12-46">stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_action_stats_df(domo_dataflow)</span>
<span id="cb12-47">stats_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_execution_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_begin_time</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">is_success</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>133cb2f6-caf7-4ef0-8535-4f5effdf121e</td>
<td>448</td>
<td>108</td>
<td>2022-11-04 10:06:26</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>DataHubManifestLoaderAction</td>
<td>True</td>
<td>576</td>
<td>2022-11-04 10:06:31.425</td>
<td>2022-11-04 10:06:32.316</td>
<td>0.891</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>133cb2f6-caf7-4ef0-8535-4f5effdf121e</td>
<td>448</td>
<td>108</td>
<td>2022-11-04 10:06:26</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>DataHubManifestLoaderAction</td>
<td>True</td>
<td>367</td>
<td>2022-11-04 10:06:31.425</td>
<td>2022-11-04 10:06:32.314</td>
<td>0.889</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>133cb2f6-caf7-4ef0-8535-4f5effdf121e</td>
<td>448</td>
<td>108</td>
<td>2022-11-04 10:06:26</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>SelectValues</td>
<td>True</td>
<td>576</td>
<td>2022-11-04 10:06:32.278</td>
<td>2022-11-04 10:06:32.316</td>
<td>0.038</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>133cb2f6-caf7-4ef0-8535-4f5effdf121e</td>
<td>448</td>
<td>108</td>
<td>2022-11-04 10:06:26</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>SelectValues</td>
<td>True</td>
<td>367</td>
<td>2022-11-04 10:06:32.276</td>
<td>2022-11-04 10:06:32.277</td>
<td>0.001</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>133cb2f6-caf7-4ef0-8535-4f5effdf121e</td>
<td>448</td>
<td>108</td>
<td>2022-11-04 10:06:26</td>
<td>b285a26d-cc81-4ac9-bfc5-68effba45241</td>
<td>Filter</td>
<td>True</td>
<td>367</td>
<td>2022-11-04 10:06:32.278</td>
<td>2022-11-04 10:06:32.280</td>
<td>0.002</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="4df985e4-bc19-4af4-8f73-e0b446b32184" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_instance(auth):</span>
<span id="cb13-2">    dataflow_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_dataflow_ids(auth)</span>
<span id="cb13-3"></span>
<span id="cb13-4">    domo_dataflows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_dataflows(dataflow_ids)</span>
<span id="cb13-5"></span>
<span id="cb13-6">    actions_df_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb13-7">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb13-8">            generate_version_action_pdf(domo_dataflow)</span>
<span id="cb13-9">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_dataflow <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataflows</span>
<span id="cb13-10">        ],</span>
<span id="cb13-11">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb13-12">    )</span>
<span id="cb13-13"></span>
<span id="cb13-14">    stats_df_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ce.gather_with_concurrency(</span>
<span id="cb13-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[generate_action_stats_df(domo_dataflow) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_dataflow <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataflows],</span>
<span id="cb13-16">        n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb13-17">    )</span>
<span id="cb13-18"></span>
<span id="cb13-19">    actions_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(actions_df_ls)</span>
<span id="cb13-20"></span>
<span id="cb13-21">    stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(stats_df_ls)</span>
<span id="cb13-22"></span>
<span id="cb13-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import domojupyter as dj</span></span>
<span id="cb13-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dj.write_dataframe(actions_df, 'MONIT_Dataflow_Tiles')</span></span>
<span id="cb13-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dj.write_dataframe(stats_df, 'MONIT_Dataflow_Stats')</span></span>
<span id="cb13-26"></span>
<span id="cb13-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> actions_df, stats_df</span>
<span id="cb13-28"></span>
<span id="cb13-29"></span>
<span id="cb13-30">base_actions_df, base_stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> process_instance(auth)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>‚ö†Ô∏è dataflow 69 - Copy of gov_datasets_INT has never been executed
‚ö†Ô∏è dataflow 27 - JW_Simple Sample Set_Rolling Averages has never been executed
‚ö†Ô∏è dataflow 85 - Working Hours Test has never been executed
‚ö†Ô∏è dataflow 322 - Forecast Sales - HV has never been executed
‚ö†Ô∏è dataflow 83 - Working Hours Example has never been executed
‚ö†Ô∏è dataflow 323 - New ETL Transform has never been executed</code></pre>
</div>
</div>
<div id="fcd3dab5-0a97-4c12-bc79-ba079ca39366" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_datasets(actions_df, stats_df, dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, execution_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb15-2"></span>
<span id="cb15-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### filter and configure actions_df</span></span>
<span id="cb15-4">    actions_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> actions_df.copy()</span>
<span id="cb15-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dataflow_id:</span>
<span id="cb15-6">        actions_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> actions_df[actions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> dataflow_id]</span>
<span id="cb15-7">    actions_df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_name"</span>}, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-8"></span>
<span id="cb15-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### filter and configure stats_df</span></span>
<span id="cb15-10">    stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats_df.copy()</span>
<span id="cb15-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> execution_id:</span>
<span id="cb15-12">        stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats_df[stats_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> execution_id]</span>
<span id="cb15-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dataflow_id:</span>
<span id="cb15-14">        stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats_df[stats_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> dataflow_id]</span>
<span id="cb15-15"></span>
<span id="cb15-16">    stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(</span>
<span id="cb15-17">        stats_df,</span>
<span id="cb15-18">        actions_df[</span>
<span id="cb15-19">            [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_name"</span>]</span>
<span id="cb15-20">        ],</span>
<span id="cb15-21">        how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>,</span>
<span id="cb15-22">    )</span>
<span id="cb15-23"></span>
<span id="cb15-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### handle generate facts_df with one row per action and parent</span></span>
<span id="cb15-25">    explode_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> actions_df[</span>
<span id="cb15-26">        [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>]</span>
<span id="cb15-27">    ].explode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>)</span>
<span id="cb15-28"></span>
<span id="cb15-29">    facts_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats_df[</span>
<span id="cb15-30">        [</span>
<span id="cb15-31">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_name"</span>,</span>
<span id="cb15-32">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>,</span>
<span id="cb15-33">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>,</span>
<span id="cb15-34">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>,</span>
<span id="cb15-35">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>,</span>
<span id="cb15-36">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_name"</span>,</span>
<span id="cb15-37">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>,</span>
<span id="cb15-38">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>,</span>
<span id="cb15-39">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_begin_time"</span>,</span>
<span id="cb15-40">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_time"</span>,</span>
<span id="cb15-41">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>,</span>
<span id="cb15-42">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration_in_sec"</span>,</span>
<span id="cb15-43">        ]</span>
<span id="cb15-44">    ]</span>
<span id="cb15-45"></span>
<span id="cb15-46">    parent_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> facts_df[</span>
<span id="cb15-47">        [</span>
<span id="cb15-48">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>,</span>
<span id="cb15-49">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>,</span>
<span id="cb15-50">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>,</span>
<span id="cb15-51">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>,</span>
<span id="cb15-52">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_name"</span>,</span>
<span id="cb15-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>,</span>
<span id="cb15-54">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>,</span>
<span id="cb15-55">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>,</span>
<span id="cb15-56">        ]</span>
<span id="cb15-57">    ].rename(</span>
<span id="cb15-58">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb15-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>,</span>
<span id="cb15-60">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_name"</span>,</span>
<span id="cb15-61">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_type"</span>,</span>
<span id="cb15-62">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_rows_processed"</span>,</span>
<span id="cb15-63">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>,</span>
<span id="cb15-64">        }</span>
<span id="cb15-65">    )</span>
<span id="cb15-66"></span>
<span id="cb15-67">    facts_by_parent_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(</span>
<span id="cb15-68">        facts_df,</span>
<span id="cb15-69">        explode_df,</span>
<span id="cb15-70">        how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span>,</span>
<span id="cb15-71">        on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>],</span>
<span id="cb15-72">    )</span>
<span id="cb15-73">    facts_by_parent_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(</span>
<span id="cb15-74">        facts_by_parent_df,</span>
<span id="cb15-75">        parent_df,</span>
<span id="cb15-76">        how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb15-77">        on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>],</span>
<span id="cb15-78">    ).rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>})</span>
<span id="cb15-79"></span>
<span id="cb15-80">    facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> facts_by_parent_df[</span>
<span id="cb15-81">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span></span>
<span id="cb15-82">    ].fillna(facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_time"</span>])</span>
<span id="cb15-83"></span>
<span id="cb15-84">    facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual_duration_in_sec"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb15-85">        facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>]</span>
<span id="cb15-86">    ).dt.total_seconds()</span>
<span id="cb15-87">    facts_by_parent_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_delay_rank"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> facts_by_parent_df.groupby(</span>
<span id="cb15-88">        [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_execution_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>]</span>
<span id="cb15-89">    )[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual_duration_in_sec"</span>].rank(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb15-90"></span>
<span id="cb15-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> facts_by_parent_df.sort_values(</span>
<span id="cb15-92">        by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_time"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>], ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb15-93">    )</span>
<span id="cb15-94"></span>
<span id="cb15-95"></span>
<span id="cb15-96">generate_datasets(</span>
<span id="cb15-97">    base_actions_df,</span>
<span id="cb15-98">    base_stats_df,</span>
<span id="cb15-99">    TEST_DATAFLOW_ID,</span>
<span id="cb15-100">    execution_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1e331f2b-1db8-460d-9860-334aedc88e93"</span>,</span>
<span id="cb15-101">)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_name</th>
<th data-quarto-table-cell-role="th">dataflow_execution_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_name</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">dataflow_begin_time</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
<th data-quarto-table-cell-role="th">parent_tile_id</th>
<th data-quarto-table-cell-role="th">parent_tile_name</th>
<th data-quarto-table-cell-role="th">parent_tile_type</th>
<th data-quarto-table-cell-role="th">parent_rows_processed</th>
<th data-quarto-table-cell-role="th">parent_end_time</th>
<th data-quarto-table-cell-role="th">actual_duration_in_sec</th>
<th data-quarto-table-cell-role="th">tile_delay_rank</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>Governance_datasets</td>
<td>DataHubManifestLoaderAction</td>
<td>570.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:05.717</td>
<td>2022-11-03 09:33:06.614</td>
<td>0.897</td>
<td>None</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>2022-11-03 09:33:05.717</td>
<td>0.897</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>Governance_dataflow_details</td>
<td>DataHubManifestLoaderAction</td>
<td>361.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:05.717</td>
<td>2022-11-03 09:33:06.656</td>
<td>0.939</td>
<td>None</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>2022-11-03 09:33:05.717</td>
<td>0.939</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>Datasets</td>
<td>SelectValues</td>
<td>570.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:06.609</td>
<td>2022-11-03 09:33:06.614</td>
<td>0.005</td>
<td>dce3487e-6a2d-49a2-afd4-1f7867cb3b95</td>
<td>Governance_datasets</td>
<td>DataHubManifestLoaderAction</td>
<td>570.0</td>
<td>2022-11-03 09:33:06.614</td>
<td>0.000</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>Python Script</td>
<td>PythonEngineAction</td>
<td>931.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:06.610</td>
<td>2022-11-03 09:33:15.408</td>
<td>8.798</td>
<td>3b3396dd-a673-4211-868f-abbbcc4ce0a3</td>
<td>Datasets</td>
<td>SelectValues</td>
<td>570.0</td>
<td>2022-11-03 09:33:06.614</td>
<td>8.794</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>Python Script</td>
<td>PythonEngineAction</td>
<td>931.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:06.610</td>
<td>2022-11-03 09:33:15.408</td>
<td>8.798</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>Dataflow Details</td>
<td>SelectValues</td>
<td>361.0</td>
<td>2022-11-03 09:33:06.656</td>
<td>8.752</td>
<td>2.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>7e839c17-3e1a-4938-86d4-1b19d61c3662</td>
<td>Dataflow Details</td>
<td>SelectValues</td>
<td>361.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:06.656</td>
<td>2022-11-03 09:33:06.656</td>
<td>0.000</td>
<td>df709f9b-0e6f-4f69-8b66-aa7411028db8</td>
<td>Governance_dataflow_details</td>
<td>DataHubManifestLoaderAction</td>
<td>361.0</td>
<td>2022-11-03 09:33:06.656</td>
<td>0.000</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>Datasets_lineage</td>
<td>1e331f2b-1db8-460d-9860-334aedc88e93</td>
<td>441</td>
<td>108</td>
<td>dffae0ba-4e21-457f-b190-9af841e5f771</td>
<td>Datasets_lineage</td>
<td>PublishToVault</td>
<td>1391.0</td>
<td>2022-11-03 09:33:00</td>
<td>2022-11-03 09:33:15.348</td>
<td>2022-11-03 09:33:15.490</td>
<td>0.142</td>
<td>33a5f316-cb1e-4c2c-bf10-911396a5ae97</td>
<td>Python Script</td>
<td>PythonEngineAction</td>
<td>931.0</td>
<td>2022-11-03 09:33:15.408</td>
<td>0.082</td>
<td>1.0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="324ad093-268f-4533-8f6d-23477d762c72" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">generate_datasets(base_actions_df, base_stats_df, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dj.write_dataframe(exploded_df , 'MONIT_Dataflow_Tiles_Exploded')</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_name</th>
<th data-quarto-table-cell-role="th">dataflow_execution_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_name</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">dataflow_begin_time</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
<th data-quarto-table-cell-role="th">parent_tile_id</th>
<th data-quarto-table-cell-role="th">parent_tile_name</th>
<th data-quarto-table-cell-role="th">parent_tile_type</th>
<th data-quarto-table-cell-role="th">parent_rows_processed</th>
<th data-quarto-table-cell-role="th">parent_end_time</th>
<th data-quarto-table-cell-role="th">actual_duration_in_sec</th>
<th data-quarto-table-cell-role="th">tile_delay_rank</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">11025</td>
<td>MetaData_Stage 1</td>
<td>8f77dfc7-b2fb-4f3c-9d24-1d94e0e32424</td>
<td>19</td>
<td>8</td>
<td>d312578c-e9cb-4e3a-9dc6-662c00c93ba0</td>
<td>Governance_Users and Groups</td>
<td>DataHubManifestLoaderAction</td>
<td>35.0</td>
<td>2020-07-09 16:00:07</td>
<td>2020-07-09 16:00:17.000</td>
<td>2020-07-09 16:00:21.000</td>
<td>4.000</td>
<td>None</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>2020-07-09 16:00:17.000</td>
<td>4.000</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11026</td>
<td>MetaData_Stage 1</td>
<td>8f77dfc7-b2fb-4f3c-9d24-1d94e0e32424</td>
<td>19</td>
<td>8</td>
<td>d316ddf3-9917-4542-bf68-e1cd8397d894</td>
<td>Governance_Groups</td>
<td>DataHubManifestLoaderAction</td>
<td>3.0</td>
<td>2020-07-09 16:00:07</td>
<td>2020-07-09 16:00:17.000</td>
<td>2020-07-09 16:00:21.000</td>
<td>4.000</td>
<td>None</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>2020-07-09 16:00:17.000</td>
<td>4.000</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">11028</td>
<td>MetaData_Stage 1</td>
<td>8f77dfc7-b2fb-4f3c-9d24-1d94e0e32424</td>
<td>19</td>
<td>8</td>
<td>eebdf394-fc6d-40c0-895e-b325044db506</td>
<td>MetaData_Groups</td>
<td>PublishToVault</td>
<td>3.0</td>
<td>2020-07-09 16:00:07</td>
<td>2020-07-09 16:00:21.000</td>
<td>2020-07-09 16:00:22.000</td>
<td>1.000</td>
<td>0fe45cc8-7c88-48cb-a437-4656954767a6</td>
<td>PDP?</td>
<td>Constant</td>
<td>3.0</td>
<td>2020-07-09 16:00:21.000</td>
<td>1.000</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11027</td>
<td>MetaData_Stage 1</td>
<td>8f77dfc7-b2fb-4f3c-9d24-1d94e0e32424</td>
<td>19</td>
<td>8</td>
<td>e048f809-08ae-49c2-84be-5b7b76a99944</td>
<td>MetaData_Users and Groups</td>
<td>PublishToVault</td>
<td>35.0</td>
<td>2020-07-09 16:00:07</td>
<td>2020-07-09 16:00:21.000</td>
<td>2020-07-09 16:00:22.000</td>
<td>1.000</td>
<td>8e52e4dc-fd3a-455b-9ec1-c2a404d342d0</td>
<td>PDP? 1</td>
<td>Constant</td>
<td>35.0</td>
<td>2020-07-09 16:00:21.000</td>
<td>1.000</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">11024</td>
<td>MetaData_Stage 1</td>
<td>8f77dfc7-b2fb-4f3c-9d24-1d94e0e32424</td>
<td>19</td>
<td>8</td>
<td>8e52e4dc-fd3a-455b-9ec1-c2a404d342d0</td>
<td>PDP? 1</td>
<td>Constant</td>
<td>35.0</td>
<td>2020-07-09 16:00:07</td>
<td>2020-07-09 16:00:21.000</td>
<td>2020-07-09 16:00:21.000</td>
<td>0.000</td>
<td>d312578c-e9cb-4e3a-9dc6-662c00c93ba0</td>
<td>Governance_Users and Groups</td>
<td>DataHubManifestLoaderAction</td>
<td>35.0</td>
<td>2020-07-09 16:00:21.000</td>
<td>0.000</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">11750</td>
<td>DEV | Swish Central</td>
<td>69207fcb-bc5b-4792-b82d-81a8eb05bc70</td>
<td>1062</td>
<td>357</td>
<td>f2a5bf78-3757-4be3-b555-a354df56ce53</td>
<td>TEST | Swish Central</td>
<td>PublishToVault</td>
<td>40756.0</td>
<td>2024-02-06 16:35:04</td>
<td>2024-02-06 16:35:20.967</td>
<td>2024-02-06 16:35:24.767</td>
<td>3.800</td>
<td>47257e8e-8a34-41cf-a438-3c034eeb4f87</td>
<td>Select Columns 1</td>
<td>SelectValues</td>
<td>40756.0</td>
<td>2024-02-06 16:35:24.066</td>
<td>0.701</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11747</td>
<td>DEV | Swish Central</td>
<td>69207fcb-bc5b-4792-b82d-81a8eb05bc70</td>
<td>1062</td>
<td>357</td>
<td>d6fb5455-f89b-4c83-8714-89fd084db9bb</td>
<td>Remove Duplicates</td>
<td>Unique</td>
<td>38111.0</td>
<td>2024-02-06 16:35:04</td>
<td>2024-02-06 16:35:21.167</td>
<td>2024-02-06 16:35:24.065</td>
<td>2.898</td>
<td>2a867c0e-8a3d-49db-81fa-d1ab6668c82c</td>
<td>Filter Rows</td>
<td>Filter</td>
<td>40756.0</td>
<td>2024-02-06 16:35:24.065</td>
<td>0.000</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">11746</td>
<td>DEV | Swish Central</td>
<td>69207fcb-bc5b-4792-b82d-81a8eb05bc70</td>
<td>1062</td>
<td>357</td>
<td>2a867c0e-8a3d-49db-81fa-d1ab6668c82c</td>
<td>Filter Rows</td>
<td>Filter</td>
<td>40756.0</td>
<td>2024-02-06 16:35:04</td>
<td>2024-02-06 16:35:21.167</td>
<td>2024-02-06 16:35:24.065</td>
<td>2.898</td>
<td>47257e8e-8a34-41cf-a438-3c034eeb4f87</td>
<td>Select Columns 1</td>
<td>SelectValues</td>
<td>40756.0</td>
<td>2024-02-06 16:35:24.066</td>
<td>-0.001</td>
<td>1.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11749</td>
<td>DEV | Swish Central</td>
<td>69207fcb-bc5b-4792-b82d-81a8eb05bc70</td>
<td>1062</td>
<td>357</td>
<td>1da7fa87-0d1b-434d-b018-cb80a5f3ce5a</td>
<td>DEV | Swish Central</td>
<td>PublishToVault</td>
<td>37924.0</td>
<td>2024-02-06 16:35:04</td>
<td>2024-02-06 16:35:21.168</td>
<td>2024-02-06 16:35:24.734</td>
<td>3.566</td>
<td>24bc7117-ac36-4e5c-aee5-582d8f954cec</td>
<td>Add Formula 4</td>
<td>ExpressionEvaluator</td>
<td>37924.0</td>
<td>2024-02-06 16:35:24.066</td>
<td>0.668</td>
<td>1.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">11748</td>
<td>DEV | Swish Central</td>
<td>69207fcb-bc5b-4792-b82d-81a8eb05bc70</td>
<td>1062</td>
<td>357</td>
<td>24bc7117-ac36-4e5c-aee5-582d8f954cec</td>
<td>Add Formula 4</td>
<td>ExpressionEvaluator</td>
<td>37924.0</td>
<td>2024-02-06 16:35:04</td>
<td>2024-02-06 16:35:21.168</td>
<td>2024-02-06 16:35:24.066</td>
<td>2.898</td>
<td>d6fb5455-f89b-4c83-8714-89fd084db9bb</td>
<td>Remove Duplicates</td>
<td>Unique</td>
<td>38111.0</td>
<td>2024-02-06 16:35:24.065</td>
<td>0.001</td>
<td>1.0</td>
</tr>
</tbody>
</table>

<p>15633 rows √ó 19 columns</p>
</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>DomoStats</category>
  <category>MagicETL</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/index_v2_with_history.html</guid>
  <pubDate>Tue, 28 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial - Generate a DomoStats dataset using DomoLibrary</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<div id="bae946e8-371d-4475-b588-8aeac01e5736" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install domolibrary</span></span></code></pre></div>
</div>
<div id="88a03454-93a8-4c82-bc3e-5b470836c876" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"></span>
<span id="cb2-3">domo_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_USERNAME"</span>)</span>
<span id="cb2-4">domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb2-5">domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>)</span></code></pre></div>
</div>
<div id="ac8de4b3-e938-4a53-85f0-cc327642e386" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb3-2"></span>
<span id="cb3-3">auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb3-4">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb3-5">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb3-6">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb3-7">)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> auth.print_is_token()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>üéâ full_auth token retrieved from domo-community ‚öôÔ∏è</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>True</code></pre>
</div>
</div>
<div id="0f0779bb-ca89-4312-ac53-e54abf62d002" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDatacenter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdc</span>
<span id="cb6-2"></span>
<span id="cb6-3">domo_datacenter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmdc.DomoDatacenter(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb6-4"></span>
<span id="cb6-5">dataflows_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_datacenter.search_datacenter(</span>
<span id="cb6-6">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb6-7">    entity_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATAFLOW"</span>,</span>
<span id="cb6-8">    additional_filters_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb6-9">        {</span>
<span id="cb6-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"filterType"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"term"</span>,</span>
<span id="cb6-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"field"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_flow_type"</span>,</span>
<span id="cb6-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MAGIC"</span>,</span>
<span id="cb6-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Magic ETL v2"</span>,</span>
<span id="cb6-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"not"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb6-15">        }</span>
<span id="cb6-16">    ],</span>
<span id="cb6-17">)</span>
<span id="cb6-18"></span>
<span id="cb6-19">dataflows_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'entityType': 'dataflow',
 'databaseId': '340',
 'searchId': {'indexName': None,
  'databaseId': '340',
  'customer': 'mmmm-0012-0200',
  'entityType': 'dataflow'},
 'createDate': 1699938646000,
 'lastModified': 1701451542000,
 'lastIndexed': 1701451545056,
 'highlightedFields': {},
 'language': 'English',
 'requestAccess': False,
 'score': 56.957905,
 'name': 'Demo Active Employees',
 'description': '',
 'ownedById': '699075231',
 'ownedByName': 'Mark Snodgrass',
 'tags': [],
 'lastRunDate': 1699938659000,
 'inputDatasets': [{'name': 'DomoStats - People',
   'id': '241025d7-3cca-4369-b7c0-b3264277c0e1'},
  {'name': 'Domo Dimensions - Calendar',
   'id': 'd6b99a99-63c7-46f0-8e54-38045e29e710'}],
 'outputDatasets': [{'name': 'Demo Active Employees',
   'id': 'b25b7f48-5257-4e26-bffa-b240b0caefea'}],
 'runCount': 1,
 'successRate': 1.0,
 'dataFlowType': 'MAGIC',
 'status': 'SUCCESS',
 'deleted': False,
 'passwordProtected': False,
 'abandoned': False,
 'owners': [{'id': '699075231',
   'type': 'USER',
   'displayName': 'Mark Snodgrass'}],
 'ownersLocalized': {'localizedMessage': 'Mark Snodgrass', 'count': 1},
 'paused': False,
 'winnerText': 'Demo Active Employees',
 'statusOrderPriority': 70,
 'inputCount': 2,
 'outputCount': 1,
 'ownedByType': 'USER',
 'customer': 'mmmm-0012-0200'}</code></pre>
</div>
</div>
<div id="38ea7820-ae9a-4422-ab10-9876c3dfb9d0" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">dataflow_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dataflow.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"databaseId"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflows_ls]</span>
<span id="cb8-2">dataflow_ids[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['340', '131', '227', '37', '185']</code></pre>
</div>
</div>
<div id="182c8833-d6fc-4231-829f-e7bcc59a09ef" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdf</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb10-3"></span>
<span id="cb10-4">dataflow_definition_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.gather(</span>
<span id="cb10-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb10-6">        dmdf.DomoDataflow.get_from_id(dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataflow_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb10-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_id <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_ids</span>
<span id="cb10-8">    ]</span>
<span id="cb10-9">)</span>
<span id="cb10-10"></span>
<span id="cb10-11">domo_dataflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataflow_definition_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-12">domo_dataflow</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>DomoDataflow(id=340, name='Demo Active Employees', owner=None, description=None, tags=None, actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='3ffe103e-4f89-4e55-89db-9a9a77fcbc59', type='Constant', name='Calendar', datasource_id=None, sql=None, depends_on=['3956ad1d-cb9a-4fb0-9bc2-305e2f552932'], parent_actions=[DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='2a191a01-6be7-4646-b9af-ca3fea3a388a', type='Constant', name='Employees', datasource_id=None, sql=None, depends_on=['cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30'], parent_actions=[DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['3ffe103e-4f89-4e55-89db-9a9a77fcbc59', '2a191a01-6be7-4646-b9af-ca3fea3a388a'], parent_actions=[DomoDataflow_Action(id='3ffe103e-4f89-4e55-89db-9a9a77fcbc59', type='Constant', name='Calendar', datasource_id=None, sql=None, depends_on=['3956ad1d-cb9a-4fb0-9bc2-305e2f552932'], parent_actions=[DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='2a191a01-6be7-4646-b9af-ca3fea3a388a', type='Constant', name='Employees', datasource_id=None, sql=None, depends_on=['cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30'], parent_actions=[DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='cfe59cc5-a01f-4910-b6bc-e74d3c8a7170', type='Filter', name='Filter to actives', datasource_id=None, sql=None, depends_on=['6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f'], parent_actions=[DomoDataflow_Action(id='6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['3ffe103e-4f89-4e55-89db-9a9a77fcbc59', '2a191a01-6be7-4646-b9af-ca3fea3a388a'], parent_actions=[DomoDataflow_Action(id='3ffe103e-4f89-4e55-89db-9a9a77fcbc59', type='Constant', name='Calendar', datasource_id=None, sql=None, depends_on=['3956ad1d-cb9a-4fb0-9bc2-305e2f552932'], parent_actions=[DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='2a191a01-6be7-4646-b9af-ca3fea3a388a', type='Constant', name='Employees', datasource_id=None, sql=None, depends_on=['cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30'], parent_actions=[DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='1176585b-85bf-454a-9967-f4a59caf4094', type='SelectValues', name='Select Columns 2', datasource_id=None, sql=None, depends_on=['cfe59cc5-a01f-4910-b6bc-e74d3c8a7170'], parent_actions=[DomoDataflow_Action(id='cfe59cc5-a01f-4910-b6bc-e74d3c8a7170', type='Filter', name='Filter to actives', datasource_id=None, sql=None, depends_on=['6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f'], parent_actions=[DomoDataflow_Action(id='6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['3ffe103e-4f89-4e55-89db-9a9a77fcbc59', '2a191a01-6be7-4646-b9af-ca3fea3a388a'], parent_actions=[DomoDataflow_Action(id='3ffe103e-4f89-4e55-89db-9a9a77fcbc59', type='Constant', name='Calendar', datasource_id=None, sql=None, depends_on=['3956ad1d-cb9a-4fb0-9bc2-305e2f552932'], parent_actions=[DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='2a191a01-6be7-4646-b9af-ca3fea3a388a', type='Constant', name='Employees', datasource_id=None, sql=None, depends_on=['cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30'], parent_actions=[DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='d42dd52a-d884-4bc3-b807-07cf5584e215', type='PublishToVault', name='Demo Active Employees', datasource_id='b25b7f48-5257-4e26-bffa-b240b0caefea', sql=None, depends_on=['1176585b-85bf-454a-9967-f4a59caf4094'], parent_actions=[DomoDataflow_Action(id='1176585b-85bf-454a-9967-f4a59caf4094', type='SelectValues', name='Select Columns 2', datasource_id=None, sql=None, depends_on=['cfe59cc5-a01f-4910-b6bc-e74d3c8a7170'], parent_actions=[DomoDataflow_Action(id='cfe59cc5-a01f-4910-b6bc-e74d3c8a7170', type='Filter', name='Filter to actives', datasource_id=None, sql=None, depends_on=['6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f'], parent_actions=[DomoDataflow_Action(id='6b89d1f5-ea18-480c-b3c5-f0bffde9fe3f', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['3ffe103e-4f89-4e55-89db-9a9a77fcbc59', '2a191a01-6be7-4646-b9af-ca3fea3a388a'], parent_actions=[DomoDataflow_Action(id='3ffe103e-4f89-4e55-89db-9a9a77fcbc59', type='Constant', name='Calendar', datasource_id=None, sql=None, depends_on=['3956ad1d-cb9a-4fb0-9bc2-305e2f552932'], parent_actions=[DomoDataflow_Action(id='3956ad1d-cb9a-4fb0-9bc2-305e2f552932', type='SelectValues', name='Select Columns 1', datasource_id=None, sql=None, depends_on=['db088785-df3f-41c1-885f-5380223137ee'], parent_actions=[DomoDataflow_Action(id='db088785-df3f-41c1-885f-5380223137ee', type='Filter', name='Filter Rows', datasource_id=None, sql=None, depends_on=['18e365d8-8b24-471b-a1da-694a1936ad5c'], parent_actions=[DomoDataflow_Action(id='18e365d8-8b24-471b-a1da-694a1936ad5c', type='LoadFromVault', name='Domo Dimensions - Calendar', datasource_id='d6b99a99-63c7-46f0-8e54-38045e29e710', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='2a191a01-6be7-4646-b9af-ca3fea3a388a', type='Constant', name='Employees', datasource_id=None, sql=None, depends_on=['cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30'], parent_actions=[DomoDataflow_Action(id='cd3d5f9e-0bfe-40d9-bb95-45faf2d64b30', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['d7b935c6-2184-4079-bc7b-4e50e25d1801'], parent_actions=[DomoDataflow_Action(id='d7b935c6-2184-4079-bc7b-4e50e25d1801', type='LoadFromVault', name='DomoStats - People', datasource_id='241025d7-3cca-4369-b7c0-b3264277c0e1', sql=None, depends_on=None, parent_actions=None)])])])])])])], version_id=None, version_number=None, versions=None, history=DomoDataflow_History(execution_history=None))</code></pre>
</div>
</div>
<div id="b1573dcc" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">domo_dataflow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmdf.DomoDataflow.get_from_id(dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb12-2">domo_dataflow</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>DomoDataflow(id=9, name='DOMO Covid Datasets', owner=None, description=None, tags=None, actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='39a7a4ba-8bc3-4141-ac44-ada9ecee380e', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['3224b938-e977-40ea-bb85-c6784d13fa95'], parent_actions=[DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='a55f2e60-9418-4291-8272-141be6193740', type='PublishToVault', name='DOMO_Covid_Current Snapshot', datasource_id='e0bbe9ec-6ccf-428b-b18b-a2405cedbe4b', sql=None, depends_on=['39a7a4ba-8bc3-4141-ac44-ada9ecee380e'], parent_actions=[DomoDataflow_Action(id='39a7a4ba-8bc3-4141-ac44-ada9ecee380e', type='SelectValues', name='Select Columns', datasource_id=None, sql=None, depends_on=['3224b938-e977-40ea-bb85-c6784d13fa95'], parent_actions=[DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='4f77e294-4673-46b5-8744-8317eeae39a7', type='SelectValues', name='Prep for Pivot', datasource_id=None, sql=None, depends_on=['3224b938-e977-40ea-bb85-c6784d13fa95'], parent_actions=[DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='9e6fef1a-2428-4c70-ab47-9aaf80a035aa', type='NormalizeAll', name='Dynamic Unpivot', datasource_id=None, sql=None, depends_on=['4f77e294-4673-46b5-8744-8317eeae39a7'], parent_actions=[DomoDataflow_Action(id='4f77e294-4673-46b5-8744-8317eeae39a7', type='SelectValues', name='Prep for Pivot', datasource_id=None, sql=None, depends_on=['3224b938-e977-40ea-bb85-c6784d13fa95'], parent_actions=[DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='58109dc0-37e6-4893-9ba0-5ed5b3c1eaa8', type='PublishToVault', name='DOMO_Covid_Current Snapshot_Collapsed', datasource_id='be14b18c-7844-48e4-8acc-0878c3dc96b0', sql=None, depends_on=['9e6fef1a-2428-4c70-ab47-9aaf80a035aa'], parent_actions=[DomoDataflow_Action(id='9e6fef1a-2428-4c70-ab47-9aaf80a035aa', type='NormalizeAll', name='Dynamic Unpivot', datasource_id=None, sql=None, depends_on=['4f77e294-4673-46b5-8744-8317eeae39a7'], parent_actions=[DomoDataflow_Action(id='4f77e294-4673-46b5-8744-8317eeae39a7', type='SelectValues', name='Prep for Pivot', datasource_id=None, sql=None, depends_on=['3224b938-e977-40ea-bb85-c6784d13fa95'], parent_actions=[DomoDataflow_Action(id='3224b938-e977-40ea-bb85-c6784d13fa95', type='NumericCalculator', name='Active Cases', datasource_id=None, sql=None, depends_on=['59e6226d-507f-4cff-86b1-f024499173aa'], parent_actions=[DomoDataflow_Action(id='59e6226d-507f-4cff-86b1-f024499173aa', type='NumericCalculator', name='Resolved Cases', datasource_id=None, sql=None, depends_on=['6e3ec9a4-470b-4fe4-8e8a-bd954b681df4'], parent_actions=[DomoDataflow_Action(id='6e3ec9a4-470b-4fe4-8e8a-bd954b681df4', type='DateCalculator', name='Days Since...', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='0c791afe-0acb-4821-8781-ddd5d51c850a', type='WindowAction', name='Recovered', datasource_id=None, sql=None, depends_on=['2037eb8f-c88c-4d9f-8d14-ae591a27b627'], parent_actions=[DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', type='SelectValues', name='Ranks', datasource_id=None, sql=None, depends_on=['0c791afe-0acb-4821-8781-ddd5d51c850a'], parent_actions=[DomoDataflow_Action(id='0c791afe-0acb-4821-8781-ddd5d51c850a', type='WindowAction', name='Recovered', datasource_id=None, sql=None, depends_on=['2037eb8f-c88c-4d9f-8d14-ae591a27b627'], parent_actions=[DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='eeecc67b-34c4-4929-a4e3-34058aba039a', type='SelectValues', name='Ranks 1', datasource_id=None, sql=None, depends_on=['43029ef0-9519-49c6-80c2-2f885e662221'], parent_actions=[DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f', type='NumericCalculator', name='Active Cases 1', datasource_id=None, sql=None, depends_on=['1d3e790a-dabf-45ba-849e-74996d7a03c9'], parent_actions=[DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='64d116fa-b2fb-40ed-a834-5e98c541eb09', type='MergeJoin', name='State Rank', datasource_id=None, sql=None, depends_on=['eeecc67b-34c4-4929-a4e3-34058aba039a', 'dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f'], parent_actions=[DomoDataflow_Action(id='eeecc67b-34c4-4929-a4e3-34058aba039a', type='SelectValues', name='Ranks 1', datasource_id=None, sql=None, depends_on=['43029ef0-9519-49c6-80c2-2f885e662221'], parent_actions=[DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f', type='NumericCalculator', name='Active Cases 1', datasource_id=None, sql=None, depends_on=['1d3e790a-dabf-45ba-849e-74996d7a03c9'], parent_actions=[DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='a660c21b-b639-4f8d-b0d1-7024fea1056e', type='MergeJoin', name='Country Rank', datasource_id=None, sql=None, depends_on=['95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', '64d116fa-b2fb-40ed-a834-5e98c541eb09'], parent_actions=[DomoDataflow_Action(id='95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', type='SelectValues', name='Ranks', datasource_id=None, sql=None, depends_on=['0c791afe-0acb-4821-8781-ddd5d51c850a'], parent_actions=[DomoDataflow_Action(id='0c791afe-0acb-4821-8781-ddd5d51c850a', type='WindowAction', name='Recovered', datasource_id=None, sql=None, depends_on=['2037eb8f-c88c-4d9f-8d14-ae591a27b627'], parent_actions=[DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='64d116fa-b2fb-40ed-a834-5e98c541eb09', type='MergeJoin', name='State Rank', datasource_id=None, sql=None, depends_on=['eeecc67b-34c4-4929-a4e3-34058aba039a', 'dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f'], parent_actions=[DomoDataflow_Action(id='eeecc67b-34c4-4929-a4e3-34058aba039a', type='SelectValues', name='Ranks 1', datasource_id=None, sql=None, depends_on=['43029ef0-9519-49c6-80c2-2f885e662221'], parent_actions=[DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f', type='NumericCalculator', name='Active Cases 1', datasource_id=None, sql=None, depends_on=['1d3e790a-dabf-45ba-849e-74996d7a03c9'], parent_actions=[DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='5dc2fda6-902b-4c68-ba7d-1216b54fc1f6', type='SelectValues', name='Select Columns 2', datasource_id=None, sql=None, depends_on=['a660c21b-b639-4f8d-b0d1-7024fea1056e'], parent_actions=[DomoDataflow_Action(id='a660c21b-b639-4f8d-b0d1-7024fea1056e', type='MergeJoin', name='Country Rank', datasource_id=None, sql=None, depends_on=['95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', '64d116fa-b2fb-40ed-a834-5e98c541eb09'], parent_actions=[DomoDataflow_Action(id='95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', type='SelectValues', name='Ranks', datasource_id=None, sql=None, depends_on=['0c791afe-0acb-4821-8781-ddd5d51c850a'], parent_actions=[DomoDataflow_Action(id='0c791afe-0acb-4821-8781-ddd5d51c850a', type='WindowAction', name='Recovered', datasource_id=None, sql=None, depends_on=['2037eb8f-c88c-4d9f-8d14-ae591a27b627'], parent_actions=[DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='64d116fa-b2fb-40ed-a834-5e98c541eb09', type='MergeJoin', name='State Rank', datasource_id=None, sql=None, depends_on=['eeecc67b-34c4-4929-a4e3-34058aba039a', 'dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f'], parent_actions=[DomoDataflow_Action(id='eeecc67b-34c4-4929-a4e3-34058aba039a', type='SelectValues', name='Ranks 1', datasource_id=None, sql=None, depends_on=['43029ef0-9519-49c6-80c2-2f885e662221'], parent_actions=[DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f', type='NumericCalculator', name='Active Cases 1', datasource_id=None, sql=None, depends_on=['1d3e790a-dabf-45ba-849e-74996d7a03c9'], parent_actions=[DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])])])])])]), DomoDataflow_Action(id='a3000ccf-ad34-4b11-a25e-2e6acb0e50b5', type='PublishToVault', name='DOMO_Covid_Time Series', datasource_id='bea90814-7772-47ef-b6c9-7e5368d41b06', sql=None, depends_on=['5dc2fda6-902b-4c68-ba7d-1216b54fc1f6'], parent_actions=[DomoDataflow_Action(id='5dc2fda6-902b-4c68-ba7d-1216b54fc1f6', type='SelectValues', name='Select Columns 2', datasource_id=None, sql=None, depends_on=['a660c21b-b639-4f8d-b0d1-7024fea1056e'], parent_actions=[DomoDataflow_Action(id='a660c21b-b639-4f8d-b0d1-7024fea1056e', type='MergeJoin', name='Country Rank', datasource_id=None, sql=None, depends_on=['95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', '64d116fa-b2fb-40ed-a834-5e98c541eb09'], parent_actions=[DomoDataflow_Action(id='95f6b96d-af65-4d3b-8e3a-94ce7f2e4f64', type='SelectValues', name='Ranks', datasource_id=None, sql=None, depends_on=['0c791afe-0acb-4821-8781-ddd5d51c850a'], parent_actions=[DomoDataflow_Action(id='0c791afe-0acb-4821-8781-ddd5d51c850a', type='WindowAction', name='Recovered', datasource_id=None, sql=None, depends_on=['2037eb8f-c88c-4d9f-8d14-ae591a27b627'], parent_actions=[DomoDataflow_Action(id='2037eb8f-c88c-4d9f-8d14-ae591a27b627', type='WindowAction', name='Deaths', datasource_id=None, sql=None, depends_on=['69cecc30-a170-432d-8367-1e3c2d362419'], parent_actions=[DomoDataflow_Action(id='69cecc30-a170-432d-8367-1e3c2d362419', type='WindowAction', name='Confirmed', datasource_id=None, sql=None, depends_on=['d2ef7338-17ee-4f9c-a93b-b268605ea81e'], parent_actions=[DomoDataflow_Action(id='d2ef7338-17ee-4f9c-a93b-b268605ea81e', type='GroupBy', name='Country Summary', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='64d116fa-b2fb-40ed-a834-5e98c541eb09', type='MergeJoin', name='State Rank', datasource_id=None, sql=None, depends_on=['eeecc67b-34c4-4929-a4e3-34058aba039a', 'dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f'], parent_actions=[DomoDataflow_Action(id='eeecc67b-34c4-4929-a4e3-34058aba039a', type='SelectValues', name='Ranks 1', datasource_id=None, sql=None, depends_on=['43029ef0-9519-49c6-80c2-2f885e662221'], parent_actions=[DomoDataflow_Action(id='43029ef0-9519-49c6-80c2-2f885e662221', type='WindowAction', name='Recovered 1', datasource_id=None, sql=None, depends_on=['16bae147-462b-4547-94b2-8075aab0a2fb'], parent_actions=[DomoDataflow_Action(id='16bae147-462b-4547-94b2-8075aab0a2fb', type='WindowAction', name='Deaths 1', datasource_id=None, sql=None, depends_on=['551ebf46-d0ac-4210-83cd-a50049b2b61d'], parent_actions=[DomoDataflow_Action(id='551ebf46-d0ac-4210-83cd-a50049b2b61d', type='WindowAction', name='Confirmed 1', datasource_id=None, sql=None, depends_on=['30d11b8a-eed9-4037-aa2c-03c83c3f66b8'], parent_actions=[DomoDataflow_Action(id='30d11b8a-eed9-4037-aa2c-03c83c3f66b8', type='GroupBy', name='State Summary', datasource_id=None, sql=None, depends_on=['57da148c-17f8-495d-b81d-2db18e1073dc'], parent_actions=[DomoDataflow_Action(id='57da148c-17f8-495d-b81d-2db18e1073dc', type='Filter', name='United States', datasource_id=None, sql=None, depends_on=['0e192d7e-280b-4c4d-bde2-f0f3adb1e213'], parent_actions=[DomoDataflow_Action(id='0e192d7e-280b-4c4d-bde2-f0f3adb1e213', type='LoadFromVault', name='DOMO Covid Current Snapshot Tracker Data', datasource_id='b034f19e-16d5-4cb3-afac-b72c8e6a79fd', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f', type='NumericCalculator', name='Active Cases 1', datasource_id=None, sql=None, depends_on=['1d3e790a-dabf-45ba-849e-74996d7a03c9'], parent_actions=[DomoDataflow_Action(id='1d3e790a-dabf-45ba-849e-74996d7a03c9', type='NumericCalculator', name='Resolved Cases 1', datasource_id=None, sql=None, depends_on=['660e1e8c-0d62-4e8c-9784-d4555ae46167'], parent_actions=[DomoDataflow_Action(id='660e1e8c-0d62-4e8c-9784-d4555ae46167', type='DateCalculator', name='Days Since... 2', datasource_id=None, sql=None, depends_on=['a1d07083-d1ca-41e9-8be2-f13596df03c3'], parent_actions=[DomoDataflow_Action(id='a1d07083-d1ca-41e9-8be2-f13596df03c3', type='ValueMapper', name='Value Mapper', datasource_id=None, sql=None, depends_on=['96d04e4b-dc72-479c-b84b-ad0b74ada085'], parent_actions=[DomoDataflow_Action(id='96d04e4b-dc72-479c-b84b-ad0b74ada085', type='LoadFromVault', name='DOMO Covid Time Series Tracker Data', datasource_id='dcad2f50-e65e-4259-a9e8-214a3d1e18a7', sql=None, depends_on=None, parent_actions=None)])])])])])])])]), DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None), DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])]), DomoDataflow_Action(id='709cc8dc-77b6-46c9-9c23-1e8a7cd44203', type='ValueMapper', name='Value Mapper 1', datasource_id=None, sql=None, depends_on=['02a1f8dd-2b0a-4193-9c54-8d4fc19261cc'], parent_actions=[DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])]), DomoDataflow_Action(id='a72904d6-88d3-4e47-838b-9a0087d9b2be', type='ConcatFields', name='State | County 1', datasource_id=None, sql=None, depends_on=['709cc8dc-77b6-46c9-9c23-1e8a7cd44203'], parent_actions=[DomoDataflow_Action(id='709cc8dc-77b6-46c9-9c23-1e8a7cd44203', type='ValueMapper', name='Value Mapper 1', datasource_id=None, sql=None, depends_on=['02a1f8dd-2b0a-4193-9c54-8d4fc19261cc'], parent_actions=[DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])])]), DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)]), DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])]), DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])]), DomoDataflow_Action(id='17e224ee-3f06-4ad1-ad6a-1226af11f5d9', type='WindowAction', name='Recovered 2', datasource_id=None, sql=None, depends_on=['0363ec9b-6a88-4914-baa1-80983f03289c'], parent_actions=[DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])]), DomoDataflow_Action(id='2d699db0-8a70-4671-837e-3b9fd03152c8', type='ConcatFields', name='State | County', datasource_id=None, sql=None, depends_on=['17e224ee-3f06-4ad1-ad6a-1226af11f5d9'], parent_actions=[DomoDataflow_Action(id='17e224ee-3f06-4ad1-ad6a-1226af11f5d9', type='WindowAction', name='Recovered 2', datasource_id=None, sql=None, depends_on=['0363ec9b-6a88-4914-baa1-80983f03289c'], parent_actions=[DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])]), DomoDataflow_Action(id='64244d26-fc99-459b-966a-ceb3f412ed31', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['a72904d6-88d3-4e47-838b-9a0087d9b2be', '2d699db0-8a70-4671-837e-3b9fd03152c8'], parent_actions=[DomoDataflow_Action(id='a72904d6-88d3-4e47-838b-9a0087d9b2be', type='ConcatFields', name='State | County 1', datasource_id=None, sql=None, depends_on=['709cc8dc-77b6-46c9-9c23-1e8a7cd44203'], parent_actions=[DomoDataflow_Action(id='709cc8dc-77b6-46c9-9c23-1e8a7cd44203', type='ValueMapper', name='Value Mapper 1', datasource_id=None, sql=None, depends_on=['02a1f8dd-2b0a-4193-9c54-8d4fc19261cc'], parent_actions=[DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])])]), DomoDataflow_Action(id='2d699db0-8a70-4671-837e-3b9fd03152c8', type='ConcatFields', name='State | County', datasource_id=None, sql=None, depends_on=['17e224ee-3f06-4ad1-ad6a-1226af11f5d9'], parent_actions=[DomoDataflow_Action(id='17e224ee-3f06-4ad1-ad6a-1226af11f5d9', type='WindowAction', name='Recovered 2', datasource_id=None, sql=None, depends_on=['0363ec9b-6a88-4914-baa1-80983f03289c'], parent_actions=[DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])]), DomoDataflow_Action(id='5347a8d3-48de-4799-af32-311ba4936c23', type='SelectValues', name='Select Columns 4', datasource_id=None, sql=None, depends_on=['64244d26-fc99-459b-966a-ceb3f412ed31'], parent_actions=[DomoDataflow_Action(id='64244d26-fc99-459b-966a-ceb3f412ed31', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['a72904d6-88d3-4e47-838b-9a0087d9b2be', '2d699db0-8a70-4671-837e-3b9fd03152c8'], parent_actions=[DomoDataflow_Action(id='a72904d6-88d3-4e47-838b-9a0087d9b2be', type='ConcatFields', name='State | County 1', datasource_id=None, sql=None, depends_on=['709cc8dc-77b6-46c9-9c23-1e8a7cd44203'], parent_actions=[DomoDataflow_Action(id='709cc8dc-77b6-46c9-9c23-1e8a7cd44203', type='ValueMapper', name='Value Mapper 1', datasource_id=None, sql=None, depends_on=['02a1f8dd-2b0a-4193-9c54-8d4fc19261cc'], parent_actions=[DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])])]), DomoDataflow_Action(id='2d699db0-8a70-4671-837e-3b9fd03152c8', type='ConcatFields', name='State | County', datasource_id=None, sql=None, depends_on=['17e224ee-3f06-4ad1-ad6a-1226af11f5d9'], parent_actions=[DomoDataflow_Action(id='17e224ee-3f06-4ad1-ad6a-1226af11f5d9', type='WindowAction', name='Recovered 2', datasource_id=None, sql=None, depends_on=['0363ec9b-6a88-4914-baa1-80983f03289c'], parent_actions=[DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])]), DomoDataflow_Action(id='31d9273c-3bf1-4046-8594-1bec09a0f83f', type='PublishToVault', name='DOMO_Covid_Time Series_County', datasource_id='dde1d15a-04d1-42c7-88bb-10563e42be01', sql=None, depends_on=['5347a8d3-48de-4799-af32-311ba4936c23'], parent_actions=[DomoDataflow_Action(id='5347a8d3-48de-4799-af32-311ba4936c23', type='SelectValues', name='Select Columns 4', datasource_id=None, sql=None, depends_on=['64244d26-fc99-459b-966a-ceb3f412ed31'], parent_actions=[DomoDataflow_Action(id='64244d26-fc99-459b-966a-ceb3f412ed31', type='MergeJoin', name='Join Data', datasource_id=None, sql=None, depends_on=['a72904d6-88d3-4e47-838b-9a0087d9b2be', '2d699db0-8a70-4671-837e-3b9fd03152c8'], parent_actions=[DomoDataflow_Action(id='a72904d6-88d3-4e47-838b-9a0087d9b2be', type='ConcatFields', name='State | County 1', datasource_id=None, sql=None, depends_on=['709cc8dc-77b6-46c9-9c23-1e8a7cd44203'], parent_actions=[DomoDataflow_Action(id='709cc8dc-77b6-46c9-9c23-1e8a7cd44203', type='ValueMapper', name='Value Mapper 1', datasource_id=None, sql=None, depends_on=['02a1f8dd-2b0a-4193-9c54-8d4fc19261cc'], parent_actions=[DomoDataflow_Action(id='02a1f8dd-2b0a-4193-9c54-8d4fc19261cc', type='DateCalculator', name='Snapshot Age 1', datasource_id=None, sql=None, depends_on=['250bf67d-8882-4078-a7d4-aa6dda1a1635'], parent_actions=[DomoDataflow_Action(id='250bf67d-8882-4078-a7d4-aa6dda1a1635', type='NumericCalculator', name='Active Cases 2', datasource_id=None, sql=None, depends_on=['dac9af4e-a203-47f5-9493-ec46d834a51f'], parent_actions=[DomoDataflow_Action(id='dac9af4e-a203-47f5-9493-ec46d834a51f', type='NumericCalculator', name='Resolved Cases 2', datasource_id=None, sql=None, depends_on=['cebf2fb3-75e3-48ee-bfe5-2af9927cb581'], parent_actions=[DomoDataflow_Action(id='cebf2fb3-75e3-48ee-bfe5-2af9927cb581', type='ValueMapper', name='Null or 0 Long', datasource_id=None, sql=None, depends_on=['fe46f53d-d10e-4e1e-b341-4d18f565e83b'], parent_actions=[DomoDataflow_Action(id='fe46f53d-d10e-4e1e-b341-4d18f565e83b', type='ValueMapper', name='Null or 0 Lat', datasource_id=None, sql=None, depends_on=['d652deb2-cd3e-462d-9627-2f72425e05cf'], parent_actions=[DomoDataflow_Action(id='d652deb2-cd3e-462d-9627-2f72425e05cf', type='ValueMapper', name='Null New Recovered', datasource_id=None, sql=None, depends_on=['08327437-2a70-49bb-9676-8e63f540eb84'], parent_actions=[DomoDataflow_Action(id='08327437-2a70-49bb-9676-8e63f540eb84', type='ValueMapper', name='Null Recovered', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])])]), DomoDataflow_Action(id='2d699db0-8a70-4671-837e-3b9fd03152c8', type='ConcatFields', name='State | County', datasource_id=None, sql=None, depends_on=['17e224ee-3f06-4ad1-ad6a-1226af11f5d9'], parent_actions=[DomoDataflow_Action(id='17e224ee-3f06-4ad1-ad6a-1226af11f5d9', type='WindowAction', name='Recovered 2', datasource_id=None, sql=None, depends_on=['0363ec9b-6a88-4914-baa1-80983f03289c'], parent_actions=[DomoDataflow_Action(id='0363ec9b-6a88-4914-baa1-80983f03289c', type='WindowAction', name='Deaths 2', datasource_id=None, sql=None, depends_on=['0d438931-d91a-43ff-8b79-654e6925c4be'], parent_actions=[DomoDataflow_Action(id='0d438931-d91a-43ff-8b79-654e6925c4be', type='WindowAction', name='Confirmed 2', datasource_id=None, sql=None, depends_on=['670ba4cb-9c18-49c2-a372-05d635891bac'], parent_actions=[DomoDataflow_Action(id='670ba4cb-9c18-49c2-a372-05d635891bac', type='GroupBy', name='County Summary', datasource_id=None, sql=None, depends_on=['b5055499-0d69-4273-aedf-c02c0ed96ea7'], parent_actions=[DomoDataflow_Action(id='b5055499-0d69-4273-aedf-c02c0ed96ea7', type='LoadFromVault', name='DOMO US County Covid Time Series Tracker Data', datasource_id='1225e98f-ea61-47e0-bc44-36b38725c280', sql=None, depends_on=None, parent_actions=None)])])])])])])])])], version_id=None, version_number=None, versions=None, history=DomoDataflow_History(execution_history=None))</code></pre>
</div>
</div>
<div id="c0e61dab" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb14-2"></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_version_action_pdf(domo_dataflow):</span>
<span id="cb14-5">    dataflow_versions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataflow.get_versions()</span>
<span id="cb14-6"></span>
<span id="cb14-7">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb14-8">        [</span>
<span id="cb14-9">            {</span>
<span id="cb14-10">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: dataflow_version.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb14-11">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>: dataflow_version.version_id,</span>
<span id="cb14-12">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>domo_action.__dict__,</span>
<span id="cb14-13">            }</span>
<span id="cb14-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dataflow_version <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_versions</span>
<span id="cb14-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_version.actions</span>
<span id="cb14-16">        ]</span>
<span id="cb14-17">    )</span>
<span id="cb14-18"></span>
<span id="cb14-19">    df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_actions"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datasource_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sql"</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb14-20">    df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>}, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb14-21"></span>
<span id="cb14-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb14-23"></span>
<span id="cb14-24"></span>
<span id="cb14-25">action_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_version_action_pdf(domo_dataflow)</span>
<span id="cb14-26">action_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">depends_on</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>9</td>
<td>89</td>
<td>0e192d7e-280b-4c4d-bde2-f0f3adb1e213</td>
<td>LoadFromVault</td>
<td>DOMO Covid Current Snapshot Tracker Data</td>
<td>None</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>9</td>
<td>89</td>
<td>96d04e4b-dc72-479c-b84b-ad0b74ada085</td>
<td>LoadFromVault</td>
<td>DOMO Covid Time Series Tracker Data</td>
<td>None</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>9</td>
<td>89</td>
<td>a1d07083-d1ca-41e9-8be2-f13596df03c3</td>
<td>ValueMapper</td>
<td>Value Mapper</td>
<td>[96d04e4b-dc72-479c-b84b-ad0b74ada085]</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>9</td>
<td>89</td>
<td>6e3ec9a4-470b-4fe4-8e8a-bd954b681df4</td>
<td>DateCalculator</td>
<td>Days Since...</td>
<td>[0e192d7e-280b-4c4d-bde2-f0f3adb1e213]</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>9</td>
<td>89</td>
<td>59e6226d-507f-4cff-86b1-f024499173aa</td>
<td>NumericCalculator</td>
<td>Resolved Cases</td>
<td>[6e3ec9a4-470b-4fe4-8e8a-bd954b681df4]</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="1ed279c3" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_action_stats_df(domo_dataflow):</span>
<span id="cb15-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataflow.history.get_execution_history(maximum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb15-3"></span>
<span id="cb15-4">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb15-5">        [</span>
<span id="cb15-6">            {</span>
<span id="cb15-7">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>: domo_history.dataflow_version,</span>
<span id="cb15-8">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: domo_history.dataflow_id,</span>
<span id="cb15-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_begin_time"</span>: domo_history.begin_time,</span>
<span id="cb15-10">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>domo_action.__dict__,</span>
<span id="cb15-11">            }</span>
<span id="cb15-12">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_history <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataflow.history.execution_history</span>
<span id="cb15-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_history.action_results</span>
<span id="cb15-14">        ]</span>
<span id="cb15-15">    )</span>
<span id="cb15-16"></span>
<span id="cb15-17">    df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>}, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-18"></span>
<span id="cb15-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb15-20"></span>
<span id="cb15-21"></span>
<span id="cb15-22">stats_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_action_stats_df(domo_dataflow)</span>
<span id="cb15-23">stats_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_begin_time</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">is_success</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>89</td>
<td>9</td>
<td>2024-02-15 21:46:47</td>
<td>0e192d7e-280b-4c4d-bde2-f0f3adb1e213</td>
<td>DataHubManifestLoaderAction</td>
<td>None</td>
<td>True</td>
<td>315</td>
<td>2024-02-15 21:46:57.697</td>
<td>2024-02-15 21:46:58.874</td>
<td>1.177</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>89</td>
<td>9</td>
<td>2024-02-15 21:46:47</td>
<td>96d04e4b-dc72-479c-b84b-ad0b74ada085</td>
<td>DataHubManifestLoaderAction</td>
<td>None</td>
<td>True</td>
<td>389137</td>
<td>2024-02-15 21:46:57.696</td>
<td>2024-02-15 21:47:06.790</td>
<td>9.094</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>89</td>
<td>9</td>
<td>2024-02-15 21:46:47</td>
<td>a1d07083-d1ca-41e9-8be2-f13596df03c3</td>
<td>ValueMapper</td>
<td>None</td>
<td>True</td>
<td>389137</td>
<td>2024-02-15 21:46:58.773</td>
<td>2024-02-15 21:47:06.790</td>
<td>8.017</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>89</td>
<td>9</td>
<td>2024-02-15 21:46:47</td>
<td>6e3ec9a4-470b-4fe4-8e8a-bd954b681df4</td>
<td>DateCalculator</td>
<td>None</td>
<td>True</td>
<td>315</td>
<td>2024-02-15 21:46:58.772</td>
<td>2024-02-15 21:46:58.873</td>
<td>0.101</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>89</td>
<td>9</td>
<td>2024-02-15 21:46:47</td>
<td>59e6226d-507f-4cff-86b1-f024499173aa</td>
<td>NumericCalculator</td>
<td>None</td>
<td>True</td>
<td>315</td>
<td>2024-02-15 21:46:58.773</td>
<td>2024-02-15 21:46:58.873</td>
<td>0.100</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="3869e052" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> combine_execution_plan_with_stats_df(action_df, stats_df):</span>
<span id="cb16-2">    stats_df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>], inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb16-3"></span>
<span id="cb16-4">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(</span>
<span id="cb16-5">        action_df,</span>
<span id="cb16-6">        stats_df,</span>
<span id="cb16-7">        on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>],</span>
<span id="cb16-8">        how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"outer"</span>,</span>
<span id="cb16-9">    )</span>
<span id="cb16-10"></span>
<span id="cb16-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb16-12"></span>
<span id="cb16-13"></span>
<span id="cb16-14">combine_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> combine_execution_plan_with_stats_df(action_df.copy(), stats_df.copy())</span>
<span id="cb16-15"></span>
<span id="cb16-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(combine_df))</span>
<span id="cb16-17">combine_df[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>931</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">depends_on</th>
<th data-quarto-table-cell-role="th">dataflow_begin_time</th>
<th data-quarto-table-cell-role="th">is_success</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>9</td>
<td>20</td>
<td>008ac1ce-4143-420f-93a7-9536ea986fc5</td>
<td>WindowAction</td>
<td>Rank &amp; Window</td>
<td>[e667577a-8c73-4677-8022-8bf3f3e7a72e]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>9</td>
<td>20</td>
<td>02a1f8dd-2b0a-4193-9c54-8d4fc19261cc</td>
<td>DateCalculator</td>
<td>Snapshot Age 1</td>
<td>[250bf67d-8882-4078-a7d4-aa6dda1a1635]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>9</td>
<td>20</td>
<td>0362dd20-2039-403d-a249-94e2ce716aed</td>
<td>Constant</td>
<td>Today</td>
<td>[18626a7b-c1a7-4fb4-bcc0-7e50ebd7e763]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>9</td>
<td>20</td>
<td>06f8d60b-8b84-474d-91de-abcaefe10abf</td>
<td>SelectValues</td>
<td>DIM_Country (Join)</td>
<td>[0e783798-e39f-49f2-ac42-70cd82ffd611]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>9</td>
<td>20</td>
<td>08327437-2a70-49bb-9676-8e63f540eb84</td>
<td>ValueMapper</td>
<td>Null Recovered 2</td>
<td>[5da719b4-d4c6-4dfc-a928-38312de82df8]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>9</td>
<td>20</td>
<td>0c791afe-0acb-4821-8781-ddd5d51c850a</td>
<td>WindowAction</td>
<td>Recovered</td>
<td>[2037eb8f-c88c-4d9f-8d14-ae591a27b627]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>9</td>
<td>20</td>
<td>0e192d7e-280b-4c4d-bde2-f0f3adb1e213</td>
<td>LoadFromVault</td>
<td>DOMO Covid Current Snapshot Tracker Data</td>
<td>None</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>9</td>
<td>20</td>
<td>0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>UnionAll</td>
<td>Append New Values</td>
<td>[3ea82c4a-1da1-4c37-b3e5-ea77a6ba035d, 52b67a4...</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>9</td>
<td>20</td>
<td>1689d811-85eb-4e3a-993d-2e59419e2236</td>
<td>SelectValues</td>
<td>DIM Table</td>
<td>[d6423ad7-938f-428e-a773-c8f2f257de07]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>9</td>
<td>20</td>
<td>16bae147-462b-4547-94b2-8075aab0a2fb</td>
<td>WindowAction</td>
<td>Deaths 1</td>
<td>[551ebf46-d0ac-4210-83cd-a50049b2b61d]</td>
<td>NaT</td>
<td>NaN</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="531d9395" class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> explode_parents(df):</span>
<span id="cb18-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. generates one row for each parent in "depends_on"</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. joins parents stats to df</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. stores dataflow_begin_time if there is no parent</span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb18-7"></span>
<span id="cb18-8">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dependencies"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>]</span>
<span id="cb18-9">    explode_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.explode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>)</span>
<span id="cb18-10"></span>
<span id="cb18-11">    parents_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[</span>
<span id="cb18-12">        [</span>
<span id="cb18-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>,</span>
<span id="cb18-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>,</span>
<span id="cb18-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>,</span>
<span id="cb18-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>,</span>
<span id="cb18-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>,</span>
<span id="cb18-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>,</span>
<span id="cb18-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>,</span>
<span id="cb18-20">        ]</span>
<span id="cb18-21">    ].rename(</span>
<span id="cb18-22">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb18-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>,</span>
<span id="cb18-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_type"</span>,</span>
<span id="cb18-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_name"</span>,</span>
<span id="cb18-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>,</span>
<span id="cb18-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_rows_processed"</span>,</span>
<span id="cb18-28">        }</span>
<span id="cb18-29">    )</span>
<span id="cb18-30"></span>
<span id="cb18-31">    explode_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.merge(</span>
<span id="cb18-32">        explode_df,</span>
<span id="cb18-33">        parents_df,</span>
<span id="cb18-34">        left_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depends_on"</span>],</span>
<span id="cb18-35">        right_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>],</span>
<span id="cb18-36">        how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb18-37">    )</span>
<span id="cb18-38"></span>
<span id="cb18-39">    explode_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> explode_df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_time"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(</span>
<span id="cb18-40">        axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb18-41">    )</span>
<span id="cb18-42"></span>
<span id="cb18-43">    explode_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual_duration_in_sec"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb18-44">        explode_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> explode_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>]</span>
<span id="cb18-45">    ).dt.total_seconds()</span>
<span id="cb18-46"></span>
<span id="cb18-47">    explode_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> explode_df[</span>
<span id="cb18-48">        [</span>
<span id="cb18-49">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>,</span>
<span id="cb18-50">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>,</span>
<span id="cb18-51">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>,</span>
<span id="cb18-52">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>,</span>
<span id="cb18-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>,</span>
<span id="cb18-54">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>,</span>
<span id="cb18-55">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"begin_time"</span>,</span>
<span id="cb18-56">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_time"</span>,</span>
<span id="cb18-57">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration_in_sec"</span>,</span>
<span id="cb18-58">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_end_time"</span>,</span>
<span id="cb18-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual_duration_in_sec"</span>,</span>
<span id="cb18-60">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dependencies"</span>,</span>
<span id="cb18-61">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>,</span>
<span id="cb18-62">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_type"</span>,</span>
<span id="cb18-63">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_name"</span>,</span>
<span id="cb18-64">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_rows_processed"</span>,</span>
<span id="cb18-65">        ]</span>
<span id="cb18-66">    ]</span>
<span id="cb18-67"></span>
<span id="cb18-68">    explode_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>].fillna(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"start"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb18-69"></span>
<span id="cb18-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> explode_df</span>
<span id="cb18-71"></span>
<span id="cb18-72"></span>
<span id="cb18-73">explode_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> explode_parents(combine_df.copy())</span>
<span id="cb18-74">explode_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_36055/2268720893.py:68: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.

For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.


  explode_df["parent_tile_id"].fillna("start", inplace=True)</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">begin_time</th>
<th data-quarto-table-cell-role="th">end_time</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
<th data-quarto-table-cell-role="th">parent_end_time</th>
<th data-quarto-table-cell-role="th">actual_duration_in_sec</th>
<th data-quarto-table-cell-role="th">dependencies</th>
<th data-quarto-table-cell-role="th">parent_tile_id</th>
<th data-quarto-table-cell-role="th">parent_tile_type</th>
<th data-quarto-table-cell-role="th">parent_tile_name</th>
<th data-quarto-table-cell-role="th">parent_rows_processed</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>9</td>
<td>20</td>
<td>008ac1ce-4143-420f-93a7-9536ea986fc5</td>
<td>WindowAction</td>
<td>Rank &amp; Window</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[e667577a-8c73-4677-8022-8bf3f3e7a72e]</td>
<td>e667577a-8c73-4677-8022-8bf3f3e7a72e</td>
<td>UnionAll</td>
<td>Append Unused DIM Countries</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>9</td>
<td>20</td>
<td>02a1f8dd-2b0a-4193-9c54-8d4fc19261cc</td>
<td>DateCalculator</td>
<td>Snapshot Age 1</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[250bf67d-8882-4078-a7d4-aa6dda1a1635]</td>
<td>250bf67d-8882-4078-a7d4-aa6dda1a1635</td>
<td>NumericCalculator</td>
<td>Active Cases 2</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>9</td>
<td>20</td>
<td>0362dd20-2039-403d-a249-94e2ce716aed</td>
<td>Constant</td>
<td>Today</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[18626a7b-c1a7-4fb4-bcc0-7e50ebd7e763]</td>
<td>18626a7b-c1a7-4fb4-bcc0-7e50ebd7e763</td>
<td>Filter</td>
<td>Countries Still Listed</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>9</td>
<td>20</td>
<td>06f8d60b-8b84-474d-91de-abcaefe10abf</td>
<td>SelectValues</td>
<td>DIM_Country (Join)</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[0e783798-e39f-49f2-ac42-70cd82ffd611]</td>
<td>0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>UnionAll</td>
<td>Append New Values</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>9</td>
<td>20</td>
<td>08327437-2a70-49bb-9676-8e63f540eb84</td>
<td>ValueMapper</td>
<td>Null Recovered 2</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[5da719b4-d4c6-4dfc-a928-38312de82df8]</td>
<td>5da719b4-d4c6-4dfc-a928-38312de82df8</td>
<td>ValueMapper</td>
<td>Null Deaths 2</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>9</td>
<td>20</td>
<td>0c791afe-0acb-4821-8781-ddd5d51c850a</td>
<td>WindowAction</td>
<td>Recovered</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[2037eb8f-c88c-4d9f-8d14-ae591a27b627]</td>
<td>2037eb8f-c88c-4d9f-8d14-ae591a27b627</td>
<td>WindowAction</td>
<td>Deaths</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>9</td>
<td>20</td>
<td>0e192d7e-280b-4c4d-bde2-f0f3adb1e213</td>
<td>LoadFromVault</td>
<td>DOMO Covid Current Snapshot Tracker Data</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>None</td>
<td>start</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>9</td>
<td>20</td>
<td>0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>UnionAll</td>
<td>Append New Values</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[3ea82c4a-1da1-4c37-b3e5-ea77a6ba035d, 52b67a4...</td>
<td>3ea82c4a-1da1-4c37-b3e5-ea77a6ba035d</td>
<td>Constant</td>
<td>Flag New Values</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>9</td>
<td>20</td>
<td>0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>UnionAll</td>
<td>Append New Values</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[3ea82c4a-1da1-4c37-b3e5-ea77a6ba035d, 52b67a4...</td>
<td>52b67a4e-c879-432d-95f4-ccf64475f1b7</td>
<td>SelectValues</td>
<td>Up to Date Covid + Existing Webform Info</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>9</td>
<td>20</td>
<td>0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>UnionAll</td>
<td>Append New Values</td>
<td>NaN</td>
<td>NaT</td>
<td>NaT</td>
<td>NaN</td>
<td>NaT</td>
<td>NaN</td>
<td>[3ea82c4a-1da1-4c37-b3e5-ea77a6ba035d, 52b67a4...</td>
<td>97044bf5-caa3-4420-b40f-9002d836d5c5</td>
<td>SelectValues</td>
<td>Existing Webform Info - No Longer in Covid</td>
<td>NaN</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="852a6731" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calculate_average(df):</span>
<span id="cb20-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""calculates average execution time for each tile, differentiating by reported duration_in_sec vs actual_duration which assumes an upstream parent"""</span></span>
<span id="cb20-3"></span>
<span id="cb20-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df.groupby(</span>
<span id="cb20-5">        [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_version"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_id"</span>]</span>
<span id="cb20-6">    ).agg(</span>
<span id="cb20-7">        {</span>
<span id="cb20-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>,</span>
<span id="cb20-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tile_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>,</span>
<span id="cb20-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>,</span>
<span id="cb20-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_tile_type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span>,</span>
<span id="cb20-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration_in_sec"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb20-13">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"actual_duration_in_sec"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb20-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows_processed"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb20-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parent_rows_processed"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>,</span>
<span id="cb20-16">        }</span>
<span id="cb20-17">    )</span>
<span id="cb20-18"></span>
<span id="cb20-19"></span>
<span id="cb20-20">calculate_average(explode_df.copy())</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">tile_type</th>
<th data-quarto-table-cell-role="th">parent_tile_name</th>
<th data-quarto-table-cell-role="th">parent_tile_type</th>
<th data-quarto-table-cell-role="th">duration_in_sec</th>
<th data-quarto-table-cell-role="th">actual_duration_in_sec</th>
<th data-quarto-table-cell-role="th">rows_processed</th>
<th data-quarto-table-cell-role="th">parent_rows_processed</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">dataflow_version</th>
<th data-quarto-table-cell-role="th">tile_id</th>
<th data-quarto-table-cell-role="th">parent_tile_id</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td rowspan="11" data-quarto-table-cell-role="th" data-valign="top">9</td>
<td rowspan="5" data-quarto-table-cell-role="th" data-valign="top">20</td>
<td data-quarto-table-cell-role="th">008ac1ce-4143-420f-93a7-9536ea986fc5</td>
<td data-quarto-table-cell-role="th">e667577a-8c73-4677-8022-8bf3f3e7a72e</td>
<td>Rank &amp; Window</td>
<td>WindowAction</td>
<td>Append Unused DIM Countries</td>
<td>UnionAll</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">02a1f8dd-2b0a-4193-9c54-8d4fc19261cc</td>
<td data-quarto-table-cell-role="th">250bf67d-8882-4078-a7d4-aa6dda1a1635</td>
<td>Snapshot Age 1</td>
<td>DateCalculator</td>
<td>Active Cases 2</td>
<td>NumericCalculator</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">0362dd20-2039-403d-a249-94e2ce716aed</td>
<td data-quarto-table-cell-role="th">18626a7b-c1a7-4fb4-bcc0-7e50ebd7e763</td>
<td>Today</td>
<td>Constant</td>
<td>Countries Still Listed</td>
<td>Filter</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">06f8d60b-8b84-474d-91de-abcaefe10abf</td>
<td data-quarto-table-cell-role="th">0e783798-e39f-49f2-ac42-70cd82ffd611</td>
<td>DIM_Country (Join)</td>
<td>SelectValues</td>
<td>Append New Values</td>
<td>UnionAll</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">08327437-2a70-49bb-9676-8e63f540eb84</td>
<td data-quarto-table-cell-role="th">5da719b4-d4c6-4dfc-a928-38312de82df8</td>
<td>Null Recovered 2</td>
<td>ValueMapper</td>
<td>Null Deaths 2</td>
<td>ValueMapper</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
<td>NaN</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td data-quarto-table-cell-role="th">...</td>
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td rowspan="5" data-quarto-table-cell-role="th" data-valign="top">89</td>
<td data-quarto-table-cell-role="th">d652deb2-cd3e-462d-9627-2f72425e05cf</td>
<td data-quarto-table-cell-role="th">08327437-2a70-49bb-9676-8e63f540eb84</td>
<td>Null New Recovered</td>
<td>ValueMapper</td>
<td>Null Recovered</td>
<td>ValueMapper</td>
<td>25.8714</td>
<td>-1408.67276</td>
<td>3424193.0</td>
<td>3424193.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">dac9af4e-a203-47f5-9493-ec46d834a51f</td>
<td data-quarto-table-cell-role="th">cebf2fb3-75e3-48ee-bfe5-2af9927cb581</td>
<td>Resolved Cases 2</td>
<td>NumericCalculator</td>
<td>Null or 0 Long</td>
<td>ValueMapper</td>
<td>25.8018</td>
<td>-1408.70667</td>
<td>3424193.0</td>
<td>3424193.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">dc5a2d0c-3bdf-4e94-a07a-7ff4709acc1f</td>
<td data-quarto-table-cell-role="th">1d3e790a-dabf-45ba-849e-74996d7a03c9</td>
<td>Active Cases 1</td>
<td>NumericCalculator</td>
<td>Resolved Cases 1</td>
<td>NumericCalculator</td>
<td>7.8660</td>
<td>-1415.71871</td>
<td>389137.0</td>
<td>389137.0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">eeecc67b-34c4-4929-a4e3-34058aba039a</td>
<td data-quarto-table-cell-role="th">43029ef0-9519-49c6-80c2-2f885e662221</td>
<td>Ranks 1</td>
<td>SelectValues</td>
<td>Recovered 1</td>
<td>WindowAction</td>
<td>0.0287</td>
<td>-1419.28524</td>
<td>60.0</td>
<td>60.0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">fe46f53d-d10e-4e1e-b341-4d18f565e83b</td>
<td data-quarto-table-cell-role="th">d652deb2-cd3e-462d-9627-2f72425e05cf</td>
<td>Null or 0 Lat</td>
<td>ValueMapper</td>
<td>Null New Recovered</td>
<td>ValueMapper</td>
<td>25.8713</td>
<td>-1408.67273</td>
<td>3424193.0</td>
<td>3424193.0</td>
</tr>
</tbody>
</table>

<p>551 rows √ó 8 columns</p>
</div>
</div>
</div>
</div>
<div id="3a3989e9-fba7-44e4-973d-0cdefc8f6f67" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_action_list(domo_dataflow: dmdf.DomoDataflow):</span>
<span id="cb21-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [</span>
<span id="cb21-3">        {</span>
<span id="cb21-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataflow_id"</span>: domo_dataflow.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb21-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datafow_name"</span>: domo_dataflow.name,</span>
<span id="cb21-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action_type"</span>: domo_action.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb21-7">        }</span>
<span id="cb21-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataflow.actions</span>
<span id="cb21-9">    ]</span>
<span id="cb21-10"></span>
<span id="cb21-11"></span>
<span id="cb21-12">get_action_list(domo_dataflow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataflow_definition_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[{'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'SelectValues'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'Filter'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'SelectValues'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'Constant'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'Constant'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'MergeJoin'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'Filter'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'SelectValues'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'PublishToVault'}]</code></pre>
</div>
</div>
<div id="819035f6-649a-478d-bad6-06f59947496d" class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">action_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [get_action_list(dd_obj) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dd_obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataflow_definition_ls]</span>
<span id="cb23-2"></span>
<span id="cb23-3">flat_action_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [action <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> a_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> action_ls <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> a_list]</span>
<span id="cb23-4">flat_action_ls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[{'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'SelectValues'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'LoadFromVault'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'Filter'},
 {'dataflow_id': 340,
  'datafow_name': 'Demo Active Employees',
  'action_type': 'SelectValues'}]</code></pre>
</div>
</div>
<div id="e1c5b5bc-b1e1-4a8f-b49b-254c01e5cba1" class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb25-2"></span>
<span id="cb25-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(flat_action_ls)</span>
<span id="cb25-4">df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">dataflow_id</th>
<th data-quarto-table-cell-role="th">datafow_name</th>
<th data-quarto-table-cell-role="th">action_type</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>340</td>
<td>Demo Active Employees</td>
<td>LoadFromVault</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>340</td>
<td>Demo Active Employees</td>
<td>SelectValues</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>340</td>
<td>Demo Active Employees</td>
<td>LoadFromVault</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>340</td>
<td>Demo Active Employees</td>
<td>Filter</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>340</td>
<td>Demo Active Employees</td>
<td>SelectValues</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="6d35e51f-8dc9-462f-b591-16e7434a4b09" class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marks_csv.csv"</span>)</span></code></pre></div>
</div>



 ]]></description>
  <category>DomoStats</category>
  <category>MagicETL</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-11-18 _creatingDomoStats_MgicETL/</guid>
  <pubDate>Tue, 28 Nov 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Query Domo Jupyter with Python</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-09-13_Domo_Jupyter/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<section id="read-in-standard-creds" class="level1">
<h1>read in standard creds</h1>
<p><a href="https://youtu.be/7aTHw7scsa8">![Tutorial Video pt 1 of 4]</a></p>
<div id="01ec21fd" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.parse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlparse</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dt</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dateutil.parser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> parse</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass, field</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.get_data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gd</span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.DictDot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> util_dd</span></code></pre></div>
</div>
<div id="edd2a3b7" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">full_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb2-2">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span>,</span>
<span id="cb2-3">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>],</span>
<span id="cb2-4">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jae@onyxreporting.com"</span>,</span>
<span id="cb2-5">)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> full_auth.print_is_token()</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># full_auth.generate_auth_header(token = full_auth.token)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>üéâ token retrieved from domo-community ‚öôÔ∏è</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>True</code></pre>
</div>
</div>
<section id="adding-jupyter-auth-creds" class="level2">
<h2 class="anchored" data-anchor-id="adding-jupyter-auth-creds">adding jupyter auth creds</h2>
<div id="a66f5b98-e727-4cdb-9e1e-e40a28871686" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">USER_TOKEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"XQq01p8JGm7GLvN8c5BaZw4hPnYbpf"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pull from network traffic</span></span>
<span id="cb5-2">SERVICE_LOCATION <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb5-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jupyter-prod1.domodatascience.com"</span></span>
<span id="cb5-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> urlparse(os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JUPYTERHUB_SERVICES_URL"</span>]).netloc</span>
<span id="cb5-5">)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pull from domo</span></span>
<span id="cb5-6">SERVICE_PREFIX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb5-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/user/domo-community-1893952720/19fb3535/"</span></span>
<span id="cb5-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JUPYTERHUB_SERVICE_PREFIX"</span>]</span>
<span id="cb5-9">)</span>
<span id="cb5-10"></span>
<span id="cb5-11">user_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> USER_TOKEN</span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input("user token:")</span></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># retrieve this by monitoring domo jupyter network traffic.  it is the token header</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">service_location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SERVICE_LOCATION</span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input("service_location")</span></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># retrieve from domo jupyter env</span></span>
<span id="cb5-18"></span>
<span id="cb5-19">service_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SERVICE_PREFIX</span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input("service prefix") or</span></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># retrieve from domo jupyter env</span></span>
<span id="cb5-22"></span>
<span id="cb5-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(user_token, service_location, service_prefix)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>XQq01p8JGm7GLvN8c5BaZw4hPnYbpf jupyter-prod1.domodatascience.com /user/domo-community-1893952720/19fb3535/</code></pre>
</div>
</div>
</section>
</section>
<section id="library-extensions" class="level1">
<h1>Library Extensions</h1>
<section id="client" class="level2">
<h2 class="anchored" data-anchor-id="client">CLIENT</h2>
<section id="define-domojupyterauth-class" class="level3">
<h3 class="anchored" data-anchor-id="define-domojupyterauth-class">define DomoJupyterAuth class</h3>
<p>extend <a href="https://jaewilson07.github.io/domo_library/client/domoauth.html#domofullauth"><code>DomoFullAuth</code></a> with new properties and replace an existing method</p>
<div id="808796ec" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> _DomoJupyter_Optional:</span>
<span id="cb7-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> __post_init__(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-4"></span>
<span id="cb7-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>(</span>
<span id="cb7-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user token: # retrieve this by monitoring domo jupyter network traffic.  it is the token header"</span></span>
<span id="cb7-7">        )</span>
<span id="cb7-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_location <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>(</span>
<span id="cb7-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"service_location:  # retrieve from domo jupyter env"</span></span>
<span id="cb7-10">        )</span>
<span id="cb7-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_prefix <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>(</span>
<span id="cb7-12">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"service prefix: # retrieve from domo jupyter env"</span></span>
<span id="cb7-13">        )</span>
<span id="cb7-14"></span>
<span id="cb7-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._test_prereq()</span>
<span id="cb7-16"></span>
<span id="cb7-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_auth_header(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, token: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>:</span>
<span id="cb7-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth_header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb7-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-domo-authentication"</span>: token,</span>
<span id="cb7-20">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"authorization"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Token </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>user_token<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb7-21">        }</span>
<span id="cb7-22"></span>
<span id="cb7-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth_header</span>
<span id="cb7-24"></span>
<span id="cb7-25"></span>
<span id="cb7-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb7-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> _DomoJupyter_Required:</span>
<span id="cb7-28">    user_token: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb7-29">    service_location: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb7-30">    service_prefix: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb7-31"></span>
<span id="cb7-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_user_token_flow(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""stub"""</span></span>
<span id="cb7-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world i am a user_token_flow"</span>)</span>
<span id="cb7-35"></span>
<span id="cb7-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _test_prereq(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_token:</span>
<span id="cb7-38">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DomoJupyterAuth objects must have a user_token"</span>)</span>
<span id="cb7-39"></span>
<span id="cb7-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_location:</span>
<span id="cb7-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DomoJupyterAuth objects must have a service_location"</span>)</span>
<span id="cb7-42"></span>
<span id="cb7-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_prefix:</span>
<span id="cb7-44">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DomoJupyterAuth objects must have a service_prefix"</span>)</span>
<span id="cb7-45"></span>
<span id="cb7-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_location <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_prefix:</span>
<span id="cb7-47">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(</span>
<span id="cb7-48">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DomoJupyterAuth objects must have user_token, service_location and service_prefix"</span></span>
<span id="cb7-49">            )</span>
<span id="cb7-50"></span>
<span id="cb7-51"></span>
<span id="cb7-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb7-53"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DomoJupyterFullAuth(</span>
<span id="cb7-54">    _DomoJupyter_Optional, dmda.DomoFullAuth, _DomoJupyter_Required</span>
<span id="cb7-55">):</span>
<span id="cb7-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@classmethod</span></span>
<span id="cb7-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> convert_auth(</span>
<span id="cb7-58">        cls, full_auth: dmda.DomoFullAuth, user_token, service_location, service_prefix</span>
<span id="cb7-59">    ):</span>
<span id="cb7-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""converts dmda.DomoFullAuth to DomoJupyterFullAuth</span></span>
<span id="cb7-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        i.e. adds DomoJupyter specific auth fields</span></span>
<span id="cb7-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        eventually can add DomoJupyter specific auth flow for generating auth token</span></span>
<span id="cb7-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb7-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> cls(</span>
<span id="cb7-65">            domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>full_auth.domo_instance,</span>
<span id="cb7-66">            domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>full_auth.domo_username,</span>
<span id="cb7-67">            domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>full_auth.domo_password,</span>
<span id="cb7-68">            user_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_token,</span>
<span id="cb7-69">            service_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>service_location,</span>
<span id="cb7-70">            service_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>service_prefix,</span>
<span id="cb7-71">        )</span>
<span id="cb7-72"></span>
<span id="cb7-73"></span>
<span id="cb7-74">dj_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DomoJupyterFullAuth.convert_auth(</span>
<span id="cb7-75">    full_auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>full_auth,</span>
<span id="cb7-76">    user_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>user_token,</span>
<span id="cb7-77">    service_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>service_location,</span>
<span id="cb7-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># service_prefix=None</span></span>
<span id="cb7-79">    service_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>service_prefix,</span>
<span id="cb7-80">)</span>
<span id="cb7-81"></span>
<span id="cb7-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># token = await dj_auth.get_auth_token()</span></span>
<span id="cb7-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dj_auth.generate_auth_header( token = token)</span></span></code></pre></div>
</div>
</section>
</section>
<section id="routes" class="level2">
<h2 class="anchored" data-anchor-id="routes">ROUTES</h2>
<p><a href="https://youtu.be/7aTHw7scsa8">![Tutorial Video pt 2 of 4]</a></p>
<section id="get-routes" class="level3">
<h3 class="anchored" data-anchor-id="get-routes">GET Routes</h3>
<div id="6066d2ee-a5e4-4a66-8294-2448729b21b6" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _get_jupyter_content(</span>
<span id="cb8-2">    auth: dmda.DomoAuth,</span>
<span id="cb8-3">    content_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb8-4">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb8-5">):</span>
<span id="cb8-6">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>service_location<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>service_prefix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">api/contents/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>content_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-7"></span>
<span id="cb8-8">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> gd.get_data(</span>
<span id="cb8-9">        url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb8-10">        method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GET"</span>,</span>
<span id="cb8-11">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb8-12">        headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"authorization"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Token </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>user_token<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>},</span>
<span id="cb8-13">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb8-14">        num_stacks_to_drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb8-15">    )</span>
<span id="cb8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> res.is_success:</span>
<span id="cb8-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unable to retrieve content"</span>)</span>
<span id="cb8-18"></span>
<span id="cb8-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span></code></pre></div>
</div>
<section id="sample-implementation-of-get_jupyter_content" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-get_jupyter_content">sample implementation of get_jupyter_content</h4>
<div id="74ee3148" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _get_jupyter_content(</span>
<span id="cb9-2">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dj_auth,</span>
<span id="cb9-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># content_path = 'my_terrible_demo.txt',</span></span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># content_path="datatypes.ipynb",</span></span>
<span id="cb9-5">    debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb9-6">)</span>
<span id="cb9-7"></span>
<span id="cb9-8">res.response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[{'name': 'my_terrible_demo.txt',
  'path': 'my_terrible_demo.txt',
  'last_modified': '2023-09-15T22:20:36.711000Z',
  'created': '2023-09-15T22:20:36.711000Z',
  'content': None,
  'format': None,
  'mimetype': 'text/plain',
  'size': 33,
  'writable': True,
  'type': 'file'},
 {'name': 'untitled1.txt',
  'path': 'untitled1.txt',
  'last_modified': '2023-09-15T22:37:23.077000Z',
  'created': '2023-09-15T22:37:23.077000Z',
  'content': None,
  'format': None,
  'mimetype': 'text/plain',
  'size': 33,
  'writable': True,
  'type': 'file'}]</code></pre>
</div>
</div>
</section>
</section>
<section id="update-jupyter-content" class="level3">
<h3 class="anchored" data-anchor-id="update-jupyter-content">update jupyter content</h3>
<p>improve code maintenance by implementing a factory design patternx</p>
<div id="ad1fa8cf" class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _generate_update_jupyter_text(body):</span>
<span id="cb11-2">    body.update(</span>
<span id="cb11-3">        {</span>
<span id="cb11-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb11-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"file"</span>,</span>
<span id="cb11-6">        }</span>
<span id="cb11-7">    )</span>
<span id="cb11-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> body</span>
<span id="cb11-9"></span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _generate_update_jupyter_ipynb(body):</span>
<span id="cb11-12">    body.update(</span>
<span id="cb11-13">        {</span>
<span id="cb11-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb11-15">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook"</span>,</span>
<span id="cb11-16">        }</span>
<span id="cb11-17">    )</span>
<span id="cb11-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> body</span>
<span id="cb11-19"></span>
<span id="cb11-20"></span>
<span id="cb11-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _generate_update_jupyter_directory(content_path, body):</span>
<span id="cb11-22"></span>
<span id="cb11-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> content_path:</span>
<span id="cb11-24">        new_content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>.join(content_path.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb11-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb11-26">        new_content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb11-27"></span>
<span id="cb11-28">    body.update(</span>
<span id="cb11-29">        {</span>
<span id="cb11-30">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>: new_content_path,</span>
<span id="cb11-31">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb11-32">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span>,</span>
<span id="cb11-33">        }</span>
<span id="cb11-34">    )</span>
<span id="cb11-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> body</span>
<span id="cb11-36"></span>
<span id="cb11-37"></span>
<span id="cb11-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _generate_update_jupyter_body(</span>
<span id="cb11-39">    new_content, content_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># my_folder/datatypes.ipynb</span></span>
<span id="cb11-40">):</span>
<span id="cb11-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""factory to construct properly formed body"""</span></span>
<span id="cb11-42"></span>
<span id="cb11-43">    content_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.normpath(content_path).split(os.sep)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb11-44"></span>
<span id="cb11-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> content_path:</span>
<span id="cb11-46">        content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> content_path.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb11-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb11-48">        content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span></span>
<span id="cb11-49"></span>
<span id="cb11-50">    body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb11-51">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: content_name,</span>
<span id="cb11-52">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: new_content,</span>
<span id="cb11-53">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>: content_path,</span>
<span id="cb11-54">    }</span>
<span id="cb11-55"></span>
<span id="cb11-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ipynb"</span>:</span>
<span id="cb11-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> _generate_update_jupyter_ipynb(body)</span>
<span id="cb11-58"></span>
<span id="cb11-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> content_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span>:</span>
<span id="cb11-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> _generate_update_jupyter_directory(content_path, body)</span>
<span id="cb11-61"></span>
<span id="cb11-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> _generate_update_jupyter_text(body)</span>
<span id="cb11-63"></span>
<span id="cb11-64"></span>
<span id="cb11-65">_generate_update_jupyter_body(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hello world"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hi.md"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'name': 'hi.md',
 'content': 'hello world',
 'path': 'hi.md',
 'format': 'text',
 'type': 'file'}</code></pre>
</div>
</div>
<div id="91499728" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _update_jupyter_file(</span>
<span id="cb13-2">    auth: DomoJupyterFullAuth,</span>
<span id="cb13-3">    new_content,</span>
<span id="cb13-4">    content_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># file name and location in jupyter</span></span>
<span id="cb13-5">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb13-6">    num_stacks_to_drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-7">):</span>
<span id="cb13-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(auth, DomoJupyterFullAuth):</span>
<span id="cb13-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(</span>
<span id="cb13-10">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"invalid auth type </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>__class__<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> must pass DomoJupyter auth type"</span></span>
<span id="cb13-11">        )</span>
<span id="cb13-12"></span>
<span id="cb13-13">    body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _generate_update_jupyter_body(new_content, content_path)</span>
<span id="cb13-14"></span>
<span id="cb13-15">    content_path_split <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.normpath(content_path).split(os.sep)</span>
<span id="cb13-16"></span>
<span id="cb13-17">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>service_location<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>auth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>service_prefix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">api/contents/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(content_path_split)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb13-18"></span>
<span id="cb13-19">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> gd.get_data(</span>
<span id="cb13-20">        url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb13-21">        method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PUT"</span>,</span>
<span id="cb13-22">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb13-23">        body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>body,</span>
<span id="cb13-24">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb13-25">        num_stacks_to_drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_stacks_to_drop,</span>
<span id="cb13-26">    )</span>
<span id="cb13-27"></span>
<span id="cb13-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> res.is_success:</span>
<span id="cb13-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unable to update content.  validate your user token"</span>)</span>
<span id="cb13-30"></span>
<span id="cb13-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span></code></pre></div>
</div>
<section id="sample-implementation-of-update_content" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-update_content">sample implementation of update_content</h4>
<div id="371e46df" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _update_jupyter_file(</span>
<span id="cb14-2">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dj_auth,</span>
<span id="cb14-3">    content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new_folder/my_great_demo.txt"</span>,</span>
<span id="cb14-4">    new_content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jae is excellent at demoes"</span>,</span>
<span id="cb14-5">    debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb14-6">)</span>
<span id="cb14-7"></span>
<span id="cb14-8">res.response</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'name': 'my_great_demo.txt',
 'path': 'new_folder/my_great_demo.txt',
 'last_modified': '2023-09-18T20:48:47.644000Z',
 'created': '2023-09-18T20:48:47.644000Z',
 'content': None,
 'format': None,
 'mimetype': 'text/plain',
 'size': 26,
 'writable': True,
 'type': 'file'}</code></pre>
</div>
</div>
</section>
</section>
<section id="recursive-get_content" class="level3">
<h3 class="anchored" data-anchor-id="recursive-get_content">recursive get_content</h3>
<p><a href="https://youtu.be/l32qTj08bCY">![Tutorial Video pt 3 of 4]</a></p>
<div id="76003fd1-dafc-4c17-a4ba-91b645ac2c7c" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_content_recursive(</span>
<span id="cb16-2">    auth: DomoJupyterFullAuth,</span>
<span id="cb16-3">    content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb16-4">    all_rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb16-5">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-6">    return_raw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-7">):</span>
<span id="cb16-8">    all_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_rows <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> []</span>
<span id="cb16-9"></span>
<span id="cb16-10">    res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _get_jupyter_content(</span>
<span id="cb16-11">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb16-12">        content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path,</span>
<span id="cb16-13">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb16-14">    )</span>
<span id="cb16-15"></span>
<span id="cb16-16">    content_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>]</span>
<span id="cb16-17"></span>
<span id="cb16-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> content_ls:</span>
<span id="cb16-19">        content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path"</span>]</span>
<span id="cb16-20"></span>
<span id="cb16-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span>:</span>
<span id="cb16-22">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _get_jupyter_content(</span>
<span id="cb16-23">                auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb16-24">                content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path,</span>
<span id="cb16-25">                debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb16-26">            )</span>
<span id="cb16-27"></span>
<span id="cb16-28">            all_rows.append(res.response)</span>
<span id="cb16-29"></span>
<span id="cb16-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"directory"</span>:</span>
<span id="cb16-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_content_recursive(</span>
<span id="cb16-32">                auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb16-33">                content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path,</span>
<span id="cb16-34">                all_rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>all_rows,</span>
<span id="cb16-35">                debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb16-36">            )</span>
<span id="cb16-37"></span>
<span id="cb16-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_raw:</span>
<span id="cb16-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span>
<span id="cb16-40"></span>
<span id="cb16-41">    res.response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> all_rows</span>
<span id="cb16-42"></span>
<span id="cb16-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span></code></pre></div>
</div>
<div id="a223ff43-ee28-468a-90c6-24b9640577f5" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"this will work"</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a1</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> my_fake_recursion(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb17-5">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> []  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a1</span></span>
<span id="cb17-6">    x.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new_record"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a1</span></span>
<span id="cb17-7"></span>
<span id="cb17-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"i am in a function i have been passed by reference"</span>, x)</span>
<span id="cb17-9"></span>
<span id="cb17-10"></span>
<span id="cb17-11">my_fake_recursion(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x)</span>
<span id="cb17-12"></span>
<span id="cb17-13">x  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>i am in a function i have been passed by reference ['this will work', 'new_record']</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>['this will work', 'new_record']</code></pre>
</div>
</div>
<section id="sample-implementation-of-get_content_recursive" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-get_content_recursive">sample implementation of get_content_recursive</h4>
<div id="7a83f47d-0ac9-4c0a-8165-ff7fc46cf105" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _get_jupyter_content(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dj_auth, content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb20-2">[content[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> content <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> res.response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['my_terrible_demo.txt',
 'untitled1.txt',
 'tutorial',
 'tutorial_env.ipynb',
 'UpdateDatasets.ipynb',
 'export',
 'MakeDomoFaster.ipynb',
 'get_content.ipynb',
 'DataflowExecution.ipynb',
 'Untitled.ipynb',
 'instance_pdp_access.ipynb',
 'Untitled Folder',
 'new_folder',
 'README.md',
 'recent_executions',
 'untitled.txt',
 'env.txt',
 'datatypes.ipynb']</code></pre>
</div>
</div>
<div id="f690def4" class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_content_recursive(</span>
<span id="cb22-2">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dj_auth,</span>
<span id="cb22-3">    debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb22-4">    return_raw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb22-5">)</span>
<span id="cb22-6">content_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.response</span>
<span id="cb22-7"></span>
<span id="cb22-8">[content[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> content <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> content_ls]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['my_terrible_demo.txt',
 'untitled1.txt',
 'copy_me.ipynb',
 'AS_rbd.ipynb',
 'env.txt',
 'JW_session5_prep.ipynb',
 'tutorial_env.ipynb',
 'UpdateDatasets.ipynb',
 'untitled1.txt',
 'MakeDomoFaster.ipynb',
 'get_content.ipynb',
 'DataflowExecution.ipynb',
 'Untitled.ipynb',
 'instance_pdp_access.ipynb',
 'my_great_demo.txt',
 'README.md',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.html',
 'output.ipynb',
 'output.pdf',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'stderr',
 'output.ipynb',
 'stdout',
 'untitled.txt',
 'env.txt',
 'datatypes.ipynb']</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="class" class="level2">
<h2 class="anchored" data-anchor-id="class">CLASS</h2>
<p><a href="https://youtu.be/RbfbQ8V2erM">![Tutorial Video pt 4 of 4]</a></p>
</section>
<section id="domojupyter-content-and-class" class="level2">
<h2 class="anchored" data-anchor-id="domojupyter-content-and-class">DomoJupyter Content and Class</h2>
<div id="402ef434-477d-4a76-8f03-d6516d6e8542" class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DomoJupyter_Content:</span>
<span id="cb24-3">    name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb24-4">    folder: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb24-5">    last_modified: dt.datetime</span>
<span id="cb24-6">    file_type: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb24-7">    content: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb24-8"></span>
<span id="cb24-9">    auth: DomoJupyterFullAuth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">repr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-10"></span>
<span id="cb24-11">    default_export_folder: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export"</span></span>
<span id="cb24-12"></span>
<span id="cb24-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> __post_init__(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb24-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.folder.endswith(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name):</span>
<span id="cb24-15">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.folder.replace(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb24-16"></span>
<span id="cb24-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@classmethod</span></span>
<span id="cb24-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _from_json(cls, obj: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>, auth: DomoJupyterFullAuth):</span>
<span id="cb24-19">        dd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> util_dd.DictDot(obj) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(obj, util_dd.DictDot) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> obj</span>
<span id="cb24-20"></span>
<span id="cb24-21">        dc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cls(</span>
<span id="cb24-22">            name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dd.name,</span>
<span id="cb24-23">            folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dd.path,</span>
<span id="cb24-24">            last_modified<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>parse(dd.last_modified),</span>
<span id="cb24-25">            file_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dd.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>,</span>
<span id="cb24-26">            auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb24-27">            content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>obj.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>),</span>
<span id="cb24-28">        )</span>
<span id="cb24-29"></span>
<span id="cb24-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dc</span>
<span id="cb24-31"></span>
<span id="cb24-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> export_content(</span>
<span id="cb24-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,</span>
<span id="cb24-34">        output_folder: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb24-35">        file_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb24-36">    ):</span>
<span id="cb24-37">        output_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_folder <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> os.path.join(</span>
<span id="cb24-38">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.default_export_folder, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.folder</span>
<span id="cb24-39">        )</span>
<span id="cb24-40"></span>
<span id="cb24-41">        file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name</span>
<span id="cb24-42"></span>
<span id="cb24-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.exists(output_folder):</span>
<span id="cb24-44">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(output_folder)</span>
<span id="cb24-45">            os.makedirs(output_folder)</span>
<span id="cb24-46"></span>
<span id="cb24-47">        content_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.content</span>
<span id="cb24-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.content, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>):</span>
<span id="cb24-49">            content_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.dumps(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.content)</span>
<span id="cb24-50"></span>
<span id="cb24-51">        output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_folder, file_name)</span>
<span id="cb24-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb24-53">            f.write(content_str)</span>
<span id="cb24-54">            f.close()</span>
<span id="cb24-55"></span>
<span id="cb24-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> output_path</span>
<span id="cb24-57"></span>
<span id="cb24-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> update(</span>
<span id="cb24-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,</span>
<span id="cb24-60">        jupyter_folder: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb24-61">        jupyter_file_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb24-62">        debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb24-63">    ):</span>
<span id="cb24-64"></span>
<span id="cb24-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> jupyter_folder <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> jupyter_file_name:</span>
<span id="cb24-66">            content_patuh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>jupyter_folder<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>jupyter_file_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb24-67"></span>
<span id="cb24-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.folder) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb24-69">            content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>folder<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb24-70"></span>
<span id="cb24-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb24-72">            content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name</span>
<span id="cb24-73"></span>
<span id="cb24-74">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> content_path.lower().startswith(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.default_export_folder.lower()):</span>
<span id="cb24-75">                content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> content_path.replace(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.default_export_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb24-76"></span>
<span id="cb24-77">        content_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>.join(os.path.normpath(content_path).split(os.sep))</span>
<span id="cb24-78"></span>
<span id="cb24-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _update_jupyter_file(</span>
<span id="cb24-80">            auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth,</span>
<span id="cb24-81">            content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path,</span>
<span id="cb24-82">            new_content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.content,</span>
<span id="cb24-83">            debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb24-84">        )</span>
<span id="cb24-85"></span>
<span id="cb24-86"></span>
<span id="cb24-87"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb24-88"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DomoJupyter:</span>
<span id="cb24-89">    auth: DomoJupyterFullAuth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">repr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb24-90">    content: [DomoJupyter_Content] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> field(default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb24-91"></span>
<span id="cb24-92">    user_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-93">    service_location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-94">    service_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-95"></span>
<span id="cb24-96">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> __post_init__(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb24-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo_password"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(</span>
<span id="cb24-98">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, DomoJupyterFullAuth</span>
<span id="cb24-99">        ):</span>
<span id="cb24-100"></span>
<span id="cb24-101">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DomoJupyterFullAuth.convert_auth(</span>
<span id="cb24-102">                full_auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth,</span>
<span id="cb24-103">                user_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_token,</span>
<span id="cb24-104">                service_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_location,</span>
<span id="cb24-105">                service_prefix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.service_prefix,</span>
<span id="cb24-106">            )</span>
<span id="cb24-107">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"developer_token"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(</span>
<span id="cb24-108">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, DomoJupyterDeveloperToken</span>
<span id="cb24-109">        ):</span>
<span id="cb24-110">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(</span>
<span id="cb24-111">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"this authentitcation conversion method hasn't been implemented yet"</span></span>
<span id="cb24-112">            )</span>
<span id="cb24-113"></span>
<span id="cb24-114">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># self.auth = DomoJupyterTokenAuth.convert_auth(</span></span>
<span id="cb24-115">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     auth=self.auth,</span></span>
<span id="cb24-116">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     user_token=self.user_token,</span></span>
<span id="cb24-117">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     service_location=self.service_location,</span></span>
<span id="cb24-118">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     service_prefix=self.service_prefix,</span></span>
<span id="cb24-119">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb24-120"></span>
<span id="cb24-121">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_content(</span>
<span id="cb24-122">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,</span>
<span id="cb24-123">        debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb24-124">        return_raw: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb24-125">        is_recursive: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb24-126">        content_path: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb24-127">    ):</span>
<span id="cb24-128"></span>
<span id="cb24-129">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> is_recursive:</span>
<span id="cb24-130">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_content_recursive(</span>
<span id="cb24-131">                auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path</span>
<span id="cb24-132">            )</span>
<span id="cb24-133">            content_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.response</span>
<span id="cb24-134"></span>
<span id="cb24-135">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb24-136">            res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> _get_jupyter_content(</span>
<span id="cb24-137">                auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth, debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, content_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>content_path</span>
<span id="cb24-138">            )</span>
<span id="cb24-139"></span>
<span id="cb24-140">            content_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> res.response[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>]</span>
<span id="cb24-141"></span>
<span id="cb24-142">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> return_raw:</span>
<span id="cb24-143">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> res</span>
<span id="cb24-144"></span>
<span id="cb24-145">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [</span>
<span id="cb24-146">            DomoJupyter_Content._from_json(obj, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.auth) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> content_ls</span>
<span id="cb24-147">        ]</span></code></pre></div>
</div>
<section id="sample-impelemntation-of-get_contet" class="level4">
<h4 class="anchored" data-anchor-id="sample-impelemntation-of-get_contet">sample impelemntation of get_contet</h4>
<div id="aa7bb7fe-8573-4cf5-9997-c4fb07d46702" class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">domo_dj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DomoJupyter(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dj_auth)</span>
<span id="cb25-2"></span>
<span id="cb25-3">domo_dj_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dj.get_content(</span>
<span id="cb25-4">    debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, return_raw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, is_recursive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb25-5">)</span>
<span id="cb25-6"></span>
<span id="cb25-7">[domo_content.name <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_content <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dj_content]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['my_terrible_demo.txt',
 'untitled1.txt',
 'tutorial',
 'tutorial_env.ipynb',
 'UpdateDatasets.ipynb',
 'export',
 'MakeDomoFaster.ipynb',
 'get_content.ipynb',
 'DataflowExecution.ipynb',
 'Untitled.ipynb',
 'instance_pdp_access.ipynb',
 'Untitled Folder',
 'new_folder',
 'README.md',
 'recent_executions',
 'untitled.txt',
 'env.txt',
 'datatypes.ipynb']</code></pre>
</div>
</div>
</section>
<section id="sample-implementation-of-updating-content-with-domojupyter_content-class" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-updating-content-with-domojupyter_content-class">sample implementation of updating content with DomoJupyter_Content class</h4>
<div id="6b335e28" class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">test_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dj_content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb27-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test_content.__class__.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span>)</span>
<span id="cb27-3"></span>
<span id="cb27-4">test_content.content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jae rocks at debugging on the fly"</span></span>
<span id="cb27-5">test_content</span>
<span id="cb27-6"></span>
<span id="cb27-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> test_content.update(debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>DomoJupyter_Content</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>ResponseGetData(status=200, response={'name': 'untitled1.txt', 'path': 'untitled1.txt', 'last_modified': '2023-09-18T20:49:10.472000Z', 'created': '2023-09-18T20:49:10.472000Z', 'content': None, 'format': None, 'mimetype': 'text/plain', 'size': 33, 'writable': True, 'type': 'file'}, is_success=True, parent_class=None, traceback_details=TracebackDetails(function_name='_update_jupyter_file', file_name='/tmp/ipykernel_4630/2378948045.py', function_trail='&lt;module&gt; -&gt; update -&gt; _update_jupyter_file', traceback_stack=[&lt;FrameSummary file /tmp/ipykernel_4630/64093016.py, line 9 in &lt;module&gt;&gt;, &lt;FrameSummary file /tmp/ipykernel_4630/3496755649.py, line 83 in update&gt;, &lt;FrameSummary file /tmp/ipykernel_4630/2378948045.py, line 22 in _update_jupyter_file&gt;], parent_class=None))</code></pre>
</div>
</div>
<div id="8034b42a-f645-4974-a25b-8c403a0886fd" class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test_content.export_content()</span></span></code></pre></div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>Python</category>
  <category>DomoJupyter</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-09-13_Domo_Jupyter/</guid>
  <pubDate>Wed, 13 Sep 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Automated Card Backup</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-04-14_BackupCards/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<p>a short post on using DomoLibrary to automate dataset tagging</p>
<section id="project-configuration" class="level1">
<h1>Project Configuration</h1>
<div id="cell-3" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"></span>
<span id="cb1-4">token_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoTokenAuth(</span>
<span id="cb1-5">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span>,</span>
<span id="cb1-6">    domo_access_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_DOJO_ACCESS_TOKEN"</span>],</span>
<span id="cb1-7">)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> token_auth.get_auth_token()</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(token_auth.token, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>warning this token has not been validated by who_am_i, run get_auth_token first</code></pre>
</div>
</div>
</section>
<section id="get-cards" class="level1">
<h1>Get Cards</h1>
<div id="cell-5" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDatacenter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ddc</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.routes.datacenter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> datacenter_routes</span>
<span id="cb3-4"></span>
<span id="cb3-5">domo_datasets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ddc.DomoDatacenter.search_datasets(</span>
<span id="cb3-6">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth, </span>
<span id="cb3-7">)</span>
<span id="cb3-8"></span>
<span id="cb3-9">domo_datasets[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>[DomoDataset(id='da552832-c04d-46ac-936a-f982d9d3f2e6', display_type='api', data_provider_type=None, name='SalesProject01_hello world_INT *', description=None, row_count=0, column_count=0, stream_id=None, owner={'id': '1893952720', 'name': 'Jae Wilson1', 'type': 'USER', 'group': False}, formula={}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=['provider_type : api *', 'proj_phase : 01 *', 'proj_name : SalesProject *', 'ds_type : INT *']), certification=DomoCertification(certification_state='certified', last_updated=datetime.datetime(2023, 4, 4, 8, 8, 51, 402000), certification_type='DEPARTMENT', certification_name='Jae Test Certification'), PDP=&lt;domolibrary.classes.DomoPDP.Dataset_PDP_Policies object at 0x7fb348803f70&gt;),
 DomoDataset(id='c3cc5a31-acc5-4999-b76e-2f7580901d2c', display_type='DataFlow', data_provider_type=None, name='DEV | March Madness', description=None, row_count=362, column_count=151, stream_id=None, owner={'id': '1334846498', 'name': 'Jonathan Pilafas', 'type': 'USER', 'group': False}, formula={'calculation_8312f239-7550-43e8-97da-37efdc398e80': {'templateId': 3976, 'id': 'calculation_8312f239-7550-43e8-97da-37efdc398e80', 'name': 'Vulnerable Top 2 Seed?', 'formula': "CASE \n\tWHEN `Team Name` IN ('Iowa State') THEN 'Vulnerable'\n    ELSE 'Not Vulnerable'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Team Name`', 'columnPosition': 12}], 'variable': False}, 'calculation_f6a237b7-aca5-4123-9680-2719bc646f8c': {'templateId': 3834, 'id': 'calculation_f6a237b7-aca5-4123-9680-2719bc646f8c', 'name': 'Worst Offensive Efficiency', 'formula': 'MIN(`Adjusted Offensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Offensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_162b1390-1fa0-4851-a291-42d665683630': {'templateId': 3920, 'id': 'calculation_162b1390-1fa0-4851-a291-42d665683630', 'name': '3PA + 3P%', 'formula': "CASE \n\tWHEN `FG3Rate` &gt;= 30.0 AND `FG3Rate` &lt;= 50.0 AND `FG3Pct` &gt;= 35.0 THEN 'Best'\n    ELSE 'Not The Best'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`FG3Rate`', 'columnPosition': 12}, {'columnName': '`FG3Rate`', 'columnPosition': 34}, {'columnName': '`FG3Pct`', 'columnPosition': 56}], 'variable': False}, 'calculation_a16a31be-17d3-480b-9eaa-26d0edec7849': {'templateId': 3865, 'id': 'calculation_a16a31be-17d3-480b-9eaa-26d0edec7849', 'name': 'Power 6 Conference Flag', 'formula': "CASE \n\tWHEN `Conference` IN ('Atlantic Coast Conference (ACC)','Southeastern Conference (SEC)','Big Ten Conference (Big 10)','Pac-12 Conference','Big East Conference','Big 12 Conference') THEN 'Yes'\n    ELSE 'No'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Conference`', 'columnPosition': 12}], 'variable': False}, 'calculation_63979064-caf3-4273-998f-9fe18d47cc3c': {'templateId': 3974, 'id': 'calculation_63979064-caf3-4273-998f-9fe18d47cc3c', 'name': 'Seed Index', 'formula': "CASE \n\tWHEN `Seed` = '1' THEN 1\n    WHEN `Seed` = '2' THEN 2\n    WHEN `Seed` = '3' THEN 3\n    WHEN `Seed` = '4' THEN 4\n    WHEN `Seed` = '5' THEN 5\n    WHEN `Seed` = '6' THEN 6\n    WHEN `Seed` = '7' THEN 7\n    WHEN `Seed` = '8' THEN 8\n    WHEN `Seed` = '9' THEN 9\n    WHEN `Seed` = '10' THEN 10\n    WHEN `Seed` = '11' THEN 11\n    WHEN `Seed` = '12' THEN 12\n    WHEN `Seed` = '13' THEN 13\n    WHEN `Seed` = '14' THEN 14\n    WHEN `Seed` = '15' THEN 15\n    WHEN `Seed` = '16' THEN 16\n    ELSE 17\nEND", 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Seed`', 'columnPosition': 12}, {'columnName': '`Seed`', 'columnPosition': 41}, {'columnName': '`Seed`', 'columnPosition': 70}, {'columnName': '`Seed`', 'columnPosition': 99}, {'columnName': '`Seed`', 'columnPosition': 128}, {'columnName': '`Seed`', 'columnPosition': 157}, {'columnName': '`Seed`', 'columnPosition': 186}, {'columnName': '`Seed`', 'columnPosition': 215}, {'columnName': '`Seed`', 'columnPosition': 244}, {'columnName': '`Seed`', 'columnPosition': 273}, {'columnName': '`Seed`', 'columnPosition': 304}, {'columnName': '`Seed`', 'columnPosition': 335}, {'columnName': '`Seed`', 'columnPosition': 366}, {'columnName': '`Seed`', 'columnPosition': 397}, {'columnName': '`Seed`', 'columnPosition': 428}, {'columnName': '`Seed`', 'columnPosition': 459}], 'variable': False}, 'calculation_613ad5a3-ef3e-43c0-a37d-135ab8996ce9': {'templateId': 3869, 'id': 'calculation_613ad5a3-ef3e-43c0-a37d-135ab8996ce9', 'name': 'Top Efficiencies Index', 'formula': "CASE \n\tWHEN DOMO_BEAST_MODE(3868) = 'Optimal Efficiency - Tier 1' THEN 1\n    WHEN DOMO_BEAST_MODE(3868) = 'Optimal Efficiency - Tier 2' THEN 2\n    WHEN DOMO_BEAST_MODE(3868) = 'Optimal Efficiency' THEN 3\n    WHEN DOMO_BEAST_MODE(3868) = 'Not Optimal Efficiency' THEN 4\nEND", 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'variable': False}, 'calculation_1b6d4d47-9333-42da-aaf5-424525af4c38': {'templateId': 3919, 'id': 'calculation_1b6d4d47-9333-42da-aaf5-424525af4c38', 'name': 'Net Efficiency', 'formula': '`Adjusted Offensive Efficiency` - `Adjusted Defensive Efficiency`', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Offensive Efficiency`', 'columnPosition': 0}, {'columnName': '`Adjusted Defensive Efficiency`', 'columnPosition': 34}], 'variable': False}, 'calculation_158bc983-f396-4e4d-8732-edc22b6d99bf': {'templateId': 3835, 'id': 'calculation_158bc983-f396-4e4d-8732-edc22b6d99bf', 'name': 'Worst Defensive Efficiency', 'formula': 'MAX(`Adjusted Defensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Defensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_38c9ef4c-95d8-4968-980f-2eea8bcb938c': {'templateId': 3867, 'id': 'calculation_38c9ef4c-95d8-4968-980f-2eea8bcb938c', 'name': 'Efficient Offense + Efficient Defense', 'formula': "CASE \n\tWHEN `Adjusted Offensive Efficiency Rank` &lt;= 181 AND `Adjusted Defensive Efficiency Rank` &lt;= 181 THEN 'Good Offense + Good Defense'\n\tWHEN `Adjusted Offensive Efficiency Rank` &lt;= 181 AND `Adjusted Defensive Efficiency Rank` &gt;= 181 THEN 'Good Offense + Bad Defense'\n\tWHEN `Adjusted Offensive Efficiency Rank` &gt;= 181 AND `Adjusted Defensive Efficiency Rank` &lt;= 181 THEN 'Bad Offense + Good Defense'\n\tWHEN `Adjusted Offensive Efficiency Rank` &gt;= 181 AND `Adjusted Defensive Efficiency Rank` &gt;= 181 THEN 'Bad Offense + Bad Defense'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Offensive Efficiency Rank`', 'columnPosition': 12}, {'columnName': '`Adjusted Defensive Efficiency Rank`', 'columnPosition': 60}, {'columnName': '`Adjusted Offensive Efficiency Rank`', 'columnPosition': 145}, {'columnName': '`Adjusted Defensive Efficiency Rank`', 'columnPosition': 193}, {'columnName': '`Adjusted Offensive Efficiency Rank`', 'columnPosition': 277}, {'columnName': '`Adjusted Defensive Efficiency Rank`', 'columnPosition': 325}, {'columnName': '`Adjusted Offensive Efficiency Rank`', 'columnPosition': 409}, {'columnName': '`Adjusted Defensive Efficiency Rank`', 'columnPosition': 457}], 'variable': False}, 'calculation_6bad87e3-709a-4530-ae32-1c6a44b94834': {'templateId': 3832, 'id': 'calculation_6bad87e3-709a-4530-ae32-1c6a44b94834', 'name': 'Best Offensive Efficiency', 'formula': 'MAX(`Adjusted Offensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Offensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_c90301ea-1d93-48df-9ed5-371424ca22cf': {'templateId': 3908, 'id': 'calculation_c90301ea-1d93-48df-9ed5-371424ca22cf', 'name': '5 Year Coaching Threshold', 'formula': "CASE \n\tWHEN `Active Coaching Length` IN ('0 years','1 years','2 years','3 years','4 years') THEN '0-5 Years Experience'\n    ELSE '5+ Years Experience'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Active Coaching Length`', 'columnPosition': 12}], 'variable': False}, 'calculation_31a8e769-5307-425b-a3d2-db02823eba65': {'templateId': 3830, 'id': 'calculation_31a8e769-5307-425b-a3d2-db02823eba65', 'name': 'Avg Offensive Efficiency', 'formula': 'AVG(`Adjusted Offensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Offensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_c91796c3-a6bb-4f3f-b1c2-733c8bb5e1b9': {'templateId': 3831, 'id': 'calculation_c91796c3-a6bb-4f3f-b1c2-733c8bb5e1b9', 'name': 'Avg Defensive Efficiency', 'formula': 'AVG(`Adjusted Defensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Defensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_6450cddc-85ba-4099-94cc-4beaecd026fb': {'templateId': 3870, 'id': 'calculation_6450cddc-85ba-4099-94cc-4beaecd026fb', 'name': 'Top 12 in AP Top 25 during Week 6', 'formula': "CASE \n\tWHEN `Season` = 2024 AND `Team Name` IN ('Arizona','Kansas','Purdue','Houston','UConn','Baylor','Marquette','Creighton','North Carolina','Gonzaga','Oklahoma','Tennessee') THEN 'Top 12 in Week 6'\n    ELSE 'Not Top 12 in Week 6'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Season`', 'columnPosition': 12}, {'columnName': '`Team Name`', 'columnPosition': 32}], 'variable': False}, 'calculation_cd3a022a-4e9e-41dc-a996-a3d41a0a59d2': {'templateId': 3868, 'id': 'calculation_cd3a022a-4e9e-41dc-a996-a3d41a0a59d2', 'name': 'Top Efficiencies', 'formula': "CASE \n\tWHEN `RankOE` &lt;= 19 AND `RankDE` &lt;= 22 THEN 'Optimal Efficiency - Tier 1'\n\tWHEN `RankOE` &lt;= 39 AND `RankDE` &lt;= 22 THEN 'Optimal Efficiency - Tier 2'\n\t-- WHEN `Adjusted Offensive Efficiency Rank` &lt;= 39 AND `Adjusted Defensive Efficiency Rank` &lt;= 22 THEN 'Optimal Efficiency'\n    ELSE 'Not Optimal Efficiency'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`RankOE`', 'columnPosition': 12}, {'columnName': '`RankDE`', 'columnPosition': 31}, {'columnName': '`RankOE`', 'columnPosition': 87}, {'columnName': '`RankDE`', 'columnPosition': 106}], 'variable': False}, 'calculation_f6ee3337-5c9a-40c5-9695-17f9ae922d49': {'templateId': 3833, 'id': 'calculation_f6ee3337-5c9a-40c5-9695-17f9ae922d49', 'name': 'Best Defensive Efficiency', 'formula': 'MIN(`Adjusted Defensive Efficiency`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Defensive Efficiency`', 'columnPosition': 4}], 'variable': False}, 'calculation_f7b72e6a-3535-422f-9428-f1ad3a5e8436': {'templateId': 3975, 'id': 'calculation_f7b72e6a-3535-422f-9428-f1ad3a5e8436', 'name': 'Made Conference Semifinals?', 'formula': "CASE \n\tWHEN `Season` = 2024 AND `Team Name` IN ('TCU','Kansas','South Carolina','Creighton','Texas','Virginia','Tennessee','Michigan State','Alabama','Clemson','Dayton','Nevada','Northwestern','BYU','Duke','Kentucky','Boise State') THEN 'No'\n    ELSE 'Yes'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Season`', 'columnPosition': 12}, {'columnName': '`Team Name`', 'columnPosition': 32}], 'variable': False}, 'calculation_d4d2f814-a702-4de0-9c5b-6edf84e8707f': {'templateId': 3922, 'id': 'calculation_d4d2f814-a702-4de0-9c5b-6edf84e8707f', 'name': 'Opp3PA + Opp3P%', 'formula': "CASE \n\tWHEN `RankFG3Rate` &lt;= 181 AND `RankOppFG3Pct` &lt;= 181 THEN 'Best'\n    ELSE 'Not The Best'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`RankFG3Rate`', 'columnPosition': 12}, {'columnName': '`RankOppFG3Pct`', 'columnPosition': 37}], 'variable': False}, 'calculation_fa3ad795-3a03-4dd9-9baa-e7b7d2aad1e6': {'templateId': 3866, 'id': 'calculation_fa3ad795-3a03-4dd9-9baa-e7b7d2aad1e6', 'name': 'Pace + Net Rating', 'formula': "CASE \n\tWHEN `Adjusted Temo` &gt;= 62.0 AND `Adjusted Temo` &lt;= 72.0 AND `Net Rating` &gt;= 20.0 THEN 'Best'\n    ELSE 'Not The Best'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Adjusted Temo`', 'columnPosition': 12}, {'columnName': '`Adjusted Temo`', 'columnPosition': 40}, {'columnName': '`Net Rating`', 'columnPosition': 68}], 'variable': False}, 'calculation_ebc45801-0350-4b77-87b9-c2de3e3de175': {'templateId': 3921, 'id': 'calculation_ebc45801-0350-4b77-87b9-c2de3e3de175', 'name': 'AST% + TOV%', 'formula': "CASE \n\tWHEN `RankARate` &lt;= 181 AND `Off.TO % Rank` &lt;= 181 THEN 'Best'\n    ELSE 'Not The Best'\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`RankARate`', 'columnPosition': 12}, {'columnName': '`Off.TO % Rank`', 'columnPosition': 35}], 'variable': False}}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[]), certification=None, PDP=&lt;domolibrary.classes.DomoPDP.Dataset_PDP_Policies object at 0x7fb344635a50&gt;),
 DomoDataset(id='fff33fa8-bc96-4754-92ad-5a2f8789717f', display_type='salesforce', data_provider_type='salesforce', name='Salesforce | Accounts | TEST', description='', row_count=24, column_count=87, stream_id=1071, owner={'id': '68216396', 'name': 'Elliott Leonard', 'type': 'USER', 'group': False}, formula={}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[]), certification=None, PDP=&lt;domolibrary.classes.DomoPDP.Dataset_PDP_Policies object at 0x7fb348803fd0&gt;),
 DomoDataset(id='d8e97c12-630b-41d4-a470-400f4f0fe0a9', display_type='large-file-upload', data_provider_type='large-file-upload', name='RAW | KenPom | Summary', description='', row_count=362, column_count=16, stream_id=1449, owner={'id': '1334846498', 'name': 'Jonathan Pilafas', 'type': 'USER', 'group': False}, formula={}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[]), certification=None, PDP=&lt;domolibrary.classes.DomoPDP.Dataset_PDP_Policies object at 0x7fb34452cfa0&gt;),
 DomoDataset(id='353751aa-b96e-457f-9d06-f037b278cde0', display_type='webform', data_provider_type='webform', name='Store Example Data', description=None, row_count=19378, column_count=5, stream_id=1448, owner={'id': '68216396', 'name': 'Elliott Leonard', 'type': 'USER', 'group': False}, formula={}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[]), certification=None, PDP=&lt;domolibrary.classes.DomoPDP.Dataset_PDP_Policies object at 0x7fb34452dd50&gt;)]</code></pre>
</div>
</div>
<div id="cell-6" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataset <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmd</span>
<span id="cb5-2"></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_ds(</span>
<span id="cb5-5">    domo_dataset: dmd.DomoDataset,</span>
<span id="cb5-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dictionary where each attribute except _id and _ds_name becomes a tag</span></span>
<span id="cb5-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    receives DomoDataset object, and then generates an object with attributes that will become tags.</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    every organization will have different naming conventions and therefore must generate different rules for how tags can be exctracted from the Domo Dataset object.</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb5-11"></span>
<span id="cb5-12">    proj_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataset.name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-13">    proj_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proj_str[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb5-14">    proj_phase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proj_str[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb5-15"></span>
<span id="cb5-16">    _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataset.name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb5-17"></span>
<span id="cb5-18">    ds_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" *"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-19"></span>
<span id="cb5-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {</span>
<span id="cb5-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_id"</span>: domo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb5-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_ds_name"</span>: domo_dataset.name,</span>
<span id="cb5-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider_type"</span>: domo_dataset.display_type <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> domo_dataset.data_provider_type,</span>
<span id="cb5-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proj_name"</span>: proj_name,</span>
<span id="cb5-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proj_phase"</span>: proj_phase,</span>
<span id="cb5-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ds_type"</span>: ds_type,</span>
<span id="cb5-27">    }</span></code></pre></div>
</div>
<div id="cell-7" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for this project we assume any dataset that ends with * has been validated as adhering to the naming convention format.</span></span>
<span id="cb6-4">dataset_tags_to_update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-5">    process_ds(domo_dataset)</span>
<span id="cb6-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_dataset <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_datasets</span>
<span id="cb6-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> domo_dataset.name.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>)</span>
<span id="cb6-8">]</span>
<span id="cb6-9"></span>
<span id="cb6-10">pd.DataFrame(dataset_tags_to_update)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="24">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">_id</th>
<th data-quarto-table-cell-role="th">_ds_name</th>
<th data-quarto-table-cell-role="th">provider_type</th>
<th data-quarto-table-cell-role="th">proj_name</th>
<th data-quarto-table-cell-role="th">proj_phase</th>
<th data-quarto-table-cell-role="th">ds_type</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>da552832-c04d-46ac-936a-f982d9d3f2e6</td>
<td>SalesProject01_hello world_INT *</td>
<td>api</td>
<td>SalesProject</td>
<td>01</td>
<td>INT</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>063dd227-2a2d-4563-a372-6d08c950e86d</td>
<td>SalesProject02_summary_by_month_DASH *</td>
<td>api</td>
<td>SalesProject</td>
<td>02</td>
<td>DASH</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>6114155e-e6a5-4c9c-bec0-5f0b8e807579</td>
<td>SalesProject01_hello world3_INT *</td>
<td>api</td>
<td>SalesProject</td>
<td>01</td>
<td>INT</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>e5f44d26-4028-4282-88a9-239a0f909373</td>
<td>SalesProject02_summary_by_day_DASH *</td>
<td>api</td>
<td>SalesProject</td>
<td>02</td>
<td>DASH</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="cell-8" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_tags(tag_dict):</span>
<span id="cb7-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    simple utility function to collapse key/value pairs into a string</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tags generated by this process will be suffixed with an *</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb7-6"></span>
<span id="cb7-7">    tag_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb7-8">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tag_dict[key]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> *"</span></span>
<span id="cb7-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tag_dict.keys()</span>
<span id="cb7-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> key.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb7-11">    ]</span>
<span id="cb7-12"></span>
<span id="cb7-13">    info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb7-14">        key.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>): tag_dict[key]</span>
<span id="cb7-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tag_dict.keys()</span>
<span id="cb7-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> key.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb7-17">    }</span>
<span id="cb7-18"></span>
<span id="cb7-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tag_ls"</span>: tag_ls, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>info}</span></code></pre></div>
</div>
<div id="cell-9" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for each dataset to update, tag_ls contains the list of tags that will be added.</span></span>
<span id="cb8-4">dataset_tags_for_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [generate_tags(tag_dict) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tag_dict <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataset_tags_to_update]</span>
<span id="cb8-5"></span>
<span id="cb8-6">pprint(dataset_tags_for_api)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[{'dsname': 'SalesProject01_hello world_INT *',
  'id': 'da552832-c04d-46ac-936a-f982d9d3f2e6',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 01 *',
             'ds_type : INT *']},
 {'dsname': 'SalesProject02_summary_by_month_DASH *',
  'id': '063dd227-2a2d-4563-a372-6d08c950e86d',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 02 *',
             'ds_type : DASH *']},
 {'dsname': 'SalesProject01_hello world3_INT *',
  'id': '6114155e-e6a5-4c9c-bec0-5f0b8e807579',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 01 *',
             'ds_type : INT *']},
 {'dsname': 'SalesProject02_summary_by_day_DASH *',
  'id': 'e5f44d26-4028-4282-88a9-239a0f909373',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 02 *',
             'ds_type : DASH *']}]</code></pre>
</div>
</div>
<div id="cell-10" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataset <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmd</span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_dataset_tags(dataset_id, tag_ls: List[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], auth: dmda.DomoAuth):</span>
<span id="cb10-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    function to actually update domo dataset entities.</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tags previously added by this process (denoted with the * suffix) will be removed</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb10-11"></span>
<span id="cb10-12">    domo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmd.DomoDataset.get_from_id(dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb10-13"></span>
<span id="cb10-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove old tags</span></span>
<span id="cb10-15">    remove_tag_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [tag <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tag <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataset.tags.tag_ls <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tag.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" *"</span>)]</span>
<span id="cb10-16"></span>
<span id="cb10-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(remove_tag_ls) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb10-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataset.tags.remove(remove_tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>remove_tag_ls)</span>
<span id="cb10-19"></span>
<span id="cb10-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add new tags</span></span>
<span id="cb10-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataset.tags.add(add_tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tag_ls)</span>
<span id="cb10-22"></span>
<span id="cb10-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {</span>
<span id="cb10-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: domo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb10-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: domo_dataset.name,</span>
<span id="cb10-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tags"</span>: domo_dataset.tags.tag_ls,</span>
<span id="cb10-27">    }</span></code></pre></div>
</div>
<div id="cell-11" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb11-2"></span>
<span id="cb11-3">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.gather(</span>
<span id="cb11-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb11-5">        process_dataset_tags(</span>
<span id="cb11-6">            dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>), tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tag_ls"</span>), auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth</span>
<span id="cb11-7">        )</span>
<span id="cb11-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataset_tags_for_api</span>
<span id="cb11-9">    ]</span>
<span id="cb11-10">)</span>
<span id="cb11-11"></span>
<span id="cb11-12">pd.DataFrame(res)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">tags</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>da552832-c04d-46ac-936a-f982d9d3f2e6</td>
<td>SalesProject01_hello world_INT *</td>
<td>[provider_type : api *, proj_phase : 01 *, pro...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>063dd227-2a2d-4563-a372-6d08c950e86d</td>
<td>SalesProject02_summary_by_month_DASH *</td>
<td>[provider_type : api *, proj_phase : 02 *, pro...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>6114155e-e6a5-4c9c-bec0-5f0b8e807579</td>
<td>SalesProject01_hello world3_INT *</td>
<td>[provider_type : api *, proj_phase : 01 *, pro...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>e5f44d26-4028-4282-88a9-239a0f909373</td>
<td>SalesProject02_summary_by_day_DASH *</td>
<td>[provider_type : api *, proj_phase : 02 *, pro...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Backup</category>
  <category>Cards</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-04-14_BackupCards/</guid>
  <pubDate>Fri, 14 Apr 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Automated Tagging</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-04-03_AutomatedTagging/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<p>a short post on using DomoLibrary to automate dataset tagging</p>
<section id="project-configuration" class="level1">
<h1>Project Configuration</h1>
<div id="cell-3" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"></span>
<span id="cb1-4">token_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoTokenAuth(</span>
<span id="cb1-5">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span>,</span>
<span id="cb1-6">    domo_access_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_DOJO_ACCESS_TOKEN"</span>],</span>
<span id="cb1-7">)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> token_auth.get_auth_token()</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(token_auth.token, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
</div>
</section>
<section id="get-datasets" class="level1">
<h1>Get Datasets</h1>
<div id="cell-5" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDatacenter <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ddc</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-3"></span>
<span id="cb2-4">domo_datasets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> ddc.DomoDatacenter.search_datasets(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth)</span>
<span id="cb2-5"></span>
<span id="cb2-6">domo_datasets[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[DomoDataset(id='da552832-c04d-46ac-936a-f982d9d3f2e6', display_type='api', data_provider_type=None, name='SalesProject01_hello world_INT *', description=None, row_count=0, column_count=0, stream_id=None, owner={'id': '1893952720', 'name': 'Jae Wilson1', 'type': 'USER', 'group': False}, formula={}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=['provider_type : api *', 'proj_phase : 01 *', 'proj_name : SalesProject *', 'ds_type : INT *'])),
 DomoDataset(id='a2f255fc-6c24-4e63-9b61-0c88ae7c33a5', display_type='webform', data_provider_type='webform', name='AJ | Waterfall Demo', description=None, row_count=48, column_count=4, stream_id=973, owner={'id': '1345737456', 'name': 'Aditya Jain', 'type': 'USER', 'group': False}, formula={'calculation_c4e9c63d-f4c9-4c13-a7bc-8baf83f55721': {'templateId': 2662, 'id': 'calculation_c4e9c63d-f4c9-4c13-a7bc-8baf83f55721', 'name': 'WF Values', 'formula': "SUM(CASE \n\tWHEN \n    \tDOMO_BEAST_MODE(2661) = 'Absolute' THEN `Values`\n        ELSE\n        (CASE \n\tWHEN \n    DOMO_BEAST_MODE(2658) = LEFT(MONTHNAME(`Month`),3) THEN `Values` ELSE 0 \nEND)\n   -\n   (CASE \n\tWHEN \n    DOMO_BEAST_MODE(2659) = LEFT(MONTHNAME(`Month`),3) THEN `Values` ELSE 0 \nEND)\n    END)", 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Values`', 'columnPosition': 62}, {'columnName': '`Month`', 'columnPosition': 149}, {'columnName': '`Values`', 'columnPosition': 166}, {'columnName': '`Month`', 'columnPosition': 253}, {'columnName': '`Values`', 'columnPosition': 270}]}, 'calculation_34e6562c-d19d-408d-8b68-91dc72d48150': {'templateId': 2660, 'id': 'calculation_34e6562c-d19d-408d-8b68-91dc72d48150', 'name': 'Values Delta', 'formula': 'SUM(CASE \n\tWHEN \n    DOMO_BEAST_MODE(2658) = LEFT(MONTHNAME(`Month`),3) THEN `Values` ELSE 0 \nEND)\n   -\n   SUM(CASE \n\tWHEN \n    DOMO_BEAST_MODE(2659) = LEFT(MONTHNAME(`Month`),3) THEN `Values` ELSE 0 \nEND)\n    ', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`Month`', 'columnPosition': 60}, {'columnName': '`Values`', 'columnPosition': 77}, {'columnName': '`Month`', 'columnPosition': 167}, {'columnName': '`Values`', 'columnPosition': 184}]}}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[])),
 DomoDataset(id='dbb9502b-777f-4845-b218-fd212ffa334e', display_type='dataflow', data_provider_type='dataflow', name='AJ | Store Sales Analysis Dataset', description=None, row_count=907841, column_count=57, stream_id=None, owner={'id': '1345737456', 'name': 'Aditya Jain', 'type': 'USER', 'group': False}, formula={'calculation_bfad6d3f-ac3f-4f4c-9db6-c11c9b5cf137': {'templateId': 798, 'id': 'calculation_bfad6d3f-ac3f-4f4c-9db6-c11c9b5cf137', 'name': 'Retail Profit', 'formula': 'SUM(`current_retail_price`) - SUM(`current_cost`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`current_retail_price`', 'columnPosition': 4}, {'columnName': '`current_cost`', 'columnPosition': 34}]}, 'calculation_54803ae4-cad0-4d89-9dcd-440780bf27af': {'templateId': 796, 'id': 'calculation_54803ae4-cad0-4d89-9dcd-440780bf27af', 'name': 'Total Revenue', 'formula': "`quantity_sold` * `unit_price` * \nCASE WHEN DOMO_BEAST_MODE(2530) = 'lb' THEN 2.3 else 2.9 end", 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`quantity_sold`', 'columnPosition': 0}, {'columnName': '`unit_price`', 'columnPosition': 18}]}, 'calculation_2c68accf-d899-43e4-afca-9db6cfc65471': {'templateId': 799, 'id': 'calculation_2c68accf-d899-43e4-afca-9db6cfc65471', 'name': 'Wholesale Profit', 'formula': 'SUM(`current_wholesale_price`) - SUM(`current_cost`)', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`current_wholesale_price`', 'columnPosition': 4}, {'columnName': '`current_cost`', 'columnPosition': 37}]}, 'calculation_3715c792-0de0-4f18-941e-03ddf0280253': {'templateId': 2534, 'id': 'calculation_3715c792-0de0-4f18-941e-03ddf0280253', 'name': 'Dates', 'formula': "CASE DOMO_BEAST_MODE(2533)\nWHEN 'Months' THEN `Month_Name`\nWHEN 'Quarters' THEN `Quarter_Name`\nELSE `Year_ID`\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`Month_Name`', 'columnPosition': 46}, {'columnName': '`Quarter_Name`', 'columnPosition': 80}, {'columnName': '`Year_ID`', 'columnPosition': 100}]}, 'calculation_910395bf-a1d1-4ab7-a69c-d9aca58e1bc5': {'templateId': 2529, 'id': 'calculation_910395bf-a1d1-4ab7-a69c-d9aca58e1bc5', 'name': 'PG BM', 'formula': "CASE\nWHEN DOMO_BEAST_MODE(2528) = 'Product' THEN `product`\nWHEN DOMO_BEAST_MODE(2528) = 'Product Group' THEN `product_group`\n\nEND", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`product`', 'columnPosition': 49}, {'columnName': '`product_group`', 'columnPosition': 109}]}, 'calculation_5188cba2-d192-4bdd-bcc8-43f99a9aec6f': {'templateId': 2526, 'id': 'calculation_5188cba2-d192-4bdd-bcc8-43f99a9aec6f', 'name': 'Overall', 'formula': 'SUM(SUM(`unit_price`)) OVER ()', 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`unit_price`', 'columnPosition': 8}]}, 'calculation_185dea03-8cdc-4b03-b783-aac67e10d40a': {'templateId': 2539, 'id': 'calculation_185dea03-8cdc-4b03-b783-aac67e10d40a', 'name': 'Product Details', 'formula': 'CONCAT(\'&lt;div&gt;&lt;a href="https://domo-dojo.domo.com/page/1099148856?pfilters=[{"column":"product_group","operand":"IN","values":"Food"}]" target="_blank"&gt;\',\'Product Details\',\'&lt;/a&gt;&lt;/div&gt;\')', 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False}, 'calculation_70ace6e1-09cc-4e33-9fdc-2f4d1304478a': {'templateId': 800, 'id': 'calculation_70ace6e1-09cc-4e33-9fdc-2f4d1304478a', 'name': 'Customer Distinct', 'formula': 'COUNT(DISTINCT `customer_id`)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`customer_id`', 'columnPosition': 15}]}, 'calculation_5ffde809-7879-41cd-952d-d6e521d53c19': {'templateId': 801, 'id': 'calculation_5ffde809-7879-41cd-952d-d6e521d53c19', 'name': 'Distinct Staff', 'formula': 'COUNT(DISTINCT `staff_id`)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`staff_id`', 'columnPosition': 15}]}, 'calculation_7702d51a-e0d1-40a5-84d0-9026138bd0ef': {'templateId': 797, 'id': 'calculation_7702d51a-e0d1-40a5-84d0-9026138bd0ef', 'name': 'Customer Age', 'formula': 'YEAR(CURRENT_DATE()) - `birth_year`', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`birth_year`', 'columnPosition': 23}]}, 'calculation_f24adf9e-3609-40d7-9c23-9db05c9228ed': {'templateId': 2532, 'id': 'calculation_f24adf9e-3609-40d7-9c23-9db05c9228ed', 'name': 'CAGR', 'formula': "SUM(CASE\n\tWHEN YEAR(`transaction_date`) = 2019 THEN `unit_price` ELSE 0\nEND)\n/\nSUM(\n  CASE WHEN DOMO_BEAST_MODE(2531) = '1 Year' THEN \n  CASE\n\tWHEN YEAR(`transaction_date`) = 2018 THEN `unit_price` ELSE 0\nEND\n  ELSE\n  CASE\n\tWHEN YEAR(`transaction_date`) = 2017 THEN `unit_price` ELSE 0\nEND\nEND  \n  )", 'status': 'VALID', 'dataType': 'DOUBLE', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`transaction_date`', 'columnPosition': 20}, {'columnName': '`unit_price`', 'columnPosition': 52}, {'columnName': '`transaction_date`', 'columnPosition': 153}, {'columnName': '`unit_price`', 'columnPosition': 185}, {'columnName': '`transaction_date`', 'columnPosition': 234}, {'columnName': '`unit_price`', 'columnPosition': 266}]}, 'calculation_f9e5a7ed-1c64-440b-b3a3-6dacb49db136': {'templateId': 803, 'id': 'calculation_f9e5a7ed-1c64-440b-b3a3-6dacb49db136', 'name': 'Weekday', 'formula': "(CASE \tWHEN  DAYOFWEEK(`transaction_date`) = 1 THEN 'SUNDAY'\n \t  \tWHEN  DAYOFWEEK(`transaction_date`) = 2 THEN 'MONDAY'\n \t\tWHEN  DAYOFWEEK(`transaction_date`) = 3 THEN 'TUESDAY'\n \t\tWHEN  DAYOFWEEK(`transaction_date`) = 4 THEN 'WEDNESDAY'\n \t\tWHEN  DAYOFWEEK(`transaction_date`) = 5 THEN 'THURSDAY'\n \t\tWHEN  DAYOFWEEK(`transaction_date`) = 6 THEN 'FRIDAY'\n \t\tELSE 'SATURDAY'\n END)", 'status': 'VALID', 'dataType': 'STRING', 'persistedOnDataSource': True, 'isAggregatable': False, 'bignumber': False, 'columnPositions': [{'columnName': '`transaction_date`', 'columnPosition': 23}, {'columnName': '`transaction_date`', 'columnPosition': 82}, {'columnName': '`transaction_date`', 'columnPosition': 139}, {'columnName': '`transaction_date`', 'columnPosition': 197}, {'columnName': '`transaction_date`', 'columnPosition': 257}, {'columnName': '`transaction_date`', 'columnPosition': 316}]}, 'calculation_c78f6bb0-b99f-4e6e-b2f6-0b19fdd00b6d': {'templateId': 802, 'id': 'calculation_c78f6bb0-b99f-4e6e-b2f6-0b19fdd00b6d', 'name': 'Distinct Store', 'formula': 'COUNT(DISTINCT `store_id`)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': '`store_id`', 'columnPosition': 15}]}}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=['file-upload-new', 's_file-upload-new'])),
 DomoDataset(id='04c1574e-c8be-4721-9846-c6ffa491144b', display_type='domo-jupyterdata', data_provider_type='domo-jupyterdata', name='domo_kbs', description=None, row_count=1185, column_count=7, stream_id=825, owner={'id': '1893952720', 'name': 'Jae Wilson1', 'type': 'USER', 'group': False}, formula={'calculation_ca9d4b1c-f73a-4f76-9f94-d3c4ca6871c5': {'templateId': 2664, 'id': 'calculation_ca9d4b1c-f73a-4f76-9f94-d3c4ca6871c5', 'name': 'rowcount', 'formula': 'sum(1)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False}, 'calculation_38846559-d190-4ab1-809b-bcd361db5670': {'templateId': 2665, 'id': 'calculation_38846559-d190-4ab1-809b-bcd361db5670', 'name': 'max_views', 'formula': 'max(views)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False, 'columnPositions': [{'columnName': 'views', 'columnPosition': 4}]}}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=['developer_documentation', 'hackercore'])),
 DomoDataset(id='a71706b3-36e7-4d00-ba78-cb5728949d39', display_type='DataFlow', data_provider_type=None, name='BeastModesGovernance_02_ChangeReport', description=None, row_count=2477, column_count=11, stream_id=None, owner={'id': '1893952720', 'name': 'Jae Wilson1', 'type': 'USER', 'group': False}, formula={'calculation_88283a00-ab54-4419-936a-63e0cdb28f6b': {'templateId': 2663, 'id': 'calculation_88283a00-ab54-4419-936a-63e0cdb28f6b', 'name': 'rowcount', 'formula': 'sum(1)', 'status': 'VALID', 'dataType': 'LONG', 'persistedOnDataSource': True, 'isAggregatable': True, 'bignumber': False}}, schema=DomoDataset_Schema(dataset=..., columns=[]), tags=DomoDataset_Tags(dataset=..., tag_ls=[]))]</code></pre>
</div>
</div>
<div id="cell-6" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataset <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmd</span>
<span id="cb4-2"></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_ds(</span>
<span id="cb4-5">    domo_dataset: dmd.DomoDataset,</span>
<span id="cb4-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dictionary where each attribute except _id and _ds_name becomes a tag</span></span>
<span id="cb4-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    receives DomoDataset object, and then generates an object with attributes that will become tags.</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    every organization will have different naming conventions and therefore must generate different rules for how tags can be exctracted from the Domo Dataset object.</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-11"></span>
<span id="cb4-12">    proj_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataset.name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-13">    proj_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proj_str[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb4-14">    proj_phase <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proj_str[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb4-15"></span>
<span id="cb4-16">    _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataset.name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb4-17"></span>
<span id="cb4-18">    ds_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" *"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb4-19"></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {</span>
<span id="cb4-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_id"</span>: domo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb4-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_ds_name"</span>: domo_dataset.name,</span>
<span id="cb4-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"provider_type"</span>: domo_dataset.display_type <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> domo_dataset.data_provider_type,</span>
<span id="cb4-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proj_name"</span>: proj_name,</span>
<span id="cb4-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proj_phase"</span>: proj_phase,</span>
<span id="cb4-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ds_type"</span>: ds_type,</span>
<span id="cb4-27">    }</span></code></pre></div>
</div>
<div id="cell-7" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for this project we assume any dataset that ends with * has been validated as adhering to the naming convention format.</span></span>
<span id="cb5-4">dataset_tags_to_update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb5-5">    process_ds(domo_dataset)</span>
<span id="cb5-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> domo_dataset <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_datasets</span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> domo_dataset.name.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>)</span>
<span id="cb5-8">]</span>
<span id="cb5-9"></span>
<span id="cb5-10">pd.DataFrame(dataset_tags_to_update)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">_id</th>
<th data-quarto-table-cell-role="th">_ds_name</th>
<th data-quarto-table-cell-role="th">provider_type</th>
<th data-quarto-table-cell-role="th">proj_name</th>
<th data-quarto-table-cell-role="th">proj_phase</th>
<th data-quarto-table-cell-role="th">ds_type</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>da552832-c04d-46ac-936a-f982d9d3f2e6</td>
<td>SalesProject01_hello world_INT *</td>
<td>api</td>
<td>SalesProject</td>
<td>01</td>
<td>INT</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>063dd227-2a2d-4563-a372-6d08c950e86d</td>
<td>SalesProject02_summary_by_month_DASH *</td>
<td>api</td>
<td>SalesProject</td>
<td>02</td>
<td>DASH</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>6114155e-e6a5-4c9c-bec0-5f0b8e807579</td>
<td>SalesProject01_hello world3_INT *</td>
<td>api</td>
<td>SalesProject</td>
<td>01</td>
<td>INT</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>e5f44d26-4028-4282-88a9-239a0f909373</td>
<td>SalesProject02_summary_by_day_DASH *</td>
<td>api</td>
<td>SalesProject</td>
<td>02</td>
<td>DASH</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
<div id="cell-8" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_tags(tag_dict):</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    simple utility function to collapse key/value pairs into a string</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tags generated by this process will be suffixed with an *</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">    tag_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-8">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tag_dict[key]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> *"</span></span>
<span id="cb6-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tag_dict.keys()</span>
<span id="cb6-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> key.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb6-11">    ]</span>
<span id="cb6-12"></span>
<span id="cb6-13">    info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb6-14">        key.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>): tag_dict[key]</span>
<span id="cb6-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tag_dict.keys()</span>
<span id="cb6-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> key.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb6-17">    }</span>
<span id="cb6-18"></span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tag_ls"</span>: tag_ls, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>info}</span></code></pre></div>
</div>
<div id="cell-9" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for each dataset to update, tag_ls contains the list of tags that will be added.</span></span>
<span id="cb7-4">dataset_tags_for_api <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [generate_tags(tag_dict) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tag_dict <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataset_tags_to_update]</span>
<span id="cb7-5"></span>
<span id="cb7-6">pprint(dataset_tags_for_api)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[{'dsname': 'SalesProject01_hello world_INT *',
  'id': 'da552832-c04d-46ac-936a-f982d9d3f2e6',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 01 *',
             'ds_type : INT *']},
 {'dsname': 'SalesProject02_summary_by_month_DASH *',
  'id': '063dd227-2a2d-4563-a372-6d08c950e86d',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 02 *',
             'ds_type : DASH *']},
 {'dsname': 'SalesProject01_hello world3_INT *',
  'id': '6114155e-e6a5-4c9c-bec0-5f0b8e807579',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 01 *',
             'ds_type : INT *']},
 {'dsname': 'SalesProject02_summary_by_day_DASH *',
  'id': 'e5f44d26-4028-4282-88a9-239a0f909373',
  'tag_ls': ['provider_type : api *',
             'proj_name : SalesProject *',
             'proj_phase : 02 *',
             'ds_type : DASH *']}]</code></pre>
</div>
</div>
<div id="cell-10" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataset <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmd</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb9-3"></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_dataset_tags(dataset_id, tag_ls: [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>], auth: dmda.DomoAuth):</span>
<span id="cb9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    function to actually update domo dataset entities.</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tags previously added by this process (denoted with the * suffix) will be removed</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-10"></span>
<span id="cb9-11">    domo_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmd.DomoDataset.get_from_id(dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb9-12"></span>
<span id="cb9-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove old tags</span></span>
<span id="cb9-14">    remove_tag_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [tag <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tag <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_dataset.tags.tag_ls <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tag.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" *"</span>)]</span>
<span id="cb9-15"></span>
<span id="cb9-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(remove_tag_ls) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb9-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataset.tags.remove(remove_tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>remove_tag_ls)</span>
<span id="cb9-18"></span>
<span id="cb9-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add new tags</span></span>
<span id="cb9-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_dataset.tags.add(add_tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tag_ls)</span>
<span id="cb9-21"></span>
<span id="cb9-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {</span>
<span id="cb9-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>: domo_dataset.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb9-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: domo_dataset.name,</span>
<span id="cb9-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tags"</span>: domo_dataset.tags.tag_ls,</span>
<span id="cb9-26">    }</span></code></pre></div>
</div>
<div id="cell-11" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb10-2"></span>
<span id="cb10-3">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.gather(</span>
<span id="cb10-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb10-5">        process_dataset_tags(</span>
<span id="cb10-6">            dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>), tag_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>row.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tag_ls"</span>), auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth</span>
<span id="cb10-7">        )</span>
<span id="cb10-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataset_tags_for_api</span>
<span id="cb10-9">    ]</span>
<span id="cb10-10">)</span>
<span id="cb10-11"></span>
<span id="cb10-12">pd.DataFrame(res)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">tags</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>da552832-c04d-46ac-936a-f982d9d3f2e6</td>
<td>SalesProject01_hello world_INT *</td>
<td>[provider_type : api *, proj_phase : 01 *, pro...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>063dd227-2a2d-4563-a372-6d08c950e86d</td>
<td>SalesProject02_summary_by_month_DASH *</td>
<td>[provider_type : api *, proj_phase : 02 *, ds_...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>6114155e-e6a5-4c9c-bec0-5f0b8e807579</td>
<td>SalesProject01_hello world3_INT *</td>
<td>[provider_type : api *, proj_phase : 01 *, pro...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>e5f44d26-4028-4282-88a9-239a0f909373</td>
<td>SalesProject02_summary_by_day_DASH *</td>
<td>[provider_type : api *, proj_phase : 02 *, ds_...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Tagging</category>
  <category>Governance</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-04-03_AutomatedTagging/</guid>
  <pubDate>Tue, 04 Apr 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial - Generate your Features list from the Bootstrap API</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-02-02_DojoFeatures/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<section id="configuration" class="level1">
<h1>‚öôÔ∏è Configuration</h1>
<div id="709e17e8-acea-47d1-ada9-3d68804ac547" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install --upgrade  domolibrary</span></span></code></pre></div>
</div>
<section id="auth-object" class="level2">
<h2 class="anchored" data-anchor-id="auth-object">‚öôÔ∏è Auth Object</h2>
<p>Configure a <a href="https://jaewilson07.github.io/domo_library/client/domoauth.html#domoauth"><code>DomoAuth</code></a> object that will be used to interact with <code>DomoDatasets</code></p>
<p>For this project we must use <a href="https://jaewilson07.github.io/domo_library/client/domoauth.html#domofullauth"><code>DomoFullAuth</code></a> because the bootstrap API will not accept token auth</p>
<div id="4bebda9e" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"></span>
<span id="cb2-3">DOMO_INSTANCE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb2-4">DOMO_USERNAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_USERNAME"</span>]</span>
<span id="cb2-5">DOMO_PASSWORD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>]</span>
<span id="cb2-6">FEATURES_DATASET_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"44c5af30-ea04-49e4-9d7a-529afd223590"</span></span></code></pre></div>
</div>
<div id="9658eb95-bdad-4280-b0b9-4d368ebd707b" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_auth(domo_instance, domo_username, domo_password) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> dmda.DomoAuth:</span>
<span id="cb3-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""receive auth credentials, generate and test an auth object"""</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"‚öôÔ∏è generate_auth:  retrieving config data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ‚öôÔ∏è"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9">    auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb3-10">        domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb3-11">        domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb3-12">        domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb3-13">    )</span>
<span id="cb3-14"></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># confirm we can get a valid auth token</span></span>
<span id="cb3-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> auth.get_auth_token()</span>
<span id="cb3-17"></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> auth.token:</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"üíÄ generate_auth: Error retrieving Auth Token"</span>)</span>
<span id="cb3-20"></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> auth.token:</span>
<span id="cb3-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"üåº generate_auth:  success retrieving Auth Token"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> auth</span>
<span id="cb3-25"></span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test</span></span>
<span id="cb3-28">test_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_auth(</span>
<span id="cb3-29">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_INSTANCE,</span>
<span id="cb3-30">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_PASSWORD,</span>
<span id="cb3-31">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_USERNAME,</span>
<span id="cb3-32">)</span></code></pre></div>
</div>
</section>
<section id="dataset-object" class="level2">
<h2 class="anchored" data-anchor-id="dataset-object">‚öôÔ∏è Dataset Object</h2>
<p>Configure a <a href="https://jaewilson07.github.io/domo_library/classes/domodataset.html#domodataset"><code>DomoDataset</code></a> that will receive the Bootstrap dataframe from <a href="https://jaewilson07.github.io/domo_library/classes/domobootstrap.html#domobootstrap"><code>DomoBootstrap</code></a></p>
<p>Note, the schema of the dataset must match the schema of the dataframe being uploaded or the dataset won‚Äôt index. You can alter schema using the ‚ÄúSchema Management‚Äù tool from the Domo Governance Toolkit or java cli.</p>
<div id="62093e2b-cbcb-4bdd-bba7-375fdffff7ce" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataset <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmds</span>
<span id="cb4-2"></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_dataset(dataset_id: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, auth: dmda.DomoAuth):</span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""generates a DomoDataset class object from a dataset_id"""</span></span>
<span id="cb4-6"></span>
<span id="cb4-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmds.DomoDataset.get_from_id(dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb4-8"></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test</span></span>
<span id="cb4-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_dataset(dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FEATURES_DATASET_ID, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_auth)</span></code></pre></div>
</div>
</section>
<section id="bootstrap-data" class="level2">
<h2 class="anchored" data-anchor-id="bootstrap-data">üíæ Bootstrap Data</h2>
<p>Retrieve your feature list using <code>DomoBootstrap.get_features()</code> and format it as a dataframe</p>
<div id="63182a6f-00f6-4357-9afe-6252810c8e22" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoBootstrap <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmbsr</span>
<span id="cb5-3"></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_bootstrap(auth, debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pd.DataFrame:</span>
<span id="cb5-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""generates a dataframe of bootstrap_features"""</span></span>
<span id="cb5-7"></span>
<span id="cb5-8">    domo_bsr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmbsr.DomoBootstrap(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb5-9"></span>
<span id="cb5-10">    bsr_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_bsr.get_features(debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api)</span>
<span id="cb5-11"></span>
<span id="cb5-12">    bsr_features_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(bsr_features)</span>
<span id="cb5-13">    bsr_features_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"instance"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> auth.domo_instance</span>
<span id="cb5-14"></span>
<span id="cb5-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> bsr_features_df</span>
<span id="cb5-16"></span>
<span id="cb5-17"></span>
<span id="cb5-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test</span></span>
<span id="cb5-19">upload_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_bootstrap(test_auth)</span>
<span id="cb5-20">upload_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</div>
</section>
</section>
<section id="execute-main" class="level1">
<h1>üöÄ Execute Main üöÄ</h1>
<div id="258f1e13-f358-43cb-82dc-7c5873ffc9fd" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.chunk_execution <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ce</span>
<span id="cb6-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.utils.upload_data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> upd</span>
<span id="cb6-7"></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main(debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb6-10">    script_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb6-11"></span>
<span id="cb6-12">    config_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_auth(</span>
<span id="cb6-13">        domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_INSTANCE,</span>
<span id="cb6-14">        domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_PASSWORD,</span>
<span id="cb6-15">        domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DOMO_USERNAME,</span>
<span id="cb6-16">    )</span>
<span id="cb6-17"></span>
<span id="cb6-18">    upload_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> get_bootstrap(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config_auth, debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api)</span>
<span id="cb6-19"></span>
<span id="cb6-20">    feature_ds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_dataset(</span>
<span id="cb6-21">        dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FEATURES_DATASET_ID, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config_auth</span>
<span id="cb6-22">    )</span>
<span id="cb6-23"></span>
<span id="cb6-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb6-25">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"ü•´ </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(upload_df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> rows to upload to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>feature_ds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>feature_ds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>display_url()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-26">    )</span>
<span id="cb6-27"></span>
<span id="cb6-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> feature_ds.upload_data(</span>
<span id="cb6-29">        upload_df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>upload_df,</span>
<span id="cb6-30">        partition_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config_auth.domo_instance,</span>
<span id="cb6-31">        is_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-32">        dataset_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FEATURES_DATASET_ID,</span>
<span id="cb6-33">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config_auth,</span>
<span id="cb6-34">    )</span>
<span id="cb6-35"></span>
<span id="cb6-36">    script_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb6-37">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"ü•´ done!  Took </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>script_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> script_start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span>
<span id="cb6-38"></span>
<span id="cb6-39"></span>
<span id="cb6-40"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> main(debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ü•´ done!  Took 11.374664545059204 seconds</code></pre>
</div>
</div>
</section>
<section id="results" class="level1">
<h1>Results</h1>
<div id="8bbee35c" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"display.max_rows"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb8-2">upload_df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">name</th>
<th data-quarto-table-cell-role="th">label</th>
<th data-quarto-table-cell-role="th">type</th>
<th data-quarto-table-cell-role="th">purchased</th>
<th data-quarto-table-cell-role="th">enabled</th>
<th data-quarto-table-cell-role="th">instance</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>4</td>
<td>search</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>5</td>
<td>launcher</td>
<td></td>
<td>PREMIUM</td>
<td>True</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>9</td>
<td>profile-reminder</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>17</td>
<td>enableSwapDatasource</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>19</td>
<td>up</td>
<td></td>
<td>STANDARD</td>
<td>True</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>25</td>
<td>account-management</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>66</td>
<td>advanced-scheduling</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>67</td>
<td>2factor</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>69</td>
<td>saasaas</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>1466</td>
<td>access-token</td>
<td></td>
<td>STANDARD</td>
<td>False</td>
<td>True</td>
<td>domo-community</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Instance Configuration</category>
  <category>Domo Features</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-02-02_DojoFeatures/</guid>
  <pubDate>Thu, 02 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial - Extract SQL from a Dataflow</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-02-02_DojoSQL/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<section id="configuration" class="level1">
<h1>‚öôÔ∏è Configuration</h1>
<div id="709e17e8-acea-47d1-ada9-3d68804ac547" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install --upgrade  domolibrary</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install sqlparse</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install sql-metadata</span></span></code></pre></div>
</div>
<section id="auth-object" class="level2">
<h2 class="anchored" data-anchor-id="auth-object">‚öôÔ∏è Auth Object</h2>
<p>Configure a <a href="https://jaewilson07.github.io/domo_library/client/domoauth.html#domoauth"><code>DomoAuth</code></a> object that will be used to interact with <code>DomoDatasets</code></p>
<p>For this project we must use <a href="https://jaewilson07.github.io/domo_library/client/domoauth.html#domofullauth"><code>DomoFullAuth</code></a> because the bootstrap API will not accept token auth</p>
<div id="4bebda9e" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"></span>
<span id="cb2-3">domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span></span>
<span id="cb2-4">domo_username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_USERNAME"</span>]</span>
<span id="cb2-5">domo_password <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOJO_PASSWORD"</span>]</span>
<span id="cb2-6">sql_dataflow_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span></span></code></pre></div>
</div>
<div id="9658eb95-bdad-4280-b0b9-4d368ebd707b" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_auth(domo_instance, domo_username, domo_password) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> dmda.DomoAuth:</span>
<span id="cb3-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""receive auth credentials, generate and test an auth object"""</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"‚öôÔ∏è generate_auth:  retrieving config data from </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>domo_instance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ‚öôÔ∏è"</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9">    auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoFullAuth(</span>
<span id="cb3-10">        domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb3-11">        domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb3-12">        domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb3-13">    )</span>
<span id="cb3-14"></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># confirm we can get a valid auth token</span></span>
<span id="cb3-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> auth.get_auth_token()</span>
<span id="cb3-17"></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> auth.token:</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"üíÄ generate_auth: Error retrieving Auth Token"</span>)</span>
<span id="cb3-20"></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> auth.token:</span>
<span id="cb3-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"üåº generate_auth:  success retrieving Auth Token"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> auth</span>
<span id="cb3-25"></span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test</span></span>
<span id="cb3-28">test_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_auth(</span>
<span id="cb3-29">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_instance,</span>
<span id="cb3-30">    domo_password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_password,</span>
<span id="cb3-31">    domo_username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_username,</span>
<span id="cb3-32">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>‚öôÔ∏è generate_auth:  retrieving config data from domo-community ‚öôÔ∏è
üåº generate_auth:  success retrieving Auth Token</code></pre>
</div>
</div>
</section>
<section id="dataflow-object" class="level2">
<h2 class="anchored" data-anchor-id="dataflow-object">‚öôÔ∏è Dataflow Object</h2>
<p>Configure a <a href="https://jaewilson07.github.io/domo_library/classes/domodataflow.html#domodataflow"><code>DomoDataflow</code></a></p>
<div id="62093e2b-cbcb-4bdd-bba7-375fdffff7ce" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoDataflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmdf</span>
<span id="cb5-2"></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_dataflow(dataflow_id: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, auth: dmda.DomoAuth):</span>
<span id="cb5-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""generates a DomoDataset class object from a dataset_id"""</span></span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmdf.DomoDataflow.get_from_id(dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataflow_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb5-8"></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test</span></span>
<span id="cb5-11">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> generate_dataflow(dataflow_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sql_dataflow_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_auth)</span></code></pre></div>
</div>
</section>
<section id="process-actions" class="level2">
<h2 class="anchored" data-anchor-id="process-actions">üíæ Process Actions</h2>
<p><a href="https://jaewilson07.github.io/domo_library/classes/domodataflow_action.html#domodataflow_action"><code>DomoDataflow_Action</code></a> definitions are embeded in the <code>DomoDataflow.actions</code> property.</p>
<p>The <a href="https://jaewilson07.github.io/domo_library/classes/domodataflow_action.html#domodataflow_action"><code>DomoDataflow_Action</code></a> class only captures a portion of the available properties across all the different action types, so this can be extended as needed.</p>
<p>SQL statements are captured in <code>DomoDataflow_Action.sql</code> and can therefore be parsed or reformatted for presentation in other documentation tools. In the example below we use the [sqlparse(https://github.com/andialbrecht/sqlparse]) and [sql_metadata(https://github.com/macbre/sql-metadata)] library to parse and present a dataflow.</p>
<div id="63182a6f-00f6-4357-9afe-6252810c8e22" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sqlparse</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sql_metadata <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sqlmd</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoBootstrap <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmbsr</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb6-5"></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_actions(domo_dataflow: dmdf.DomoDataflow, debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb6-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""exctract SQL from actions"""</span></span>
<span id="cb6-9"></span>
<span id="cb6-10">    domo_actions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> domo_dataflow.actions</span>
<span id="cb6-11"></span>
<span id="cb6-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> domo_actions:</span>
<span id="cb6-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span></span>
<span id="cb6-14"></span>
<span id="cb6-15">    clean_sql <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-16"></span>
<span id="cb6-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> action <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> domo_actions:</span>
<span id="cb6-18">        sql <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> action.sql</span>
<span id="cb6-19"></span>
<span id="cb6-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not all domo actions will contain sql.</span></span>
<span id="cb6-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> sql:</span>
<span id="cb6-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb6-23"></span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alter according to your needs</span></span>
<span id="cb6-25">        clean_sql.append(</span>
<span id="cb6-26">            {</span>
<span id="cb6-27">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transform_sql"</span>: sqlparse.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(</span>
<span id="cb6-28">                    sql, reindent_aligned<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, keyword_case<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper"</span></span>
<span id="cb6-29">                ),</span>
<span id="cb6-30">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"referenced_tables"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>.join(sqlmd.Parser(sql).tables),</span>
<span id="cb6-31">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target_table"</span>: action.name,</span>
<span id="cb6-32">            }</span>
<span id="cb6-33">        )</span>
<span id="cb6-34"></span>
<span id="cb6-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> clean_sql</span>
<span id="cb6-36"></span>
<span id="cb6-37"></span>
<span id="cb6-38">res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_actions(domo_dataflow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df)</span>
<span id="cb6-39">pprint(res)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[{'referenced_tables': 'domostats_people',
  'target_table': 't_1',
  'transform_sql': 'SELECT `Display Name`,\n'
                   '       `User ID` , @row := @row+1 AS id , @isReset := CASE '
                   'WHEN @iter = @rowCounter THEN 1\n'
                   '            ELSE 0\n'
                   '             END isReset , @group := @isReset + @group AS '
                   'rowGroup , @iter := CASE WHEN @isReset = 1 THEN 1\n'
                   '            ELSE @iter + 1\n'
                   '             END iter , @rowCounter := CASE WHEN @isReset '
                   '= 1 THEN FLOOR(RAND() * (7-3) + 3)\n'
                   '            ELSE @rowCounter\n'
                   '             END numChildren\n'
                   '  FROM `domostats_people` p ,\n'
                   '       (\n'
                   '        SELECT @row:= 0,@rowCounter:= 1, @iter := 1, '
                   '@isReset := 0 , @group := 0\n'
                   '       ) r'},
 {'referenced_tables': 't_1',
  'target_table': 'reportsto',
  'transform_sql': 'SELECT b.`User ID` AS userID,\n'
                   "       'reportsTo' AS Action,\n"
                   '       a.`User ID` AS bodyID\n'
                   '  FROM t_1 a\n'
                   '  JOIN t_1 b\n'
                   '    ON a.id = b.`rowGroup`\n'
                   ' WHERE a.`User ID` &lt;&gt; b.`User ID`\n'
                   ' UNION SELECT b.`User ID` AS userID,\n'
                   "       'directReports' AS Action,\n"
                   '       a.`User ID` AS bodyID\n'
                   '  FROM t_1 a\n'
                   '  JOIN t_1 b\n'
                   '    ON b.id = a.`rowGroup`\n'
                   ' WHERE a.`User ID` &lt;&gt; b.`User ID`'},
 {'referenced_tables': 'reportsto',
  'target_table': 'domoStats_people_reports',
  'transform_sql': 'SELECT *\n  FROM `reportsto`'}]</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>Instance Configuration</category>
  <category>Dataflow</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-02-02_DojoSQL/</guid>
  <pubDate>Thu, 02 Feb 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Domo Distribution and Governance Strategy across Instances</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24-Domo_Everywhere_MultiInstance/</link>
  <description><![CDATA[ 




<p>This is a framework for managing data distribution within an organization that has several departments using standalone instances of domo.</p>
<p>domo-accounting.domo.com</p>
<p>domo-sales.domo.com</p>
<p>domo-marketing.domo.com</p>
<p>domo-engineering.domo.com</p>
<p>There are several highly bespoke datastores that provide high value data to different departments, they‚Äôll have their own instances of domo too.</p>
<p>domo-aa.domo.com</p>
<p>domo-sfdc.domo.com</p>
<p>domo-snowflake.domo.com</p>
<p>We need a single place where users can find trusted dashboards builton a consistent and validated data pipeline that will consume input datasets from different departments or a chain of transformed datasets.</p>
<p>Ex. The executive dashboard gets prepared by domo-engineering but consumes data from accounting, sales, and marketing.</p>
<section id="types-of-datasets-and-which-ones-we-publish" class="level2">
<h2 class="anchored" data-anchor-id="types-of-datasets-and-which-ones-we-publish">4 Types of Datasets and Which ones we Publish</h2>
</section>
<section id="non-publishable-datasets" class="level2">
<h2 class="anchored" data-anchor-id="non-publishable-datasets">Non-publishable Datasets</h2>
<p>Avoid publishing datasets that require additional lookups or external data to understand.</p>
<ol type="1">
<li><h3 id="raw-datasets" class="anchored">Raw Datasets</h3></li>
</ol>
<ul>
<li>Come straight from the source system.</li>
<li>Minimize ETL during Ingest.</li>
</ul>
<ol start="2" type="1">
<li><h3 id="staging-dataset-int" class="anchored">Staging Dataset (INT)</h3></li>
</ol>
<ul>
<li><p>Exist exclusively in Department or Clearinghouse instances.</p></li>
<li><p>Represent intermediate steps required to transform a dataset into a usable shape.</p></li>
<li><p>This will include dimension tables that are not golden records</p></li>
</ul>
</section>
<section id="publishable-datasets" class="level2">
<h2 class="anchored" data-anchor-id="publishable-datasets">Publishable Datasets</h2>
<p>We promote the publishing of datasets that can stand on their own and do not require additional context to understand.</p>
<ol start="3" type="1">
<li><h3 id="data-warehouse-dwh" class="anchored">Data Warehouse (DWH)</h3></li>
</ol>
<ul>
<li>The building blocks (inputs) to DASH datasets</li>
</ul>
<p>ither facts or dimensional tables that have NOT been shaped for a specific analytic use case.</p>
<ul>
<li><p>Do not publish cards or dashboards built on DWH datasets.</p></li>
<li><p>Fact tables can take the form of transactional, accumulating snapshot, periodic balance.</p></li>
<li><p>Period and accumulating snapshots should be avoided unless there‚Äôs a tradeoff for data volume optimization OR rigid reporting requirements where taking snapshots make sense (ex. Financial reporting)</p></li>
<li><p>DWH datasets will be fact tables representing a single fact type (ex. Sales, Sales Forecast or Inventory), joined with the minimum dimensional attributes to be useful in a stand-alone setting.</p></li>
<li><p>Avoid subsetting similar datasets (ex. Inventory 2019 vs Inventory 2022)</p></li>
<li><p>DWH datasets&nbsp;includes conformed dimensional tables (like a Calendar Dimension with FY attributes or golden record customer master)</p></li>
</ul>
<ol start="4" type="1">
<li><h3 id="dashboard-dataset-dash" class="anchored">Dashboard Dataset (DASH)</h3></li>
</ol>
<ul>
<li><p>Represent stand-alone datasets that dashboards and cards are built against.</p></li>
<li><p>Publishable only to distribution centers.</p></li>
<li><p>Typically will combine multiple DWH fact tables and conformed dimensions.</p></li>
<li><p>Datasets shaped for analysis (PIVOT or UNPIVOT metrics, or POP (CY vs PY etc. are classified as DASH datasets).</p></li>
<li><p>Do not conduct ETL on DASH datasets</p></li>
</ul>
<hr>
</section>
<section id="types-of-instances" class="level1">
<h1>3 Types of Instances</h1>
<ol type="1">
<li><h2 id="data-clearinghouse" class="anchored" data-anchor-id="types-of-instances">Data Clearinghouse</h2></li>
</ol>
<p>A domo instance for a specific type of data or data from a highly bespoke functional area or dataset that must be managed very closely. &nbsp;This data will tend to be high volume and require domain expertise to manage.</p>
<p>Clearinghouses are exclusively data prep and management focused, so should house RAW, INT or DWH datasets.</p>
<ul>
<li>No project or data pipelines should be assembled here ‚Äì and by extension no DASH datasets. &nbsp;Those should be handled in a Department instance.</li>
</ul>
<ol start="2" type="1">
<li><h2 id="department" class="anchored">Department</h2></li>
</ol>
<p>An instance where projects are implemented.</p>
<p>Datasources can be RAW or subscriptions of DWH datasets from another department.</p>
<ul>
<li>We do not publish DASH datasets between departments</li>
</ul>
<p>Every dataset should terminate as a DWH or DASH dataset.</p>
<ul>
<li>Only DASH datasets can be published to a Distribution Center</li>
<li>Only DWH datasets can be published to other departments.</li>
</ul>
<ol start="3" type="1">
<li><h2 id="distribution-center" class="anchored">Distribution Center</h2></li>
</ol>
<p>An instance that hosts certified dashboards and datasets (DASH)</p>
<p>There can be a public datacenter and a private datacenter for highly sensitive dashboards.</p>
<p>To prevent data manipulation in the distribution center, DataCenter along with any form of ETL access or content manipulation is disabled (no Participants or Editor rights).</p>
<ul>
<li>The instance can only receive datasets shared via Publish / Subscriber.</li>
</ul>
<section id="responsibility-for-governance" class="level3">
<h3 class="anchored" data-anchor-id="responsibility-for-governance">Responsibility for Governance</h3>
<p>Public and private distribution centers are differentiated by who owns responsibility for governance ‚Äì the publisher versus central BI.</p>
</section>
<section id="public-distribution-center" class="level3">
<h3 class="anchored" data-anchor-id="public-distribution-center">Public Distribution Center&nbsp;</h3>
<p>Subscriber jobs INTO the public DC must be managed by the departmental data owners</p>
<ul>
<li>We only publish DASH datasets into the public DC</li>
</ul>
<p>Content sharing is managed by the dashboard publisher (using groups).</p>
<ul>
<li>By default PDP is NOT enabled on any dataset.</li>
</ul>
</section>
<section id="private-distribution-center" class="level3">
<h3 class="anchored" data-anchor-id="private-distribution-center">Private Distribution Center</h3>
<p>Subscriber jobs INTO the private DC must be managed by Central BI</p>
<p>All content sharing is managed by central BI ‚Äì instance admins.</p>
<ul>
<li>By default PDP is enabled on all datasets that enter the distribution center.</li>
</ul>
</section>
</section>
<section id="sample-use-cases" class="level1">
<h1>Sample Use Cases</h1>
<section id="engineering-produces-a-dashboard" class="level2">
<h2 class="anchored" data-anchor-id="engineering-produces-a-dashboard">1. Engineering produces a dashboard</h2>
<p>Engineering owns ‚Äúdatabase_monitoring‚Äù (dbm) and publishes a dashboard to the PDC (public distribution center)</p>
<ul>
<li>DATASOURCE via raw - dbm_RAW</li>
<li>ETL to produce dbm_DWH and dbm_DASH</li>
<li>DISTRIBUTE via publish to PDC (dbm_DASH)</li>
</ul>
</section>
<section id="infosec-augments-engineerings-dashboard" class="level2">
<h2 class="anchored" data-anchor-id="infosec-augments-engineerings-dashboard">2. Infosec augments Engineering‚Äôs dashboard</h2>
<p>Infosec wants to augment database_monitoring (dbm) published by Engineering and publish it as a new asset in PDC (public distribution center)</p>
<ul>
<li><p>DATASOURCES</p></li>
<li><p>via subscription from engineering (dbm_DWH)</p></li>
<li><p>Because we do not do publish DASH between departmental instances</p></li>
<li><p>RAW data from internal sources</p></li>
<li><p>ETL produces infosec_DWH and infosec_DASH</p></li>
<li><p>DISTRIBUTE via publish to PDC (infosec_DASH)</p></li>
</ul>
</section>
<section id="secops-chooses-the-most-downstream-branch" class="level2">
<h2 class="anchored" data-anchor-id="secops-chooses-the-most-downstream-branch">3. SecOps chooses the most downstream branch</h2>
<p>Security Operations wants to augment the work from Infosec and publish it as a new asset in PDC.</p>
<ul>
<li>This introduces a 3-step ETL chain (RAW, engineering (dbm_DWH), or infosec (infosec_DWH) that SecOps must choose where to branch from.</li>
</ul>
<p>Publish / Subscriber requests should be configured from the most downstream certified data owner ‚Äì in this case infosec.</p>
<ul>
<li>If an update is made to how engineering handles database_monitoring, this ensures the update is passed to infosec. If infosec updates their ornamentation, that update passes down to SecOps and anyone who has branched off of it.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Domo Everywhere</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24-Domo_Everywhere_MultiInstance/</guid>
  <pubDate>Tue, 24 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Domo Onboarding</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24_Domo_Onboarding/</link>
  <description><![CDATA[ 




<p>This document describes the best practices for beginner Domo users. There are different personas use cases covered in this document:</p>
<ul>
<li>Data Engineer</li>
<li>Product Stakeholder</li>
<li>Data Consumer</li>
<li>Visualization engineer</li>
<li>Support engineer</li>
</ul>
<p>üñäÔ∏è this is a working document (ish). &nbsp;Leave comments if specific content doesn‚Äôt make sense or you need more information.</p>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p>This document contains a set of recommendations which will help end users:</p>
<ul>
<li>Optimize the development process</li>
<li>Reduce development efforts</li>
<li>Be integrated into SIE process</li>
<li>Understand how to improve the content searchability and accessibility</li>
<li>Understand Domo tooling that can lead to improved customer satisfaction and engagement.</li>
</ul>
</section>
<section id="relevant-links" class="level2">
<h2 class="anchored" data-anchor-id="relevant-links">Relevant Links</h2>
<p><a href="https://www.domo.com/product/new-features#/">New Features</a></p>
<p><a href="https://domohelp.domo.com/hc/en-us/articles/360042936114-Current-Release-Notes">Current Release Notes</a></p>
<p>üßµ Domo Training <a href="https://sie.slack.com/archives/C03QE172D33">Slack Channel</a></p>
<hr>
</section>
<section id="basic-terms-from-immersion-training" class="level1">
<h1>üóÇÔ∏èBasic Terms from Immersion Training</h1>
<section id="core-domo-terms" class="level2">
<h2 class="anchored" data-anchor-id="core-domo-terms">Core Domo Terms</h2>
<ul>
<li><p>DataSet: In Domo, a DataSet is a single flat table of data consisting of columns and rows.</p></li>
<li><p>Datasets are stored as flat files in ‚ÄúVault‚Äù (Amazon S3) before getting loaded into ‚ÄúAdrenaline‚Äù (parallel distributed database layer)</p></li>
<li><p>DataFlow: a job in the Domo Data Center that makes transformations (e.g.&nbsp;joins, edits, calculations, etc.) to existing DataSets inside of Domo.</p></li>
<li><p>The output of a DataFlow is a new dataset (flat file) stored in Vault.</p></li>
<li><p>Analyzer: we design a Card in the Analyzer. The Analyzer is where we create and edit the card.<br>
Ôªø</p></li>
<li><p>Card: synonymous with ‚Äúchart‚Äù, ‚Äúgraph‚Äù, or ‚Äúplot‚Äù</p></li>
<li><p>Understanding Cards <a href="https://domohelp.domo.com/hc/en-us/articles/360043428573-Understanding-Cards">KB link</a></p></li>
<li><p>Each card gets reduced to a SQL Query against the underlying dataset<br>
Ôªø</p></li>
<li><p>Dashboard/Page: a group of cards Ôªø</p></li>
<li><p>Managing Cards and Dashboards <a href="https://domohelp.domo.com/hc/en-us/sections/360007295674-Card-and-Dashboard-Management">KB Link</a></p></li>
</ul>
</section>
<section id="unofficial-terms-scotts-terms" class="level2">
<h2 class="anchored" data-anchor-id="unofficial-terms-scotts-terms">Unofficial Terms / ‚ÄúScott‚Äôs Terms‚Äù</h2>
<ul>
<li><p>Wall: a term to represent Pages in Domo (e.g.&nbsp;‚ÄúI can see a bunch of different walls in Domo‚Äù)</p></li>
<li><p>Pretty Picture: a term to represent Cards in Domo (e.g.&nbsp;I can see a bunch of pretty pictures hanging on a wall in Domo‚Äù)</p></li>
<li><p>Shell: A Card is like a Shell - we design the Shell in the Analyzer and the data from the chosen DataSet flows in the Shell and is displayed according to the Shell parameters (i.e.&nbsp;filters, time frame, etc.)</p></li>
</ul>
</section>
<section id="business-terms" class="level2">
<h2 class="anchored" data-anchor-id="business-terms">‚ÄúBusiness‚Äù Terms</h2>
<ul>
<li><p>Charts, graphs: Any sort of graphic to visualize data</p></li>
<li><p>Dashboards: A collection of key business indicators organized and arranged on a single page</p></li>
</ul>
</section>
</section>
<section id="working-with-datasets" class="level1">
<h1>üóÇÔ∏è Working with Datasets</h1>
<section id="jae-recommendations" class="level2">
<h2 class="anchored" data-anchor-id="jae-recommendations">Jae Recommendations</h2>
<section id="recommended-naming-conventions-for-datasetsdataflows" class="level3">
<h3 class="anchored" data-anchor-id="recommended-naming-conventions-for-datasetsdataflows">Recommended naming conventions for datasets/dataflows</h3>
<p>Use snake_case as it is easier to read.</p>
<p>Ex. MYPROJ_01_historisation_v1_PROD</p>
<p><project code="">_&lt;STAGE_ 1/2/X&gt;_<description>_&lt;Version 1/2/X&gt;_<dev uat="" prod=""></dev></description></project></p>
<p>Naming conventions allow the DSO team to track your utilization as well as facilitate data categorization.</p>
<ul>
<li>The status of this dataset/dataflow. Also if you would like to create a copy and work on parallel development you just need to change the prefix to DEV and work on it.</li>
<li>Project Code should be unique and will help us to monitor the rows allocation per project per instance</li>
<li>Stage allows you better to define the data lineage and identify dependencies</li>
<li>Description provides more information about the nature of transformation or business logic</li>
<li>Versioning allows you to better manage the versioning (you might have PROD____ V1 and then you create DEV____ V2 to work on in the new version). This approach allows you to better control and separate different versions of dataflow.</li>
</ul>
</section>
<section id="account-creation-and-dataset-continuity" class="level3">
<h3 class="anchored" data-anchor-id="account-creation-and-dataset-continuity">Account Creation and Dataset Continuity</h3>
<section id="managing-accounts-dataset-credentials-when-individuals-go-on-pto-or-leave-the-company" class="level4">
<h4 class="anchored" data-anchor-id="managing-accounts-dataset-credentials-when-individuals-go-on-pto-or-leave-the-company">Managing Accounts / Dataset Credentials when individuals go on PTO or leave the Company</h4>
<p>Domo KB <a href="https://domohelp.domo.com/hc/en-us/articles/360042926054-Managing-User-Accounts-for-Connectors">Link</a></p>
<p>‚ÄúI‚Äôd like to know what is the current way we use the service account to manage connectors / credentials in Domo so that the management of those connectors can be spread across a few individuals. &nbsp;Currently, our team members are creating those connectors in their own account causing maintenance issues when those individual is on PTO or left the company.‚Äù</p>
<p>Datasets will continue executing using the stored credentials in an account object as long as the credentials are valid. &nbsp;If a user is removed from Domo, the account is not automatically assigned, admins will need the Manage All Accounts&nbsp;role Grant to administer accounts that have not explicitly been shared with them.</p>
<p>Assign Account ownership to a service account OR a Domo Group (beta)</p>
<p>Take note that there are different account sharing levels, Read, Edit, Owner etc.</p>
</section>
<section id="creating-accounts" class="level4">
<h4 class="anchored" data-anchor-id="creating-accounts">Creating Accounts</h4>
<p>Accounts are created when users enter credentials for a datasource (Adobe Analytics, Salesforce, Snowflake etc). These credentials cannot be seen in plain text anywhere in Domo but are exchanged when a connector requests access from the source system.</p>
<p>Accounts are owned by a user(s) or group.</p>
<ul>
<li>Owners can rename accounts and update the stored credentials (cycling credentials). &nbsp;</li>
<li>Users who have Read access to an account can impersonate the stored credentials and create new data extracts from the source system.</li>
</ul>
</section>
</section>
<section id="recommended-naming-conventions-for-dataset-columns" class="level3">
<h3 class="anchored" data-anchor-id="recommended-naming-conventions-for-dataset-columns">Recommended naming conventions for dataset columns</h3>
<p>We recommend using snake case (<a href="https://betterprogramming.pub/string-case-styles-camel-pascal-snake-and-kebab-case-981407998841">article</a>) for column names.</p>
</section>
<section id="recommended-tagging-structure" class="level3">
<h3 class="anchored" data-anchor-id="recommended-tagging-structure">Recommended tagging structure</h3>
<p>To facilitate dataset classification, Jae requires the use of tags. &nbsp;</p>
<p>Tags can be applied to datasets AND dataflows but they do not transfer automatically from a parent object to a child object.</p>
<section id="prefix-breakdown" class="level4">
<h4 class="anchored" data-anchor-id="prefix-breakdown">Prefix Breakdown</h4>
<p>cl_</p>
<p>Content lifecycle</p>
<p>cl_PROD</p>
<p>cl_DEV</p>
<p>cl_UAT</p>
<p>cl_ARCHIVE</p>
<p>cl_DELETE</p>
<p>pj_</p>
<p>Project</p>
<p>pj_MONIT</p>
</section>
<section id="known-project-prefixes" class="level4">
<h4 class="anchored" data-anchor-id="known-project-prefixes">Known Project Prefixes</h4>
<p>pj_MONIT</p>
<p>For instance monitoring datasets (Domo_Governance, Domo_Stats etc).</p>
</section>
</section>
<section id="etl-and-data-pipeline-development" class="level3">
<h3 class="anchored" data-anchor-id="etl-and-data-pipeline-development">ETL and Data Pipeline Development</h3>
<p><a href="https://www.youtube.com/watch?v=rS2e2_fv5yk">How to Structure your DataCenter - video</a></p>
<ul>
<li><p>Always comment you code (for MySQL/Redshift/Adrenaline flows) Each temporary table should be commented on purpose and what is the output</p></li>
<li><p>Try to use clear names for Magic tiles (instead of generated one like Select Columns 1/2/3 or Remove duplicates)</p></li>
<li><p>Use a bus matrix to organize and play your pipeline</p></li>
<li><p>Categorize datasets as Fact or Dimension (and wait till the late steps to JOIN them</p></li>
<li><p>Always apply GROUP BY or DEDUPLICATION before JOIN‚Äôing in ETL</p></li>
<li><p>Try to UNION facts. &nbsp;Do Not JOIN facts together.</p></li>
<li><p>Use the ALTER COLUMNS tile to standardize data types</p></li>
<li><p>UNION columns with an Activity_Type and Activity_Date for standard Filtering</p></li>
<li><p>Using WebForms you can join in descriptive information to augment datasets</p></li>
<li><p>Don‚Äôt filter your output datasets in ETL. Filter in Cards or a DSV used as a Semantic Layer.</p></li>
<li><p>Rationalize when it‚Äôs appropriate to write business logic into Magic (Formula tiles), webform_lookups, vs.&nbsp;Beast Modes.</p></li>
<li><p>Do not leverage DSVs for data transformation if you‚Äôre also using Magic. Try to keep all your transformation logic in the same place.</p></li>
<li><p>If you are writing the same code multiple times, find a different implementation strategy</p></li>
<li><p>during this stage of adoption (and given the small data) JUST do Magic &amp; Beast Modes. Don‚Äôt use DSVs until Users demand an intermediate semantic layer.</p></li>
</ul>
</section>
<section id="use-change-log-and-versioning" class="level3">
<h3 class="anchored" data-anchor-id="use-change-log-and-versioning">Use Change Log and Versioning</h3>
<p>Domo allows you to keep track of changes in the dataflow (all types).</p>
</section>
<section id="archiving-and-deleting-content" class="level3">
<h3 class="anchored" data-anchor-id="archiving-and-deleting-content">Archiving and Deleting Content</h3>
<p>üöÄ Deleting a dataflow does not automatically delete connected datasets.</p>
<p>To properly decommission dataflows:</p>
<ol type="1">
<li>Relabel the output datasets, DELETE_&lt;dataset_name&gt;</li>
<li>Relabel the dataflow, DELETE_&lt;dataflow_name&gt;</li>
<li>Delete dataflows and datasets</li>
</ol>
<p>There is no archive feature built into Domo. &nbsp;As a surrogate for archiving, users can</p>
<ol type="1">
<li>Disable execution of dataflows, workbench jobs, or connector datasources</li>
<li>Use Lineage to confirm datasets are not part of an operational pipeline</li>
<li>Relabel and retag assets.</li>
<li>Cards and Pages can be moved from production pages and relabeled as appropriate.</li>
</ol>
</section>
</section>
<section id="supporting-features-from-domo" class="level2">
<h2 class="anchored" data-anchor-id="supporting-features-from-domo">Supporting Features from Domo</h2>
<ul>
<li>Adrenaline Dataflows</li>
<li>Magic 2.0</li>
<li>CLI</li>
<li>Dataset Views</li>
<li>Publish</li>
<li>Certification</li>
<li>Advanced tools (Stacker, Data Assembler)</li>
</ul>
</section>
<section id="which-tool-is-the-best-for-which-use-case" class="level2">
<h2 class="anchored" data-anchor-id="which-tool-is-the-best-for-which-use-case">Which tool is the best for which use case</h2>
</section>
<section id="upsert-and-partitioning-tools" class="level2">
<h2 class="anchored" data-anchor-id="upsert-and-partitioning-tools">Upsert and Partitioning tools</h2>
<hr>
</section>
</section>
<section id="visualize" class="level1">
<h1>üóÇÔ∏è Visualize</h1>
<section id="understanding-pages-and-dashboards" class="level2">
<h2 class="anchored" data-anchor-id="understanding-pages-and-dashboards">Understanding Pages and Dashboards</h2>
<p>In addition to default system dashboards (Overview, Favorites, Shared), as well as company-defined default dashboards, users can display content and cards on dashboards.</p>
<p>Page owners and users with manage pages rights can lock a page to prevent alterations to a page. &nbsp;Consider the use of Certification workflows for ‚Äòofficial‚Äô content that should not be altered.</p>
</section>
<section id="change-card-interactions-to-control-what-happens-when-users-click-on-a-dashboard" class="level2">
<h2 class="anchored" data-anchor-id="change-card-interactions-to-control-what-happens-when-users-click-on-a-dashboard">Change Card Interactions to control what happens when Users click on a Dashboard</h2>
<p>Default behavior is to apply filters on click, but dashboard designers change interaction behavior on a card by card basis.</p>
<p>Ex. Can have drilldown in place, or click to open a link to another Domo Page or external link.</p>
<p>Interactions <a href="https://domohelp.domo.com/hc/en-us/articles/360043428433-Creating-Domo-Stories#7.">KB Link</a></p>
<p>URL Links to pages can include predefined column filters using PFilters. &nbsp;<a href="https://domohelp.domo.com/hc/en-us/articles/360042933114-Using-Pfilters-to-Apply-Filters-from-URL-Query-Parameters-to-Embedded-Dashboards">KB Link</a></p>
<section id="additional-resources" class="level3">
<h3 class="anchored" data-anchor-id="additional-resources">Additional Resources</h3>
<ul>
<li>Design better Dashboards / Tell Better Data Stories (üìπ <a href="https://www.youtube.com/watch?v=Cpz2ecelaow">YouTube Video</a>)</li>
<li>Understanding Pages (System Defaults - Overview, Favorites, Shared ‚Äì <a href="https://domohelp.domo.com/hc/en-us/articles/360043428553-Understanding-Pages">KB Link</a>)</li>
</ul>
</section>
</section>
<section id="understanding-cards" class="level2">
<h2 class="anchored" data-anchor-id="understanding-cards">Understanding Cards</h2>
<p>Cards are the Domo equivalent of charts, plots, or graphs.</p>
<p>Filtering, Sorting, cards in the Details view</p>
<section id="sharing-cards-to-pages-vs-save-as-creating-a-copy" class="level3">
<h3 class="anchored" data-anchor-id="sharing-cards-to-pages-vs-save-as-creating-a-copy">Sharing Cards to Pages vs Save As (creating a copy)</h3>
<p>Sharing and Removing Access to Cards and Pages <a href="https://domohelp.domo.com/hc/en-us/articles/360042932994-Sharing-and-Removing-Access-to-Cards-and-Pages">Link to KB</a></p>
</section>
<section id="lock-your-cards-and-pages-to-prevent-users-from-editing-the-content." class="level3">
<h3 class="anchored" data-anchor-id="lock-your-cards-and-pages-to-prevent-users-from-editing-the-content.">Lock your Cards and Pages to prevent users from editing the content.</h3>
</section>
<section id="chart-colors" class="level3">
<h3 class="anchored" data-anchor-id="chart-colors">Chart Colors</h3>
<p>Color Rules (‚Äúconditional formatting‚Äù) <a href="https://domohelp.domo.com/hc/en-us/articles/360043428813-Setting-Color-Rules-for-a-Chart">Link to KB</a></p>
<p>Changing Default Colors in different Chart Types <a href="https://domohelp.domo.com/hc/en-us/articles/360043429653-Changing-the-Default-Colors-in-Your-Chart">Link to KB</a></p>
<p>üöÄ Only one Default Theme (color palette) can exist per instance in the form of the Brand Kit feature. &nbsp; <a href="https://domohelp.domo.com/hc/en-us/articles/5428851518999-Brand-Kit">Link to KB</a></p>
<p>‚ùì ‚ÄúIn Tableau when you select a field to color, it automatically assigns each distinct value a color. This is useful for say Department separation. We can then manually change it if needed. &nbsp;How do you do it in Domo?‚Äù</p>
<ul>
<li>Either set color rules (for metrics) OR if you have a chart type that allows you to add a Series (ex. Grouped bar chart) it will assign a color to each unique value</li>
</ul>
</section>
<section id="aggregation-across-categories-window-functions-cumulative-sum" class="level3">
<h3 class="anchored" data-anchor-id="aggregation-across-categories-window-functions-cumulative-sum">Aggregation across Categories / Window Functions / Cumulative Sum</h3>
<p>There are 3 ways to compare aggregates outside of the window of data you‚Äôre currently in</p>
<p>Segments</p>
<p><a href="https://domohelp.domo.com/hc/en-us/articles/4403089503383-Creating-Segments-in-Analyzer">KB Link</a></p>
<p>Window Functions &amp; Fixed Functions</p>
<p>Ultimate 2020 Window Function Tutorial üìπ <a href="https://www.youtube.com/watch?v=eifSYZIcPzg">YouTube Video</a></p>
<p>3 Month Average Lag üìπ <a href="https://www.youtube.com/watch?v=cnc6gMKZ9R8">YouTube Video</a></p>
<p>Certain Card Types allow cross category aggregation</p>
<p>Period over Period</p>
<p>Running Total</p>
</section>
<section id="beast-modes-are-formulas-defined-in-analyzer-cards" class="level3">
<h3 class="anchored" data-anchor-id="beast-modes-are-formulas-defined-in-analyzer-cards">Beast Modes are formulas defined in Analyzer / Cards</h3>
<p>Beast Mode calculations will frequently use MySQL (and sometimes Redshift) syntax.</p>
<p>üöÄ Beast Modes can be applied before aggregation (at the row level) or after aggregation</p>
<p>In most cases, any CASE statement should occur INSIDE a beast mode.</p>
<p>CASE statements and date-specific transforms that exist independently of aggregate functions should often move upstream and persist in the dataset itself.</p>
</section>
<section id="understanding-card-sharing-and-data-security" class="level3">
<h3 class="anchored" data-anchor-id="understanding-card-sharing-and-data-security">Understanding Card Sharing and Data Security</h3>
<p>Card and Page sharing versus data security are two very different functions with different implications. &nbsp;</p>
<p>‚ö†Ô∏è If you share a card or dashboard, you are implicitly giving READ access to the underlying dataset(s) represented in the entity.</p>
<p>‚ö†Ô∏è If there is content that needs to be filtered on a per-user basis consider using PDP (Personalized Data Permissions) to apply row-level security to limit the rows of data in a dataset a user has access to.</p>
</section>
</section>
<section id="jae-recommendations-1" class="level2">
<h2 class="anchored" data-anchor-id="jae-recommendations-1">Jae Recommendations</h2>
<section id="card-design" class="level3">
<h3 class="anchored" data-anchor-id="card-design">Card Design</h3>
<p>üöÄ Naming Convention Tip: &nbsp;Update the card title to indicate cards with a drill path.</p>
<ul>
<li>Consider an asterisk, *, &nbsp;or ALT &nbsp;+ 16, ‚ñ∫, to indicate cards with a drill path.</li>
</ul>
<p>üöÄ There is a toggle to prevent users from drilling down to raw data</p>
</section>
<section id="beast-mode-management" class="level3">
<h3 class="anchored" data-anchor-id="beast-mode-management">Beast Mode Management</h3>
<ul>
<li>Use Beast Mode Manager and DomoGovernance_BeastModes dataset to monitor beast mode proliferation in your instance</li>
<li>Card performance is directly correlated SQL commands issued in beast modes where possible to avoid COUNT(DISTINCT) and text-based operations (REGEX or LIKE).</li>
<li>When reasonable, materialize row-based transforms (date conversions) onto the dataset.</li>
<li>Sharing beast modes to datasets will improve card performance but will slow dataset indexing.</li>
<li>There is a difference between sharing a card versus making a copy of a card. &nbsp;Cards can be shared (linked) to multiple pages making it easy to have one object to maintain.</li>
</ul>
</section>
<section id="card-and-dashboard-management" class="level3">
<h3 class="anchored" data-anchor-id="card-and-dashboard-management">Card and Dashboard Management</h3>
<ul>
<li>Each card has its own URN. &nbsp;You can either create a copy / duplicate of a card and embed it on a page (it will have its own URN) OR simply move or share a card to a page (it retains the original URN).</li>
</ul>
</section>
</section>
<section id="card-faq" class="level2">
<h2 class="anchored" data-anchor-id="card-faq">Card FAQ</h2>
<p>Is there a difference between ‚ÄúSave As‚Äù / ‚ÄúDuplicating‚Äù vs ‚ÄúSharing‚Äù a card?</p>
<ul>
<li>Save As or Duplicate will create a new object in Domo that is separate from the original entity. &nbsp;</li>
<li>Changes made to the duplicated card or the original card will not impact the other. &nbsp;</li>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042923274-Duplicating-Cards-Save-As-">Duplicating Cards KB</a></li>
</ul>
<p>Can I prevent users from altering my card or page?</p>
<ul>
<li>Yes, lock your content. &nbsp;<a href="https://domohelp.domo.com/hc/en-us/articles/360042923814-Locking-or-Unlocking-Page-Content">KB Link</a></li>
<li>Consider a certification flow for ‚Äòofficial content‚Äô. &nbsp;<a href="https://domohelp.domo.com/hc/en-us/articles/360043430613-Certifying-Cards-and-DataSets">KB Link</a></li>
</ul>
<p>How can I alias data (fix values) or create a custom calculated metric in a card?</p>
<ul>
<li><p>Create a Beast Mode <a href="https://domohelp.domo.com/hc/en-us/sections/360007295754-Beast-Mode">Link KB</a>&nbsp;using MySQL syntax functions</p></li>
<li><p>Ex. CASE WHEN END or SUM(CASE WHEN ‚Ä¶ &nbsp;END)</p></li>
</ul>
<hr>
</section>
</section>
<section id="interacting-with-domo-content" class="level1">
<h1>üóÇÔ∏è Interacting with Domo Content</h1>
<section id="card-features-for-participants-non-editors" class="level2">
<h2 class="anchored" data-anchor-id="card-features-for-participants-non-editors">Card Features for Participants (non-editors)</h2>
<section id="use-annotations-to-share-insights" class="level3">
<h3 class="anchored" data-anchor-id="use-annotations-to-share-insights">Use Annotations to share insights</h3>
<p>Create card annotations and find or document interesting insights using annotations</p>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042923974-Adding-Chart-Annotations">Annotation KB</a></li>
</ul>
</section>
<section id="use-alerts-to-update-users-with-changes-in-domo" class="level3">
<h3 class="anchored" data-anchor-id="use-alerts-to-update-users-with-changes-in-domo">Use Alerts to update users with changes in Domo</h3>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/sections/360007334393-Notifications-and-Alerts">Alerts KB</a></li>
</ul>
<p>Alerts can be configured for cards and metrics represented in cards as well as datasets.</p>
</section>
</section>
<section id="card-features-for-editors" class="level2">
<h2 class="anchored" data-anchor-id="card-features-for-editors">Card Features for Editors</h2>
<section id="use-quick-filters-to-encourage-data-exploration" class="level3">
<h3 class="anchored" data-anchor-id="use-quick-filters-to-encourage-data-exploration">Use Quick Filters to encourage data exploration</h3>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042924074-Adding-Filters-to-Your-Chart">Quick Filters KB</a>&nbsp;</li>
</ul>
</section>
<section id="use-page-level-filter-views-to-create-preset-combinations-of-filters-for-a-guided-user-experience" class="level3">
<h3 class="anchored" data-anchor-id="use-page-level-filter-views-to-create-preset-combinations-of-filters-for-a-guided-user-experience">Use Page-level Filter Views to create preset combinations of filters for a guided user experience</h3>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042923914-Applying-Page-Level-Filters-with-Filter-Views">Filter Views KB</a></li>
</ul>
</section>
<section id="add-drill-paths-to-cards-to-control-the-exploration-experience" class="level3">
<h3 class="anchored" data-anchor-id="add-drill-paths-to-cards-to-control-the-exploration-experience">Add Drill Paths to Cards to control the exploration experience</h3>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042924094-Adding-a-Drill-Path-to-Your-Chart">Drill Paths KB</a></li>
</ul>
<hr>
</section>
</section>
</section>
<section id="project-handover-moving-into-production" class="level1">
<h1>üóÇÔ∏è Project Handover / Moving into Production</h1>
<section id="documentation" class="level2">
<h2 class="anchored" data-anchor-id="documentation">Documentation</h2>
<ul>
<li>High Level Design / Solution overview</li>
<li>New Users‚Äô guide</li>
<li>Data Dictionary (see section below)</li>
</ul>
</section>
<section id="data-quality" class="level2">
<h2 class="anchored" data-anchor-id="data-quality">Data Quality</h2>
</section>
<section id="domo-momentum---certification" class="level2">
<h2 class="anchored" data-anchor-id="domo-momentum---certification">Domo Momentum - Certification</h2>
</section>
<section id="dev-prod-maintenance" class="level2">
<h2 class="anchored" data-anchor-id="dev-prod-maintenance">Dev / Prod &amp; Maintenance</h2>
<section id="use-domo-sandbox-for-managing-same-instance-and-cross-instance-devprod-content" class="level3">
<h3 class="anchored" data-anchor-id="use-domo-sandbox-for-managing-same-instance-and-cross-instance-devprod-content">Use Domo Sandbox for managing same instance and cross-instance dev/prod content</h3>
<ul>
<li><p>By default SIE Domo instances will not have a second Domo instance to separate Dev from Prod. &nbsp;Within the same instance however, Domo Sandbox can help manage the promotion of development assets to production and back. <a href="https://domohelp.domo.com/hc/en-us/articles/4403367344023-Domo-Sandbox">Sandbox KB</a>&nbsp;</p></li>
<li><p>Do not make full copies of production datasets into Dev; instead, consider developing against randomized samples of data. &nbsp;This will both help manage developer experience (faster execution times) and instance rowcount.</p></li>
</ul>
</section>
<section id="transfer-assets-to-appropriate-stakeholders" class="level3">
<h3 class="anchored" data-anchor-id="transfer-assets-to-appropriate-stakeholders">Transfer Assets to Appropriate Stakeholders</h3>
<hr>
</section>
</section>
</section>
<section id="governance-themes" class="level1">
<h1>üóÇÔ∏è Governance Themes</h1>
<p>KB Domo Enterprise Toolkit - <a href="https://domohelp.domo.com/hc/en-us/articles/5299662679447-Domo-Enterprise-Toolkit">https://domohelp.domo.com/hc/en-us/articles/5299662679447-Domo-Enterprise-Toolkit</a></p>
<section id="single-sign-on-sso-and-okta-authentication" class="level2">
<h2 class="anchored" data-anchor-id="single-sign-on-sso-and-okta-authentication">Single Sign On (SSO) and OKTA Authentication</h2>
<p><a href="https://domohelp.domo.com/hc/en-us/sections/360007334573-User-and-Group-Management">User and Group Management KB</a>&nbsp;link</p>
<p>Users can be aJaed to Domo at will. &nbsp;The SIE Domo contract does not charge licensing fees on a per user basis.</p>
<p>See <a href="https://domohelp.domo.com/hc/en-us/articles/360042934274-Adding-Users-to-Domo">Adding Users to Domo KB</a>&nbsp;link</p>
<p>Out of the box, Domo user authentication is handled with email and login. &nbsp;User provisioning and authentication can be handled via SSO (<a href="https://domohelp.domo.com/hc/en-us/articles/360042934374-Understanding-and-Configuring-Domo-Single-Sign-On-Using-SAML">SSO using SAML KB</a>&nbsp;link)</p>
<section id="logging-into-domo-via-direct-sign-on-in-an-environment-with-sso" class="level3">
<h3 class="anchored" data-anchor-id="logging-into-domo-via-direct-sign-on-in-an-environment-with-sso">Logging into Domo via Direct Sign On in an environment with SSO</h3>
<p>To bypass SSO Authentication, users must first be added to the <a href="https://domohelp.domo.com/hc/en-us/articles/360042934374-Understanding-and-Configuring-Domo-Single-Sign-On-Using-SAML#4.">Direct Sign On (DSO) List</a>. &nbsp;</p>
<p>Once aJaed to DSO, users can bypass SSO by adding /auth/index?domoManualLogin=true to the url.</p>
</section>
</section>
<section id="users-groups-roles" class="level2">
<h2 class="anchored" data-anchor-id="users-groups-roles">Users, Groups, Roles</h2>
<section id="sie-standard-roles" class="level3">
<h3 class="anchored" data-anchor-id="sie-standard-roles">‚öñÔ∏è SIE Standard Roles</h3>
<p>Roles are comprised of Grants which determine actions users can take in Domo.</p>
<p>Jae will create standard roles and groups to which instance members will be assigned by default. &nbsp;Instance admins can create their own custom roles for departmental users as necessary.</p>
<ul>
<li><p>SIE_Admin</p></li>
<li><p>SIE_Reset</p></li>
<li><p>SIE_Priviliged</p></li>
<li><p>Privileged + ADR Flows</p></li>
<li><p>SIE_Test</p></li>
</ul>
<p>To monitor role &amp; Grant configuration:</p>
<ul>
<li>Go To Admin &gt; Governance &gt; Roles &gt; Grid</li>
</ul>
</section>
<section id="define-custom-roles" class="level3">
<h3 class="anchored" data-anchor-id="define-custom-roles">Define Custom Roles</h3>
<ul>
<li><a href="https://knowledge.domo.com/Administer/Controlling_Access_in_Domo/Managing_Custom_Roles">https://knowledge.domo.com/Administer/Controlling_Access_in_Domo/Managing_Custom_Roles</a></li>
<li><a href="https://knowledge.domo.com/Administer/Controlling_Access_in_Domo/04Security_Role_Reference">https://knowledge.domo.com/Administer/Controlling_Access_in_Domo/04Security_Role_Reference</a></li>
</ul>
</section>
<section id="sie-default-groups" class="level3">
<h3 class="anchored" data-anchor-id="sie-default-groups">‚öñÔ∏è SIE Default Groups</h3>
<ul>
<li>SIE Admin</li>
<li>SIE User</li>
</ul>
</section>
<section id="defining-groups" class="level3">
<h3 class="anchored" data-anchor-id="defining-groups">Defining Groups</h3>
<p>Where Roles and Grants define what users can do, Group membership should be used to either:</p>
<ul>
<li>Manage content ownership</li>
<li>Share content</li>
</ul>
<p>Avoid the temptation to manage content by individuals, instead try to adopt the practice of sharing content with groups.</p>
<ul>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360042934294-Creating-and-Managing-User-Groups">https://domohelp.domo.com/hc/en-us/articles/360042934294-Creating-and-Managing-User-Groups</a></li>
</ul>
</section>
<section id="implement-row-level-security-with-personalized-data-permissions-pdp-policies" class="level3">
<h3 class="anchored" data-anchor-id="implement-row-level-security-with-personalized-data-permissions-pdp-policies">Implement Row-Level Security with Personalized Data Permissions (PDP) &nbsp;Policies</h3>
<p>üöÄ Monitoring card sharing is NOT a replacement for applying PDP policies. &nbsp;Jae strongly recommends applying PDP policies to all sensitive data in Domo.</p>
<p>üöÄ A card gets reduced to a SQL query against a dataset which is executed at runtime (i.e.&nbsp;when Michelle tries to view the card). &nbsp;AND PDP creates row-level security to the dataset which limits what gets returned by the query.</p>
<p>ex. Michelle can create a card against any dataset that has been shared with her, but she will only see the rows the pdp policy allows her to see.</p>
<p>ex. SELECT Product, sum(amount) GROUP BY Product.</p>
<p>üöÄ PDP policies are additive (each policy you‚Äôre a part of adds an OR clause for the data you can see).</p>
<section id="pdp-links" class="level4">
<h4 class="anchored" data-anchor-id="pdp-links">PDP Links</h4>
<ul>
<li>Personalized Data Permissions - <a href="https://domohelp.domo.com/hc/en-us/sections/360007334593-Personalized-Data-Permissions-PDP-">KB Link</a></li>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/4415800746391-Governance-Toolkit-PDP-Automation">https://domohelp.domo.com/hc/en-us/articles/4415800746391-Governance-Toolkit-PDP-Automation</a></li>
<li><a href="https://domohelp.domo.com/hc/en-us/articles/360043439353-PDP-Policy-Autocreation">https://domohelp.domo.com/hc/en-us/articles/360043439353-PDP-Policy-Autocreation</a></li>
</ul>
</section>
</section>
</section>
<section id="datacenter-audits" class="level2">
<h2 class="anchored" data-anchor-id="datacenter-audits">Datacenter Audits</h2>
<ul>
<li>Create a schedule with your technology &amp; business users to clean up on a regular basis and monitor the results through governance and activity logs</li>
<li>Set cleaning campaigns to a theme to make it fun</li>
<li>Check to make sure your instance objects are in security compliance with other parts of the business</li>
<li>Set alerts on ETL jobs to monitor failure ‚Äì can set up as SMS message</li>
<li>Check schedules for ETL jobs and make sure they are available when needed for the business dashboard users</li>
</ul>
<section id="security" class="level3">
<h3 class="anchored" data-anchor-id="security">Security</h3>
<p>‚ö†Ô∏è By default, most users will not see all the data available in the datacenter; however, sharing a card automatically shares the underlying dataset. &nbsp;Therefore PDP (<a href="https://domohelp.domo.com/hc/en-us/sections/360007334593-Personalized-Data-Permissions-PDP-">personalized data permissions KB</a>) is the only way to implement proper data security. &nbsp;</p>
</section>
</section>
<section id="manage-data-using-metadata" class="level2">
<h2 class="anchored" data-anchor-id="manage-data-using-metadata">Manage Data using Metadata</h2>
<ul>
<li><p>Use Tags facilitate dataset audits and provide additional dataset metadata (<a href="https://domohelp.domo.com/hc/en-us/articles/4415839139863-Governance-Toolkit-DataSet-Tagging">KB</a>)</p></li>
<li><p>Utilize the Governance Connectors <a href="https://domohelp.domo.com/hc/en-us/articles/360056318074-Domo-Governance-Datasets-Connector">(KB)</a>&nbsp;to access data schemas, beastmodes, access rights to dataset, and tags</p></li>
<li><p>Create a data dictionary dashboard</p></li>
</ul>
</section>
<section id="monitor-domo-instance-and-projects" class="level2">
<h2 class="anchored" data-anchor-id="monitor-domo-instance-and-projects">Monitor Domo Instance and Projects</h2>
<hr>
</section>
</section>
<section id="domo-pipeline-optimization" class="level1">
<h1>üóÇÔ∏è Domo Pipeline Optimization</h1>
<section id="domo-architecture-review" class="level2">
<h2 class="anchored" data-anchor-id="domo-architecture-review">Domo Architecture Review</h2>
</section>
</section>
<section id="domo-features" class="level1">
<h1>üóÇÔ∏è Domo Features</h1>
<section id="data-science-toolkit" class="level2">
<h2 class="anchored" data-anchor-id="data-science-toolkit">Data Science Toolkit</h2>
<section id="jupyter-notebook" class="level3">
<h3 class="anchored" data-anchor-id="jupyter-notebook">Jupyter Notebook</h3>
<p><a href="https://domohelp.domo.com/hc/en-us/articles/360047400753-Jupyter-Workspaces">KB</a>&nbsp;link</p>
<p>Primary Advantages</p>
<ul>
<li>Notebooks can be scheduled to run as a dataflow</li>
<li>Datasets can be read in or updated using the domo jupyter package</li>
<li>During development, the performance of the notebooks will feel much faster than Magic 2.0 Scripting Tiles</li>
</ul>
<p>Disadvantages</p>
<ul>
<li>No built-in version control (no access to private GitHub)</li>
<li>No easy way to ‚Äúdownload all files‚Äù</li>
</ul>
</section>
</section>
<section id="extending-domo-with-apis" class="level2">
<h2 class="anchored" data-anchor-id="extending-domo-with-apis">Extending Domo with APIs</h2>
<p>üìö Jae <a href="https://documenter.getpostman.com/view/5049119/UyxbppB2">Private API documentation</a></p>


</section>
</section>

 ]]></description>
  <category>new user</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24_Domo_Onboarding/</guid>
  <pubDate>Tue, 24 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Domo Variables</title>
  <dc:creator>Jae Wilson</dc:creator>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24_DomoVariables/</link>
  <description><![CDATA[ 




<ul>
<li><a href="https://domo-community.domo.com/page/1880852133">https://domo-community.domo.com/page/1880852133</a></li>
</ul>
<p>Variable Types</p>
<ul>
<li>Text,number, date</li>
<li>Controls</li>
</ul>
<p>Variable Grant</p>
<p><img src="https://lh6.googleusercontent.com/o3j1gyjLi0pbF1mZ0ZyxgWDzMD95Y36ChSrmksDlh93exTuy3m_PHGInYxKB4vBlHRhoiVsD0CK5av3aBV9Z3EXmlx9DBRV_V01s82vp3hBLuZIoxVIYc3AuXY9KqiBYVio3iE62gWH47rJIC3Mlx68.png" class="img-fluid"></p>
<p>Three new Variable and Beast Mode, Domo STats Datasets</p>
<section id="faq" class="level1">
<h1>FAQ</h1>
<p>Does Variables support dynamic formatting ‚Äì no</p>
<p>Unknown if supports Optimization by Domo Engineering</p>
<p>Variable is added as a dataset column</p>
<p>Variables exist at a Global Scope across Domo and a Card Scope</p>
<p>The GRANT does not prevent users from altering variables</p>
</section>
<section id="questions-from-oct-cab" class="level1">
<h1>Questions from Oct CAB</h1>
<p>Variables for WHAT-IF Analysis</p>
<ul>
<li><p>Previously would have to CROSS JOIN a webform to add a column to the dataset</p></li>
<li><p>Save Variable / Dataset</p></li>
<li><p>TO EXPLORE - column switching</p></li>
<li><p>CASE WHEN VARIABLE = ‚Äòvalue‚Äô THEN <column name=""> END</column></p></li>
<li><p>Variables for switching EXCHANGE RATE</p></li>
<li><p>CASE WHEN VARIABLE = ‚ÄòUSD‚Äô then <usd exchange="" rate=""> END</usd></p></li>
<li><p>Variables + Publish?</p></li>
<li><p>Variables + Smart Text?</p></li>
<li><p>Grants for separating Global vs.&nbsp;Personal variables?</p></li>
<li><p>Impact when data changes with large datasets?</p></li>
<li><p>WHY IS THERE NO KB?? - because it‚Äôs not in GA :)</p></li>
<li><p>BECAUSE THEY DON‚ÄôT CARE ABOUT DOCUMENTATION - true</p></li>
</ul>


</section>

 ]]></description>
  <category>Variables</category>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-01-24_DomoVariables/</guid>
  <pubDate>Tue, 24 Jan 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating and UPSERTing custom roles with DomoLibrary</title>
  <link>https://jaewilson07.github.io/domo_library/blog/posts/2023-03-13-Custom_Roles/</link>
  <description><![CDATA[ 




<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->
<p>a short post on using DomoLibrary to create and update custom roles with new grant lists and auto assign users to that role</p>
<section id="project-configuration" class="level1">
<h1>Project Configuration</h1>
<section id="configure-environment-variables" class="level2">
<h2 class="anchored" data-anchor-id="configure-environment-variables">‚öôÔ∏è configure environment variables</h2>
<p>This script assumes the use of a dotenv file (in this example <code>sample_config.txt</code>)</p>
<div id="019ac9c0" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install python-dotenv</span></span></code></pre></div>
</div>
<div id="bee25774" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dotenv_values</span>
<span id="cb2-2"></span>
<span id="cb2-3">env <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dotenv_values(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sample_config.txt"</span>)</span>
<span id="cb2-4">env</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>OrderedDict([('ROLE_NAME', 'dl_department_admin'),
             ('ROLE_DESCRIPTION', 'deployed via domo_library script'),
             ('ROLE_GRANTS',
              'alert.edit, alert.actions, content.card.embed, content.export, content.variable.edit, audit, datastore.create, dataset.manage, dataset.export, publish.subscribers.manage, user.invite, group.edit, certifiedcontent.admin, certifiedcontent.request'),
             ('ROLE_EMAILS', 'test1@test.com, test2@test.com'),
             ('ROLE_NAME2', 'dl_test'),
             ('ROLE_DESCRIPTION2', 'deployed via domo_library script'),
             ('ROLE_GRANTS2', 'alert.edit, alert.actions, content.card.embed'),
             ('ROLE_EMAILS2',
              'test3@test.com, test3@test.com, test4@test.com')])</code></pre>
</div>
</div>
</section>
<section id="creds-config-and-roles-to-create" class="level2">
<h2 class="anchored" data-anchor-id="creds-config-and-roles-to-create">‚öôÔ∏è Creds config and roles to create</h2>
<p>the domolibrary features a class based and function based approach to interacting with domo entities.</p>
<p>use the <code>domolibrary.client.DomoAuth</code> objects to handle api authentication</p>
<p>access_tokens can be configured in Domo &gt; Auth &gt; Security &gt; Access Token and have the benefit of not requiring direct signon access in environments that are using SSO</p>
<div id="55994590" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pip install domolibrary --upgrade</span></span></code></pre></div>
</div>
<div id="6f15b2ce-f8c5-4c61-bede-8976f3682561" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb5-3"></span>
<span id="cb5-4">token_auth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmda.DomoTokenAuth(</span>
<span id="cb5-5">    domo_instance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"domo-community"</span>,</span>
<span id="cb5-6">    domo_access_token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOMO_DOJO_ACCESS_TOKEN"</span>],</span>
<span id="cb5-7">)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> token_auth.get_auth_token()</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(token_auth.token, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span></code></pre></div>
</div>
</section>
<section id="templatize-user-input-with-classes" class="level2">
<h2 class="anchored" data-anchor-id="templatize-user-input-with-classes">Templatize user input with classes</h2>
<p>The custom <code>EnvRole</code> class allows users to define configuration in the <code>.env</code> file; however ensures conformity and reduces code redundancy by templatizing the required input.</p>
<div id="5360e5dc-f9dc-4514-9c6b-dd82f2a6830e" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pprint <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pprint</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoGrant <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmg</span>
<span id="cb6-4"></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnvRole:</span>
<span id="cb6-8">    name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb6-9">    description: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb6-10">    grant_ls: [</span>
<span id="cb6-11">        dmg.DomoGrant</span>
<span id="cb6-12">    ]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grants are consistent across domo instances so can be defined on initialization</span></span>
<span id="cb6-13">    user_ls: [</span>
<span id="cb6-14">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb6-15">    ]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># each instance would have a diferent user_id associated with each instance so should be handled on a per instance basis (DomoUsers expect a set user id)</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""custom class for templatizing roles to create"""</span></span>
<span id="cb6-18"></span>
<span id="cb6-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(</span>
<span id="cb6-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,</span>
<span id="cb6-21">        name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb6-22">        description: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb6-23">        grants_str: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># comma separated string of grant_ids</span></span>
<span id="cb6-24">        user_str: [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>],</span>
<span id="cb6-25">    ):</span>
<span id="cb6-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name</span>
<span id="cb6-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> description</span>
<span id="cb6-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grant_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-29">            dmg.DomoGrant(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grant.strip()) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> grant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> grants_str.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)</span>
<span id="cb6-30">        ]</span>
<span id="cb6-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.user_ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [user.strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> user <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> user_str.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)]</span>
<span id="cb6-32"></span>
<span id="cb6-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of roles that will be created</span></span>
<span id="cb6-34"></span>
<span id="cb6-35"></span>
<span id="cb6-36">roles_to_create <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-37">    EnvRole(</span>
<span id="cb6-38">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_NAME"</span>],</span>
<span id="cb6-39">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_DESCRIPTION"</span>],</span>
<span id="cb6-40">        grants_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_GRANTS"</span>],</span>
<span id="cb6-41">        user_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_EMAILS"</span>],</span>
<span id="cb6-42">    ),</span>
<span id="cb6-43">    EnvRole(</span>
<span id="cb6-44">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_NAME2"</span>],</span>
<span id="cb6-45">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_DESCRIPTION2"</span>],</span>
<span id="cb6-46">        grants_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_GRANTS2"</span>],</span>
<span id="cb6-47">        user_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>env[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROLE_EMAILS2"</span>],</span>
<span id="cb6-48">    ),</span>
<span id="cb6-49">]</span>
<span id="cb6-50"></span>
<span id="cb6-51">pprint(roles_to_create)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[EnvRole(name='dl_department_admin',
         description='deployed via domo_library script',
         grant_ls=[DomoGrant(id='alert.edit',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='alert.actions',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='content.card.embed',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='content.export',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='content.variable.edit',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='audit',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='datastore.create',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='dataset.manage',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='dataset.export',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='publish.subscribers.manage',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='user.invite',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='group.edit',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='certifiedcontent.admin',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='certifiedcontent.request',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None)],
         user_ls=['test1@test.com', 'test2@test.com']),
 EnvRole(name='dl_test',
         description='deployed via domo_library script',
         grant_ls=[DomoGrant(id='alert.edit',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='alert.actions',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None),
                   DomoGrant(id='content.card.embed',
                             display_group=None,
                             title=None,
                             depends_on_ls=None,
                             description=None,
                             role_membership_ls=None)],
         user_ls=['test3@test.com', 'test3@test.com', 'test4@test.com'])]</code></pre>
</div>
</div>
</section>
<section id="define-functions-that-bridge-the-envrole-with-domolibrary-classes" class="level2">
<h2 class="anchored" data-anchor-id="define-functions-that-bridge-the-envrole-with-domolibrary-classes">Define Functions that bridge the EnvRole with <code>domolibrary</code> classes</h2>
<p>In the examples below, the functions are very simple and just call the API with passthrough parameters; however, more customization could be added for example defining a default role_description if one wasn‚Äôt provided.</p>
<p>Notice how <code>upsert_super_admin</code> doesn‚Äôt even accept a list of grants and instead pulls a list of all available grants from that Domo Instance.</p>
<p>This might be necessary because Domo by default doesn‚Äôt grant all grants to the Admin role.</p>
<div id="134a7d04" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoRole <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmr</span>
<span id="cb8-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.client.DomoAuth <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmda</span>
<span id="cb8-3"></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_role(</span>
<span id="cb8-6">    auth: dmda.DomoAuth,</span>
<span id="cb8-7">    role_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb8-8">    role_description: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb8-9">    grant_ls: [dmg.DomoGrant],</span>
<span id="cb8-10">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb8-11">    debug_prn: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb8-12">):</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmr.DomoRoles.upsert_role(</span>
<span id="cb8-15">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_name, description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_description, grant_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grant_ls</span>
<span id="cb8-16">    )</span></code></pre></div>
</div>
<section id="sample-implementation-of-upsert_role" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-upsert_role">sample implementation of upsert_role</h4>
<div id="48088448" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dt</span>
<span id="cb9-2"></span>
<span id="cb9-3">role <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roles_to_create[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_role(</span>
<span id="cb9-6">    auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb9-7">    role_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.name,</span>
<span id="cb9-8">    role_description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>role<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>description<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - updated </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>today()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb9-9">    grant_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.grant_ls,</span>
<span id="cb9-10">    debug_prn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb9-11">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[DomoGrant(id='alert.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.actions', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.embed', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.variable.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='audit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datastore.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.subscribers.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.invite', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='group.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.request', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None)]</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>DomoRole(id=1563101750, name='dl_department_admin', description='deployed via domo_library script - updated 2023-03-23', is_system_role=0, is_default_role=False, grant_ls=[DomoGrant(id='alert.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.embed', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datastore.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='group.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.subscribers.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.request', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.actions', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='audit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.invite', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.variable.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None)], membership_ls=[])</code></pre>
</div>
</div>
<div id="f0ad0885" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dt</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoInstanceConfig <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmic</span>
<span id="cb12-3"></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grants for super admin role are getting directly from instance using get_all_instance_grants</span></span>
<span id="cb12-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_super_admin(</span>
<span id="cb12-7">    auth: dmda.DomoAuth,</span>
<span id="cb12-8">    role_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb12-9">    role_description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"all grants - updated on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>today()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb12-10">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb12-11">    debug_prn: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb12-12">):</span>
<span id="cb12-13"></span>
<span id="cb12-14">    domo_instance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dmic.DomoInstanceConfig(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth)</span>
<span id="cb12-15">    all_grants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> domo_instance.get_grants()</span>
<span id="cb12-16"></span>
<span id="cb12-17">    sa_role <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmr.DomoRoles.upsert_role(</span>
<span id="cb12-18">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_name,</span>
<span id="cb12-19">        description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_description,</span>
<span id="cb12-20">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb12-21">        debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api,</span>
<span id="cb12-22">        grant_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>all_grants,</span>
<span id="cb12-23">    )</span>
<span id="cb12-24"></span>
<span id="cb12-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> sa_role</span></code></pre></div>
</div>
</section>
<section id="sample-implementation-of-creating-a-super_admin-role" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-creating-a-super_admin-role">sample implementation of creating a super_admin role</h4>
<div id="76c820a0" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_super_admin(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth, role_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"super_admin"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[DomoGrant(id='authorization.roles', display_group='COMPANY', title='Manage all roles', depends_on_ls=['ui.admin'], description='Create, edit and delete custom roles. Assign anyone to any role in this instance.', role_membership_ls=['1', '275763436', '810756122']), DomoGrant(id='audit', display_group='COMPANY', title='View activity logs', depends_on_ls=['ui.admin'], description='View and export audit logs.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='customer.edit', display_group='COMPANY', title='Manage all company settings', depends_on_ls=['ui.admin'], description='Manage company metadata, authentication rules, authorized domain rules, export security, mobile home screen layouts, publishing, SSO Configuration, whitelist rules, report scheduler and licenses.', role_membership_ls=['1', '275763436', '810756122']), DomoGrant(id='developer.token.manage', display_group='COMPANY', title='Manage all access tokens and API clients', depends_on_ls=['ui.admin'], description='Create and delete any access tokens and API clients.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='domo.system.messages', display_group='COMPANY', title='Receive Domo System Messages', depends_on_ls=['ui.admin'], description='Receive Domo system messages about maintenance and feature updates. Ensure at least one Admin receives these messages.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='usage.reports.view', display_group='COMPANY', title='View usage metrics', depends_on_ls=[], description='View and export usage metrics.', role_membership_ls=['1', '810756122']), DomoGrant(id='user.edit', display_group='USERS_GROUPS', title='Manage all users', depends_on_ls=['ui.admin'], description='Create, edit and delete any user and reset their password.', role_membership_ls=['1', '275763436', '810756122']), DomoGrant(id='user.invite', display_group='USERS_GROUPS', title='Add new people', depends_on_ls=['ui.admin'], description='Add new people.', role_membership_ls=['1', '2', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='user.session.edit', display_group='USERS_GROUPS', title='Edit user Sessions', depends_on_ls=['ui.admin'], description='Immediately log any user out of Domo', role_membership_ls=['1', '810756122']), DomoGrant(id='group.edit', display_group='USERS_GROUPS', title='Edit groups', depends_on_ls=['ui.admin'], description='Create, edit and delete groups the person has been granted access to. Add and remove people from groups the person with the grant has access to.', role_membership_ls=['1', '2', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='group.admin', display_group='USERS_GROUPS', title='Manage all groups', depends_on_ls=['ui.admin'], description='Create, edit and delete any groups. Add and remove people from any group.', role_membership_ls=['1', '275763436', '810756122']), DomoGrant(id='profile.achieve.assign', display_group='USERS_GROUPS', title='Assign achievements', depends_on_ls=['ui.admin'], description='Create, edit, delete and assign achievements.', role_membership_ls=['1', '2', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='buzz.admin', display_group='SOCIAL', title='Edit conversations and messages', depends_on_ls=[], description="Edit and delete conversations in Buzz to which you have access. Delete other people's comments in conversations to which you have access. View and edit social user settings.", role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='tasks.admin', display_group='WORKFLOWS', title='Manage all public Projects and Tasks', depends_on_ls=[], description='View, edit, or archive any public Project in this instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='tasks.private.admin', display_group='WORKFLOWS', title='Manage all private Projects and Tasks', depends_on_ls=[], description='View, edit, or archive any private Project in this instance.', role_membership_ls=['810756122']), DomoGrant(id='certifiedcontent.admin', display_group='WORKFLOWS', title='Manage Certified Content', depends_on_ls=['ui.admin'], description='Create, edit and delete certification processes. View, edit and remove the certification of any certified entity. Cancel any requested or pending certification request. Certify any entity with one step certification.', role_membership_ls=['1', '104295428', '275763436', '810756122', '1927158482', '1563101750']), DomoGrant(id='certifiedcontent.request', display_group='WORKFLOWS', title='Request certification', depends_on_ls=[], description='Submit a certification request for content you have access to.', role_membership_ls=['1', '2', '3', '275763436', '4', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='approvalcenter.admin', display_group='WORKFLOWS', title='Manage all approvals', depends_on_ls=['ui.admin'], description='View, edit, cancel, or share any request submitted through Approval Center.', role_membership_ls=['1', '810756122']), DomoGrant(id='appstore.admin', display_group='APPSTORE', title='Manage Appstore', depends_on_ls=[], description='View listings of installed Apps, uninstall previously installed Apps, and approve newly submitted Apps in this instance.', role_membership_ls=['1', '104295428', '275763436', '810756122', '1927158482']), DomoGrant(id='appstore.edit', display_group='APPSTORE', title='Use Appstore', depends_on_ls=[], description='Install and use Apps from the Appstore. Uninstall Apps that you previously installed.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='appstore.read', display_group='APPSTORE', title='View Appstore', depends_on_ls=[], description='View the Appstore and App information.', role_membership_ls=['1', '2', '3', '275763436', '4', '810756122', '1927158482', '2097317660']), DomoGrant(id='appstore.payments.manage', display_group='APPSTORE', title='Manage Appstore payments', depends_on_ls=[], description='Manage methods of receiving payments within the Appstore.', role_membership_ls=['1', '810756122']), DomoGrant(id='domoapps.read', display_group='DOMO_APPS', title='View DomoApps', depends_on_ls=[], description='View custom DomoApps to which you have access.', role_membership_ls=['1', '2', '3', '275763436', '4', '810756122', '1927158482', '2097317660']), DomoGrant(id='domoapps.edit', display_group='DOMO_APPS', title='Create DomoApps', depends_on_ls=[], description='Create, edit and upload custom DomoApps.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='app.admin', display_group='DOMO_APPS', title='Manage DomoApps', depends_on_ls=[], description='View and manage all custom apps.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='app.ddx', display_group='DOMO_APPS', title='Create DDX Apps', depends_on_ls=[], description='Create and edit DDX apps.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='datastore.create', display_group='DATA', title='Use AppDB', depends_on_ls=[], description='Create data in AppDB.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='datastore.admin', display_group='DATA', title='Manage AppDB', depends_on_ls=[], description='View and manage all data in AppDB.', role_membership_ls=['1', '104295428', '275763436', '810756122', '1927158482']), DomoGrant(id='workflow.create', display_group='WORKFLOWS', title='Create Workflows', depends_on_ls=[], description='Create workflow models.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='workflow.admin', display_group='WORKFLOWS', title='Manage Workflows', depends_on_ls=[], description='View and manage all workflow models and workflow instances.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='form.create', display_group='FORMS', title='Create Forms', depends_on_ls=[], description='Create new forms.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='form.admin', display_group='FORMS', title='Manage Forms', depends_on_ls=[], description='View, publish, and manage all forms, their versions, and contracts.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='queue.create', display_group='QUEUES', title='Create Task Queues', depends_on_ls=[], description='Create new task queues.', role_membership_ls=['1', '2', '3', '810756122', '2097317660']), DomoGrant(id='queue.admin', display_group='QUEUES', title='Manage Task Queues', depends_on_ls=[], description='Create, view, and manage all task queues.', role_membership_ls=['1', '810756122']), DomoGrant(id='content.card.embed', display_group='CARDS_PAGES', title='Embed content', depends_on_ls=[], description='Use Domo Everywhere to embed Cards and Dashboards externally, with or without authentication.', role_membership_ls=['1', '2', '3', '275763436', '1662852841', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='content.card.edit', display_group='CARDS_PAGES', title='Edit Cards', depends_on_ls=['ui.admin'], description='Create, edit and delete Cards, Drill views, and Beast Modes to which you have access. Share cards to which you have access.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='content.card.analyzerview', display_group='CARDS_PAGES', title='Create DataSet views in Analyzer', depends_on_ls=[], description='Create and edit DataSet views in Analyzer', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='content.page.edit', display_group='CARDS_PAGES', title='Edit Pages', depends_on_ls=['ui.admin'], description='Create, edit and delete Pages, styles, templates, and layouts.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='content.export', display_group='CARDS_PAGES', title='Export from Domo', depends_on_ls=[], description='Create Scheduled Reports and export to email, print, PowerPoint, CSV, and Excel.', role_membership_ls=['1', '2', '3', '275763436', '4', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='content.admin', display_group='CARDS_PAGES', title='Manage all Cards, Pages and Data apps', depends_on_ls=['ui.admin'], description='View, create, edit, share and delete any Card or Page or Data app in this instance. Subscribe to Publications from other instances.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='content.card.narrative.edit', display_group='CARDS_PAGES', title='Edit Narrative Cards', depends_on_ls=['content.card.edit'], description='"Create and edit natural language generated narratives in notebook cards.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='content.variable.edit', display_group='CARDS_PAGES', title='Edit Variables', depends_on_ls=['content.card.edit'], description='Create, edit and delete Variables', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='content.dataapp.edit', display_group='CARDS_PAGES', title='Edit Data app', depends_on_ls=['content.page.edit', 'ui.admin'], description='View, create, edit, share and delete Data app', role_membership_ls=['1', '2', '3', '275763436', '810756122']), DomoGrant(id='saasaas.edit', display_group='SAASAAS', title='Manage Publication Groups', depends_on_ls=['ui.admin'], description='Create, edit, and delete any Publication Groups in this instance', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='account.admin', display_group='DATA', title='Manage all accounts', depends_on_ls=['account.view.all'], description='Create, edit, delete, and control sharing on any account.', role_membership_ls=['810756122']), DomoGrant(id='account.view.all', display_group='DATA', title='View all accounts', depends_on_ls=[], description='View all accounts in this instance.', role_membership_ls=['810756122']), DomoGrant(id='dataset.manage', display_group='DATA', title='Edit DataSet', depends_on_ls=['ui.datacenter'], description='Create, edit and delete DataSets to which you have access.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='dataset.admin', display_group='DATA', title='Manage DataSet', depends_on_ls=['ui.datacenter', 'dataset.manage'], description='View, edit and delete any DataSets in this instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='dataset.export', display_group='DATA', title='Export DataSet', depends_on_ls=[], description='Export data from DataSets you have access to.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='dataset.account.create', display_group='DATA', title='Create Dataset Account', depends_on_ls=['ui.datacenter', 'dataset.manage'], description='Create accounts for DataSets in this instance.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='dataset.account.create.big.query', display_group='DATA', title='Create Google Big Query Account', depends_on_ls=[], description='Create Google Big Query accounts for DataSets in this instance.', role_membership_ls=['810756122', '1927158482']), DomoGrant(id='dataset.account.create.federated.oauth', display_group='DATA', title='Create Federated OAuth Accounts', depends_on_ls=[], description='Create Federated OAuth accounts for DataSets in this instance.', role_membership_ls=['810756122']), DomoGrant(id='cloud.admin', display_group='DATA', title='Manage Cloud Accounts', depends_on_ls=[], description='Manage cloud accounts in this instance.  Ability to edit all OAuth Configurations created by all users', role_membership_ls=['1', '104295428', '810756122']), DomoGrant(id='cloud.override', display_group='DATA', title='Override Default Cloud', depends_on_ls=[], description='Override the default cloud account when creating a new DataSet or computing a Data Flow.', role_membership_ls=['1', '810756122']), DomoGrant(id='workbench.download', display_group='DATA', title='Download Workbench', depends_on_ls=[], description='Allow download of workbench.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='workbench.enterprise.admin', display_group='WORKBENCH', title='Manage Workbench Enterprise', depends_on_ls=[], description='Allows editing of all jobs and configurations in Workbench Enterprise', role_membership_ls=['810756122']), DomoGrant(id='workbench.enterprise.edit', display_group='WORKBENCH', title='Edit Workbench Enterprise', depends_on_ls=[], description='Allows editing of all jobs in Workbench Enterprise', role_membership_ls=['810756122']), DomoGrant(id='workbench.enterprise.view', display_group='WORKBENCH', title='View Workbench Enterprise', depends_on_ls=[], description='Allow viewing jobs in Workbench Enterprise', role_membership_ls=['810756122']), DomoGrant(id='dataflow.manage', display_group='DATA', title='Edit DataFlow', depends_on_ls=[], description='Create, edit and delete DataFlows to which you have access.  Requires the Edit DataSet grant.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='dataflow.admin', display_group='DATA', title='Manage DataFlow', depends_on_ls=['dataflow.manage', 'dataflow.adrenaline'], description='View, edit and delete any DataFlows in this instance. Requires the Manage DataSet grant.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='ml.execute', display_group='DATA', title='Execute AutoML', depends_on_ls=['dataflow.manage', 'dataflow.magic'], description='Train AutoML models. Run DataFlows containing AutoML Inference actions.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='dataflow.adrenaline', display_group='DATA', title='Edit Adrenaline DataFlow', depends_on_ls=['dataflow.manage'], description='Create, edit and run Adrenaline DataFlows to which you have access.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='dataflow.magic', display_group='DATA', title='Edit Magic ETL v2 DataFlow', depends_on_ls=['dataflow.manage'], description='Create, edit and run Magic ETL v2 DataFlows to which you have access.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='alert.edit', display_group='ALERTS', title='Use Alerts', depends_on_ls=[], description='Create, edit and share any Alerts to which you have access.', role_membership_ls=['1', '2', '3', '275763436', '4', '1662852841', '5', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='alert.admin', display_group='ALERTS', title='Manage all Alerts', depends_on_ls=['alert.edit', 'alert.actions'], description="View, edit and delete any Alerts irrespective of access to underlying Cards or DataSets. Note that while this doesn't grant access to Cards or DataSets, these users will be able to see computed information as part of the alert values and/or alert history. Typically reserved for Major Domo's or Administrators", role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='alert.actions', display_group='ALERTS', title='Use Alert Actions', depends_on_ls=['alert.edit'], description='View, edit, add, or delete Alert Actions on any Alert of which the user is owner.', role_membership_ls=['1', '2', '3', '275763436', '1662852841', '810756122', '1927158482', '1563101750', '2097317660']), DomoGrant(id='goal.edit', display_group='GOALS', title='Use Goals', depends_on_ls=['alert.edit'], description='Create and edit any Goals to which you have access.', role_membership_ls=['1', '2', '3', '4', '810756122']), DomoGrant(id='goal.admin', display_group='GOALS', title='Manage all Goals', depends_on_ls=['goal.distribute', 'goal.edit'], description='Edit and delete any Goals in this instance. This should be reserved for Admins or those who administer the goals strategy in your company.', role_membership_ls=['1', '810756122']), DomoGrant(id='goal.distribute', display_group='GOALS', title='Create distributed goals', depends_on_ls=['goal.edit'], description='Create and edit Goals that are distributed in bulk to large groups of people.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='connector.admin', display_group='CONNECTORS', title='Manage Connectors', depends_on_ls=[], description='Create, edit, and delete user and group access to connectors in this instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='datascience.notebooks.create', display_group='DATA', title='Create Jupyter Workspace', depends_on_ls=[], description='Create, edit and delete Jupyter Workspaces to which you have access.  Requires the Edit DataSet grant.', role_membership_ls=['1', '2', '3', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='datascience.notebooks.admin', display_group='DATA', title='Manage Jupyter Workspace', depends_on_ls=['datascience.notebooks.create'], description='View, edit and delete any Jupyter Workspaces in this instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='publish.publication.create', display_group='PUBLISH', title='Manage Publications', depends_on_ls=[], description='Create, edit, or remove Publications.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='publish.space.admin', display_group='PUBLISH', title='Manage Domo Spaces', depends_on_ls=[], description='Request, modify, terminate, or otherwise manage Domo Spaces', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='publish.subscribers.manage', display_group='PUBLISH', title='Manage Subscribers', depends_on_ls=[], description='Create and delete subscribers.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '1563101750']), DomoGrant(id='pipeline.executor.job.create', display_group='PIPELINE_EXECUTOR', title='Create Custom Pipeline Processes', depends_on_ls=[], description='Create, edit, or remove custom pipeline processes.', role_membership_ls=['1', '2', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='pipeline.executor.job.admin', display_group='PIPELINE_EXECUTOR', title='Administer Custom Pipeline Processes', depends_on_ls=[], description='Administer custom pipeline processes.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='versions.deployment.manage', display_group='VERSIONS', title='Manage Repository Promotions', depends_on_ls=[], description='Promote repository commits in this instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='versions.repository.create', display_group='VERSIONS', title='Manage Repositories', depends_on_ls=[], description='Create, edit, and delete Sandbox repositories. Repositories store metadata of content, such as Cards and Pages, to allow them to be recreated in a Domo instance.', role_membership_ls=['1', '275763436', '810756122', '1927158482']), DomoGrant(id='versions.repository.admin', display_group='VERSIONS', title='Administer Sandbox', depends_on_ls=[], description='Administer Sandbox, including authorizing read access to Sandbox Repositories to other instances.', role_membership_ls=['1', '104295428', '275763436', '810756122', '1927158482']), DomoGrant(id='codeengine.package.manage', display_group='CODEENGINE', title='Create Code Engine Packages', depends_on_ls=[], description='Create, read, write, execute, share, delete Code Engine packages.', role_membership_ls=['1', '104295428', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='codeengine.package.admin', display_group='CODEENGINE', title='Manage Code Engine Packages', depends_on_ls=[], description='Create, view, and manage all Code Engine packages.', role_membership_ls=['1', '275763436', '810756122', '1927158482', '2097317660']), DomoGrant(id='fileshare.admin', display_group='DATA', title='Manage Fileshare Directories', depends_on_ls=['fileshare.create'], description='View, edit and delete any Fileshare Directory in this instance.', role_membership_ls=['1', '275763436', '810756122']), DomoGrant(id='fileshare.create', display_group='DATA', title='Create Fileshare Directories', depends_on_ls=[], description='Create, edit and delete Fileshare directories that you can access.', role_membership_ls=['1', '2', '3', '275763436', '810756122'])]</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>DomoRole(id=810756122, name='super_admin', description='updated via domolibrary on 2023-03-24', is_system_role=0, is_default_role=False, grant_ls=[DomoGrant(id='versions.deployment.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='buzz.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataflow.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='goal.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workflow.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='account.view.all', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='profile.achieve.assign', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datascience.notebooks.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.dataapp.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.invite', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='connector.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.analyzerview', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='fileshare.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='customer.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.variable.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='pipeline.executor.job.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='cloud.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='versions.repository.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='codeengine.package.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='appstore.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datastore.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='group.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='tasks.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='group.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='app.ddx', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='queue.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workbench.enterprise.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='domoapps.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='codeengine.package.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='domo.system.messages', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.account.create.big.query', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.space.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='authorization.roles', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='goal.distribute', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='appstore.read', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.embed', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.session.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workbench.enterprise.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='cloud.override', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datastore.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='account.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='saasaas.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='developer.token.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.subscribers.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.request', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.page.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.actions', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='ml.execute', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='audit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='domoapps.read', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='tasks.private.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.narrative.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='approvalcenter.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workbench.enterprise.view', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datascience.notebooks.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.account.create.federated.oauth', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='form.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='pipeline.executor.job.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='fileshare.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='appstore.payments.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.publication.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataflow.adrenaline', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workbench.download', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.account.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='usage.reports.view', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='goal.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='versions.repository.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='app.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataflow.magic', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataflow.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='workflow.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='form.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='queue.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='appstore.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None)], membership_ls=[])</code></pre>
</div>
</div>
</section>
</section>
<section id="create-user" class="level2">
<h2 class="anchored" data-anchor-id="create-user">create user</h2>
<p>At code execution, it is possible that a user may need to be a specific role, but that user and the role haven‚Äôt been deployed to the instance yet.</p>
<p>The proper order of operations would be to create a role and then assign the user to that role. You cannot create a user without defining their role membership</p>
<div id="7dfc31a3-6b6c-4cec-9f61-e2d8ab9fe9fc" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> domolibrary.classes.DomoUser <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dmu</span>
<span id="cb16-2"></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> upsert_user(</span>
<span id="cb16-5">    auth: dmda.DomoAuth,</span>
<span id="cb16-6">    email_address: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb16-7">    role_id: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb16-8">    debug_api: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-9">):</span>
<span id="cb16-10"></span>
<span id="cb16-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> dmu.DomoUsers.upsert_user(</span>
<span id="cb16-12">        email_address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>email_address, role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_id, auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth, debug_api<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>debug_api</span>
<span id="cb16-13">    )</span></code></pre></div>
</div>
<section id="sample-implementation-of-upsert_user" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-upsert_user">sample implementation of upsert_user</h4>
<div id="e0f37801" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">role <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roles_to_create[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb17-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_user(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth, role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, email_address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"test23@test.com"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [1802840904]}, {'key': 'displayName', 'values': ['test23@test.com - via dl 2023-03-16']}, {'key': 'userName', 'values': ['test23@test.com']}, {'key': 'emailAddress', 'values': ['test23@test.com']}, {'key': 'modified', 'values': [1680526181615]}, {'key': 'created', 'values': [1679010842000]}, {'key': 'roleId', 'values': [4]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/1802840904']}], 'id': 1802840904, 'displayName': 'test23@test.com - via dl 2023-03-16', 'roleId': 4, 'userName': 'test23@test.com', 'emailAddress': 'test23@test.com'}, is_success=True)</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="main-implementation" class="level1">
<h1>Main Implementation</h1>
<p>With one function, <a href="https://jaewilson07.github.io/domo_library/routes/role.html#create_role"><code>create_role</code></a> which calls upsert_role<code>and</code>upsert_user<code>we can quickly map over the</code>EnvRole<code>class and rapidly deploy a consistent set of roles to one or many domo instances just by swapping out the [</code>DomoAuth`](https://jaewilson07.github.io/domo_library/client/domoauth.html#domoauth) object.</p>
<p>Notice the intentional use of <code>asyncio</code> to execute code asynchronously where appropriate. We must deploy a role before deploying users, but we could configure multiple roles simultaneously because they are not dependent.</p>
<div id="95dc3398-ac80-4502-a1d1-581f7e14eec4" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dt</span>
<span id="cb19-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb19-3"></span>
<span id="cb19-4"></span>
<span id="cb19-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_role(</span>
<span id="cb19-6">    role_name, role_description, grant_ls, email_ls, auth, debug_prn: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb19-7">):</span>
<span id="cb19-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> debug_prn:</span>
<span id="cb19-9">        pprint(</span>
<span id="cb19-10">            {</span>
<span id="cb19-11">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: role_name,</span>
<span id="cb19-12">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: role_description,</span>
<span id="cb19-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grant_ls"</span>: grant_ls,</span>
<span id="cb19-14">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email_ls"</span>: email_ls,</span>
<span id="cb19-15">            }</span>
<span id="cb19-16">        )</span>
<span id="cb19-17"></span>
<span id="cb19-18">    domo_role <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> upsert_role(</span>
<span id="cb19-19">        auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth,</span>
<span id="cb19-20">        role_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role_name,</span>
<span id="cb19-21">        role_description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>role_description<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - updated </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>today()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb19-22">        grant_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grant_ls,</span>
<span id="cb19-23">    )</span>
<span id="cb19-24"></span>
<span id="cb19-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.gather(</span>
<span id="cb19-26">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb19-27">            upsert_user(auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>auth, role_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>domo_role.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, email_address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>email_address)</span>
<span id="cb19-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> email_address <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> email_ls</span>
<span id="cb19-29">        ]</span>
<span id="cb19-30">    )</span></code></pre></div>
</div>
<section id="sample-implementation-of-create_role" class="level4">
<h4 class="anchored" data-anchor-id="sample-implementation-of-create_role">sample implementation of create_role</h4>
<div id="6ec4522b" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.gather(</span>
<span id="cb20-2">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[</span>
<span id="cb20-3">        create_role(</span>
<span id="cb20-4">            role_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.name,</span>
<span id="cb20-5">            role_description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.description,</span>
<span id="cb20-6">            grant_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.grant_ls,</span>
<span id="cb20-7">            email_ls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>role.user_ls,</span>
<span id="cb20-8">            auth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>token_auth,</span>
<span id="cb20-9">        )</span>
<span id="cb20-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> role <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> roles_to_create</span>
<span id="cb20-11">    ]</span>
<span id="cb20-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[DomoGrant(id='alert.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.actions', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.embed', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.variable.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='audit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='datastore.create', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='dataset.export', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='publish.subscribers.manage', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='user.invite', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='group.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.admin', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='certifiedcontent.request', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None)]
[DomoGrant(id='alert.edit', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='alert.actions', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None), DomoGrant(id='content.card.embed', display_group=None, title=None, depends_on_ls=None, description=None, role_membership_ls=None)]</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>[[ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [308783524]}, {'key': 'displayName', 'values': ['test1']}, {'key': 'userName', 'values': ['test1@test.com']}, {'key': 'emailAddress', 'values': ['test1@test.com']}, {'key': 'modified', 'values': [1680526185953]}, {'key': 'created', 'values': [1664931963000]}, {'key': 'roleId', 'values': [1563101750]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/308783524']}], 'id': 308783524, 'displayName': 'test1', 'roleId': 1563101750, 'userName': 'test1@test.com', 'emailAddress': 'test1@test.com'}, is_success=True),
  ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [894540685]}, {'key': 'displayName', 'values': ['test2@test.com - via dl 2023-03-16']}, {'key': 'userName', 'values': ['test2@test.com']}, {'key': 'emailAddress', 'values': ['test2@test.com']}, {'key': 'modified', 'values': [1680526186003]}, {'key': 'created', 'values': [1679011012000]}, {'key': 'roleId', 'values': [1563101750]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/894540685']}], 'id': 894540685, 'displayName': 'test2@test.com - via dl 2023-03-16', 'roleId': 1563101750, 'emailAddress': 'test2@test.com', 'userName': 'test2@test.com'}, is_success=True)],
 [ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [1681443709]}, {'key': 'displayName', 'values': ['test 3']}, {'key': 'userName', 'values': ['test3@test.com']}, {'key': 'emailAddress', 'values': ['test3@test.com']}, {'key': 'modified', 'values': [1680526185934]}, {'key': 'created', 'values': [1664936244000]}, {'key': 'roleId', 'values': [1662852841]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/1681443709']}], 'id': 1681443709, 'displayName': 'test 3', 'roleId': 1662852841, 'userName': 'test3@test.com', 'emailAddress': 'test3@test.com'}, is_success=True),
  ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [1681443709]}, {'key': 'displayName', 'values': ['test 3']}, {'key': 'userName', 'values': ['test3@test.com']}, {'key': 'emailAddress', 'values': ['test3@test.com']}, {'key': 'modified', 'values': [1680526185934]}, {'key': 'created', 'values': [1664936244000]}, {'key': 'roleId', 'values': [1662852841]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/1681443709']}], 'id': 1681443709, 'displayName': 'test 3', 'roleId': 1662852841, 'userName': 'test3@test.com', 'emailAddress': 'test3@test.com'}, is_success=True),
  ResponseGetData(status=200, response={'attributes': [{'key': 'id', 'values': [663516735]}, {'key': 'displayName', 'values': ['test - updated via dl 2023-03-24']}, {'key': 'userName', 'values': ['test4@test.com']}, {'key': 'emailAddress', 'values': ['test4@test.com']}, {'key': 'modified', 'values': [1680526185955]}, {'key': 'created', 'values': [1679007751000]}, {'key': 'roleId', 'values': [1662852841]}, {'key': 'isAnonymous', 'values': [True]}, {'key': 'isSystemUser', 'values': [False]}, {'key': 'isPending', 'values': [True]}, {'key': 'isActive', 'values': [True]}, {'key': 'invitorUserId', 'values': [1893952720]}, {'key': 'avatarKey', 'values': ['/api/content/v1/avatar/USER/663516735']}], 'id': 663516735, 'displayName': 'test - updated via dl 2023-03-24', 'roleId': 1662852841, 'userName': 'test4@test.com', 'emailAddress': 'test4@test.com'}, is_success=True)]]</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <guid>https://jaewilson07.github.io/domo_library/blog/posts/2023-03-13-Custom_Roles/</guid>
  <pubDate>Sat, 23 Mar 2024 20:06:55 GMT</pubDate>
</item>
</channel>
</rss>
