# | export
class ToggleUserInvite_Error(de.DomoError):
    def __init__(self, status, domo_instance, message="failure to toggle user invite enabled"):
        super().__init__(status=status, domo_instance=domo_instance, message=message)


async def toggle_is_user_invite_enabled(
    auth: dmda.DomoAuth,
    is_enabled: bool,
    session: httpx.AsyncClient = None,
    debug_api: bool = False,
    return_raw: bool = False
) -> rgd.ResponseGetData:
    """
    Admin > Company Settings > Notifications
    """

    
    url = f"https://{auth.domo_instance}.domo.com/api/customer/v1/properties/user.invite.email.enabled"

    body = {"value": is_enabled}

    res = await gd.get_data(
        auth=auth,
        url=url,
        method="PUT",
        body=body,
        session=session,
        debug_api=debug_api,
    )

    if not res.is_success:
        raise ToggleUserInvite_Error(
            status=res.status, message=res.response, domo_instance=auth.domo_instance
        )
    
    if return_raw:
        return res

    res.response = {
                    'feature': 'user.invite.email.enabled',
                    'is_enabled': is_enabled
                    }

    return res
